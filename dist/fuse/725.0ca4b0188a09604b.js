(self.webpackChunkfuse=self.webpackChunkfuse||[]).push([[725],{32:(Go,En,It)=>{"use strict";It.d(En,{O:()=>nr});var R=It(8075),Da=It(4716),jr=It(5879),Fr=It(9862);let nr=(()=>{class xr{get progress(){return!!this.tail.length}constructor(qt){this._http=qt,this.tail=[]}sendRequest(qt,gn,Rr={},ar={}){qt=qt.toLocaleLowerCase();const yt=localStorage.getItem("accessToken");let _e={timeout:20};switch(yt&&(_e.Authorization=`Bearer ${yt}`),qt){case"get":return this.request(this._http.get(gn,{params:Rr,headers:_e,...ar}));case"post":return this.request(this._http.post(gn,Rr,{headers:_e,...ar}));case"put":return this.request(this._http.put(gn,Rr,{headers:_e,...ar}));case"delete":return this.request(this._http.delete(gn,{headers:_e,...ar}));default:throw"method not provided"}}request(qt){return this.tail.push(qt),qt.pipe((0,R.X)(0),(0,Da.x)(()=>{const gn=this.tail.indexOf(qt);this.tail.splice(gn,1)}))}static#e=this.\u0275fac=function(gn){return new(gn||xr)(jr.LFG(Fr.eN))};static#t=this.\u0275prov=jr.Yz7({token:xr,factory:xr.\u0275fac,providedIn:"root"})}return xr})()},1174:(Go,En,It)=>{"use strict";It.d(En,{J:()=>Fr});var R=It(108),Da=It(5879),jr=It(32);let Fr=(()=>{class nr{constructor(rr){this._httpWrapper=rr,this.baseUrl=R.N.apiUrl,this.enviroment=R.N}livenessDemo(rr){return this._httpWrapper.sendRequest("post",`${this.baseUrl}/v2/face-recognition/liveness/demo`,rr)}static#e=this.\u0275fac=function(qt){return new(qt||nr)(Da.LFG(jr.O))};static#t=this.\u0275prov=Da.Yz7({token:nr,factory:nr.\u0275fac,providedIn:"root"})}return nr})()},108:(Go,En,It)=>{"use strict";It.d(En,{N:()=>R});const R={production:!0,baseUrl:"/",apiUrl:"https://sandbox-api.verifik.co"}},6799:(Go,En,It)=>{"use strict";It.d(En,{JF:()=>ffe,Jd:()=>i0,Qr:()=>V0,_C:()=>WF,aK:()=>OF,ii:()=>ZA,qB:()=>pt});var R=It(5861),Da=Object.defineProperty,jr=It(6741),Fr=(e,t)=>{for(var n in t)Da(e,n,{get:t[n],enumerable:!0})};Fr({},{Abs:()=>Ko,Acos:()=>$s,Acosh:()=>As,AdadeltaOptimizer:()=>hy,AdagradOptimizer:()=>cy,AdamOptimizer:()=>fy,AdamaxOptimizer:()=>my,Add:()=>za,AddN:()=>Fs,All:()=>Zo,Any:()=>Xo,ArgMax:()=>Jo,ArgMin:()=>Yo,Asin:()=>Rs,Asinh:()=>Ds,Atan:()=>Ms,Atan2:()=>Ls,Atanh:()=>Os,AvgPool:()=>zs,AvgPool3D:()=>Qo,AvgPool3DGrad:()=>sp,AvgPoolGrad:()=>ap,BackendWasm:()=>HA,BatchMatMul:()=>Ps,BatchToSpaceND:()=>el,Bincount:()=>tl,BitwiseAnd:()=>nl,BroadcastArgs:()=>ip,BroadcastTo:()=>Pk,Callback:()=>r_,CallbackList:()=>KN,Cast:()=>Bs,Ceil:()=>Ws,ClipByValue:()=>Pa,Complex:()=>uh,ComplexAbs:()=>op,Concat:()=>rl,Conv2D:()=>Vs,Conv2DBackpropFilter:()=>ph,Conv2DBackpropInput:()=>Us,Conv3D:()=>Gs,Conv3DBackpropFilterV2:()=>al,Conv3DBackpropInputV2:()=>sl,Cos:()=>Hs,Cosh:()=>js,CropAndResize:()=>ol,Cumprod:()=>il,Cumsum:()=>qs,CustomCallback:()=>XN,DataStorage:()=>rh,DenseBincount:()=>lp,DepthToSpace:()=>ll,DepthwiseConv2dNative:()=>Ks,DepthwiseConv2dNativeBackpropFilter:()=>dh,DepthwiseConv2dNativeBackpropInput:()=>hh,Diag:()=>up,Dilation2D:()=>Zs,Dilation2DBackpropFilter:()=>pl,Dilation2DBackpropInput:()=>ul,Draw:()=>vm,ENV:()=>ym,EarlyStopping:()=>s_,Einsum:()=>ch,Elu:()=>Js,EluGrad:()=>dl,Environment:()=>Lk,Equal:()=>hl,Erf:()=>Ys,Exp:()=>Qs,ExpandDims:()=>cl,Expm1:()=>ei,FFT:()=>fh,Fill:()=>pp,FlipLeftRight:()=>fl,Floor:()=>ti,FloorDiv:()=>ni,FromPixels:()=>wh,FusedBatchNorm:()=>ri,FusedConv2D:()=>Zi,FusedDepthwiseConv2D:()=>Xi,GPGPUContext:()=>mf,GatherNd:()=>gl,GatherV2:()=>ml,GraphModel:()=>Ux,Greater:()=>yl,GreaterEqual:()=>ai,History:()=>ZN,IFFT:()=>mh,Identity:()=>si,Imag:()=>gh,InputSpec:()=>Ot,IsFinite:()=>ii,IsInf:()=>oi,IsNan:()=>li,KernelBackend:()=>ep,LRN:()=>hi,LRNGrad:()=>Sl,LayerVariable:()=>LN,LayersModel:()=>Na,LeakyRelu:()=>ui,Less:()=>bl,LessEqual:()=>xl,LinSpace:()=>vl,Log:()=>pi,Log1p:()=>di,LogSoftmax:()=>Wk,LogicalAnd:()=>wl,LogicalNot:()=>kl,LogicalOr:()=>Il,LogicalXor:()=>Bk,LowerBound:()=>PR,MathBackendCPU:()=>Qc,MathBackendWebGL:()=>gf,MatrixBandPart:()=>BR,Max:()=>ci,MaxPool:()=>mi,MaxPool3D:()=>Nl,MaxPool3DGrad:()=>hp,MaxPoolGrad:()=>dp,MaxPoolWithArgmax:()=>cp,Maximum:()=>fi,Mean:()=>gi,Min:()=>yi,Minimum:()=>bi,MirrorPad:()=>xi,Mod:()=>vi,MomentumOptimizer:()=>gy,Multinomial:()=>_l,Multiply:()=>wi,Neg:()=>Tl,NonMaxSuppressionV3:()=>El,NonMaxSuppressionV4:()=>$l,NonMaxSuppressionV5:()=>Al,NotEqual:()=>Cl,OP_SCOPE_SUFFIX:()=>Rm,OneHot:()=>ki,OnesLike:()=>Fl,Optimizer:()=>wa,OptimizerConstructors:()=>iN,Pack:()=>Rl,PadV2:()=>Ii,Pool:()=>WR,Pow:()=>Si,Prelu:()=>Ni,Prod:()=>_i,RMSPropOptimizer:()=>yy,RNN:()=>ia,RaggedGather:()=>yh,RaggedRange:()=>bh,RaggedTensorToTensor:()=>xh,Range:()=>fp,Rank:()=>Nm,Real:()=>vh,RealDiv:()=>Xs,Reciprocal:()=>Ti,Reduction:()=>Sn,Relu:()=>Ci,Relu6:()=>Ai,Reshape:()=>Dl,ResizeBilinear:()=>$i,ResizeBilinearGrad:()=>Ol,ResizeNearestNeighbor:()=>Ei,ResizeNearestNeighborGrad:()=>Ml,Reverse:()=>Fi,RotateWithOffset:()=>Jl,Round:()=>Ri,Rsqrt:()=>Di,SGDOptimizer:()=>cc,ScatterNd:()=>Ll,SearchSorted:()=>Pl,Select:()=>Bl,Selu:()=>Mi,Sequential:()=>Su,Sigmoid:()=>Pi,Sign:()=>zi,Sin:()=>Oi,Sinh:()=>Li,Slice:()=>Wl,Softmax:()=>Ui,Softplus:()=>Bi,SpaceToBatchND:()=>Vl,SparseFillEmptyRows:()=>mp,SparseReshape:()=>Gl,SparseSegmentMean:()=>gp,SparseSegmentSum:()=>yp,SparseToDense:()=>Hl,SplitV:()=>Ul,Sqrt:()=>Wi,Square:()=>bp,SquaredDifference:()=>Gi,StaticRegexReplace:()=>xp,Step:()=>Wa,StridedSlice:()=>jl,StringNGrams:()=>vp,StringSplit:()=>wp,StringToHashBucketFast:()=>kp,Sub:()=>Hi,Sum:()=>Vi,SymbolicTensor:()=>Wr,Tan:()=>ji,Tanh:()=>qi,Tensor:()=>$e,TensorBuffer:()=>Rt,TensorScatterUpdate:()=>zl,Tile:()=>Ba,TopK:()=>ql,Transform:()=>Kl,Transpose:()=>fa,Unique:()=>Ip,Unpack:()=>Zl,UnsortedSegmentSum:()=>Sp,UpperBound:()=>VR,Variable:()=>Qi,ZerosLike:()=>Xl,_FusedMatMul:()=>Ki,abs:()=>Dt,acos:()=>Xm,acosh:()=>Jm,add:()=>ee,addN:()=>xI,all:()=>Dh,any:()=>Lp,argMax:()=>ro,argMin:()=>Ym,asin:()=>Qm,asinh:()=>eg,atan:()=>tg,atan2:()=>ng,atanh:()=>rg,avgPool:()=>ya,avgPool3d:()=>ig,backend:()=>bI,backend_util:()=>N,basicLSTMCell:()=>II,batchNorm:()=>io,batchNorm2d:()=>og,batchNorm3d:()=>lg,batchNorm4d:()=>ug,batchToSpaceND:()=>Wp,bincount:()=>pg,bitwiseAnd:()=>SI,booleanMaskAsync:()=>fS,broadcastArgs:()=>NI,broadcastTo:()=>oo,broadcast_util:()=>ru,browser:()=>ed,buffer:()=>Me,callbacks:()=>_6,cast:()=>le,ceil:()=>dg,clipByValue:()=>hn,clone:()=>Zr,complex:()=>ma,concat:()=>at,concat1d:()=>hg,concat2d:()=>cg,concat3d:()=>fg,concat4d:()=>mg,constraints:()=>WN,conv1d:()=>Mh,conv2d:()=>wn,conv2dTranspose:()=>Oh,conv3d:()=>yg,conv3dTranspose:()=>bg,copyRegisteredKernels:()=>jR,cos:()=>Vp,cosh:()=>Lh,cosineWindow:()=>lc,cumprod:()=>Up,cumsum:()=>zh,customGrad:()=>Jr,data:()=>L_,denseBincount:()=>Ph,deprecationWarn:()=>Zm,depthToSpace:()=>xg,depthwiseConv2d:()=>lo,deregisterOp:()=>E6,device_util:()=>Dp,diag:()=>TI,dilation2d:()=>vg,disableDeprecationWarnings:()=>aM,dispose:()=>Ee,disposeVariables:()=>sM,div:()=>fe,divNoNan:()=>wg,dot:()=>kg,dropout:()=>ry,einsum:()=>EI,elu:()=>au,enableDebugMode:()=>rM,enableProdMode:()=>nM,enclosingPowerOfTwo:()=>ay,engine:()=>wr,ensureShape:()=>$I,env:()=>H,equal:()=>Hn,erf:()=>Ig,euclideanNorm:()=>_g,exp:()=>kn,expandDims:()=>an,expm1:()=>Tg,eye:()=>Bh,fft:()=>Yp,fill:()=>Gn,findBackend:()=>hM,findBackendFactory:()=>cM,floor:()=>ou,floorDiv:()=>Rh,forceHalfFloat:()=>bE,fused:()=>gu,gather:()=>lu,gatherND:()=>bS,gather_util:()=>_y,getBackend:()=>pM,getGradient:()=>wm,getKernel:()=>kh,getKernelsForBackend:()=>Ih,getThreadsCount:()=>Bce,gpgpu_util:()=>jC,grad:()=>u3,grads:()=>p3,greater:()=>In,greaterEqual:()=>xa,ifft:()=>mu,imag:()=>Gp,image:()=>lr,inTopKAsync:()=>xS,initializers:()=>GN,input:()=>g2,io:()=>sn,irfft:()=>tc,isFinite:()=>Cg,isInf:()=>Eg,isNaN:()=>$g,keep:()=>Bt,kernel_impls:()=>ta,layers:()=>HN,leakyRelu:()=>Hp,less:()=>uu,lessEqual:()=>Ka,linalg:()=>dy,linspace:()=>MI,loadGraphModel:()=>Mj,loadGraphModelSync:()=>Oj,loadLayersModel:()=>kG,localResponseNormalization:()=>Ag,log:()=>qn,log1p:()=>jp,logSigmoid:()=>Fg,logSoftmax:()=>Vh,logSumExp:()=>Uh,logicalAnd:()=>Ir,logicalNot:()=>qp,logicalOr:()=>Gh,logicalXor:()=>Rg,losses:()=>RS,lowerBound:()=>LI,matMul:()=>Oe,math:()=>HS,max:()=>ir,maxPool:()=>Jt,maxPool3d:()=>Dg,maxPoolWithArgmax:()=>zI,maximum:()=>Yr,mean:()=>Nt,memory:()=>Ah,meshgrid:()=>PI,metrics:()=>e_,min:()=>su,minimum:()=>Za,mirrorPad:()=>Mg,mod:()=>Og,model:()=>NG,models:()=>t_,moments:()=>Kp,movingAverage:()=>mS,mul:()=>P,multiRNNCell:()=>BI,multinomial:()=>WI,neg:()=>ft,nextFrame:()=>Cy,norm:()=>iu,notEqual:()=>ho,oneHot:()=>pu,ones:()=>Kn,onesLike:()=>Zn,op:()=>z,outerProduct:()=>VI,pad:()=>Or,pad1d:()=>UI,pad2d:()=>GI,pad3d:()=>HI,pad4d:()=>jI,pool:()=>Lg,pow:()=>ba,prelu:()=>Xp,print:()=>Km,prod:()=>zg,profile:()=>iM,raggedGather:()=>qI,raggedRange:()=>KI,raggedTensorToTensor:()=>ZI,rand:()=>XI,randomGamma:()=>eS,randomNormal:()=>qh,randomStandardNormal:()=>tS,randomUniform:()=>Xa,randomUniformInt:()=>nS,range:()=>co,ready:()=>uM,real:()=>du,reciprocal:()=>Hg,registerBackend:()=>Fh,registerCallbackConstructor:()=>TG,registerGradient:()=>Vk,registerKernel:()=>_p,registerOp:()=>C6,regularizers:()=>n_,relu:()=>tt,relu6:()=>Kh,removeBackend:()=>dM,reshape:()=>B,reverse:()=>or,reverse1d:()=>rS,reverse2d:()=>aS,reverse3d:()=>sS,reverse4d:()=>iS,rfft:()=>Qp,round:()=>Zh,rsqrt:()=>Xh,scalar:()=>we,scatterND:()=>gS,scatter_util:()=>ac,searchSorted:()=>jh,selu:()=>Jh,separableConv2d:()=>hu,sequential:()=>_G,serialization:()=>re,setBackend:()=>lM,setPlatform:()=>fM,setThreadsCount:()=>Pce,setWasmPath:()=>Lce,setWasmPaths:()=>zce,setWebGLContext:()=>fC,setdiff1dAsync:()=>oS,shared:()=>Qx,sigmoid:()=>kr,sign:()=>qg,signal:()=>FS,sin:()=>Yh,sinh:()=>Qh,slice:()=>Ve,slice1d:()=>Jp,slice2d:()=>ec,slice3d:()=>cu,slice4d:()=>fu,slice_util:()=>Vt,softmax:()=>Ja,softplus:()=>po,spaceToBatchND:()=>Zp,sparse:()=>DS,sparseToDense:()=>yS,spectral:()=>AS,split:()=>Fn,sqrt:()=>rn,square:()=>it,squaredDifference:()=>nc,squeeze:()=>Ya,stack:()=>Wt,step:()=>fo,stridedSlice:()=>Kg,string:()=>MS,sub:()=>ce,sum:()=>ge,sumOutType:()=>Ch,tan:()=>Zg,tanh:()=>so,tensor:()=>xn,tensor1d:()=>nt,tensor2d:()=>Qr,tensor3d:()=>rc,tensor4d:()=>Qa,tensor5d:()=>lS,tensor6d:()=>uS,tensorScatterUpdate:()=>dS,tensor_util:()=>Mr,test_util:()=>JI,tidy:()=>W,tile:()=>jn,time:()=>oM,topk:()=>Jg,train:()=>yo,transpose:()=>Le,truncatedNormal:()=>ic,unique:()=>Yg,unregisterGradient:()=>HR,unregisterKernel:()=>GR,unsortedSegmentSum:()=>oc,unstack:()=>$t,upcastType:()=>sr,upperBound:()=>hS,util:()=>w,valueAndGrad:()=>d3,valueAndGrads:()=>h3,variable:()=>Qg,variableGrads:()=>OI,version:()=>qce,version_converter:()=>zj,version_core:()=>AB,version_cpu:()=>Oq,version_layers:()=>lb,version_wasm:()=>Wce,version_webgl:()=>NY,webgl:()=>_Y,webgl_util:()=>cC,where:()=>Xt,whereAsync:()=>ty,zeros:()=>_t,zerosLike:()=>He});var xr=Object.create,rr=Object.defineProperty,qt=Object.getOwnPropertyDescriptor,gn=Object.getOwnPropertyNames,Rr=Object.getPrototypeOf,ar=Object.prototype.hasOwnProperty,yt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),_e=(e,t)=>{for(var n in t)rr(e,n,{get:t[n],enumerable:!0})},Ma=(e,t,n)=>(n=null!=e?xr(Rr(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of gn(t))!ar.call(e,a)&&undefined!==a&&rr(e,a,{get:()=>t[a],enumerable:!(r=qt(t,a))||r.enumerable});return e})(!t&&e&&e.__esModule?n:rr(n,"default",{value:e,enumerable:!0}),e)),tR=yt((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,O,U){this.low=0|S,this.high=0|O,this.unsigned=!!U}function a(S){return!0===(S&&S.__isLong__)}Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(S,O){var U,G,j;return O?(j=0<=(S>>>=0)&&S<256)&&(G=i[S])?G:(U=u(S,(0|S)<0?-1:0,!0),j&&(i[S]=U),U):(j=-128<=(S|=0)&&S<128)&&(G=s[S])?G:(U=u(S,S<0?-1:0,!1),j&&(s[S]=U),U)}function l(S,O){if(isNaN(S))return O?v:x;if(O){if(S<0)return v;if(S>=g)return A}else{if(S<=-y)return D;if(S+1>=y)return E}return S<0?l(-S,O).neg():u(S%m|0,S/m|0,O)}function u(S,O,U){return new r(S,O,U)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var p=Math.pow;function h(S,O,U){if(0===S.length)throw Error("empty string");if("NaN"===S||"Infinity"===S||"+Infinity"===S||"-Infinity"===S)return x;if("number"==typeof O?(U=O,O=!1):O=!!O,(U=U||10)<2||36<U)throw RangeError("radix");var G;if((G=S.indexOf("-"))>0)throw Error("interior hyphen");if(0===G)return h(S.substring(1),O,U).neg();for(var j=l(p(U,8)),K=x,Z=0;Z<S.length;Z+=8){var J=Math.min(8,S.length-Z),Y=parseInt(S.substring(Z,Z+J),U);if(J<8){var te=l(p(U,J));K=K.mul(te).add(l(Y))}else K=(K=K.mul(j)).add(l(Y))}return K.unsigned=O,K}function d(S,O){return"number"==typeof S?l(S,O):"string"==typeof S?h(S,O):u(S.low,S.high,"boolean"==typeof O?O:S.unsigned)}r.fromString=h,r.fromValue=d;var m=4294967296,g=m*m,y=g/2,b=o(1<<24),x=o(0);r.ZERO=x;var v=o(0,!0);r.UZERO=v;var I=o(1);r.ONE=I;var _=o(1,!0);r.UONE=_;var T=o(-1);r.NEG_ONE=T;var E=u(-1,2147483647,!1);r.MAX_VALUE=E;var A=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=A;var D=u(0,-2147483648,!1);r.MIN_VALUE=D;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},F.toString=function(S){if((S=S||10)<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(D)){var O=l(S),U=this.div(O),G=U.mul(O).sub(this);return U.toString(S)+G.toInt().toString(S)}return"-"+this.neg().toString(S)}for(var j=l(p(S,6),this.unsigned),K=this,Z="";;){var J=K.div(j),te=(K.sub(J.mul(j)).toInt()>>>0).toString(S);if((K=J).isZero())return te+Z;for(;te.length<6;)te="0"+te;Z=""+te+Z}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(D)?64:this.neg().getNumBitsAbs();for(var S=0!=this.high?this.high:this.low,O=31;O>0&&!(S&1<<O);O--);return 0!=this.high?O+33:O+1},F.isZero=function(){return 0===this.high&&0===this.low},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return 1==(1&this.low)},F.isEven=function(){return 0==(1&this.low)},F.equals=function(S){return a(S)||(S=d(S)),(this.unsigned===S.unsigned||this.high>>>31!=1||S.high>>>31!=1)&&this.high===S.high&&this.low===S.low},F.eq=F.equals,F.notEquals=function(S){return!this.eq(S)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(S){return this.comp(S)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(S){return this.comp(S)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(S){return this.comp(S)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(S){return this.comp(S)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(S){if(a(S)||(S=d(S)),this.eq(S))return 0;var O=this.isNegative(),U=S.isNegative();return O&&!U?-1:!O&&U?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(D)?D:this.not().add(I)},F.neg=F.negate,F.add=function(S){a(S)||(S=d(S));var te=0,ae=0,ne=0,se=0;return ne+=(se+=(65535&this.low)+(65535&S.low))>>>16,ae+=(ne+=(this.low>>>16)+(S.low>>>16))>>>16,te+=(ae+=(65535&this.high)+(65535&S.high))>>>16,te+=(this.high>>>16)+(S.high>>>16),u((ne&=65535)<<16|(se&=65535),(te&=65535)<<16|(ae&=65535),this.unsigned)},F.subtract=function(S){return a(S)||(S=d(S)),this.add(S.neg())},F.sub=F.subtract,F.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=d(S)),n)return u(n.mul(this.low,this.high,S.low,S.high),n.get_high(),this.unsigned);if(S.isZero())return x;if(this.eq(D))return S.isOdd()?D:x;if(S.eq(D))return this.isOdd()?D:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return l(this.toNumber()*S.toNumber(),this.unsigned);var G=65535&this.high,j=this.low>>>16,K=65535&this.low,J=65535&S.high,Y=S.low>>>16,te=65535&S.low,ae=0,ne=0,se=0,ie=0;return se+=(ie+=K*te)>>>16,ne+=(se+=j*te)>>>16,se&=65535,ne+=(se+=K*Y)>>>16,ae+=(ne+=G*te)>>>16,ne&=65535,ae+=(ne+=j*Y)>>>16,ne&=65535,ae+=(ne+=K*J)>>>16,ae+=(this.high>>>16)*te+G*Y+j*J+K*(S.high>>>16),u((se&=65535)<<16|(ie&=65535),(ae&=65535)<<16|(ne&=65535),this.unsigned)},F.mul=F.multiply,F.divide=function(S){if(a(S)||(S=d(S)),S.isZero())throw Error("division by zero");var U,G,j;if(n)return this.unsigned||-2147483648!==this.high||-1!==S.low||-1!==S.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,S.low,S.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?v:x;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return v;if(S.gt(this.shru(1)))return _;j=v}else{if(this.eq(D))return S.eq(I)||S.eq(T)?D:S.eq(D)?I:(U=this.shr(1).div(S).shl(1)).eq(x)?S.isNegative()?I:T:(G=this.sub(S.mul(U)),j=U.add(G.div(S)));if(S.eq(D))return this.unsigned?v:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();j=x}for(G=this;G.gte(S);){U=Math.max(1,Math.floor(G.toNumber()/S.toNumber()));for(var Z=Math.ceil(Math.log(U)/Math.LN2),J=Z<=48?1:p(2,Z-48),Y=l(U),te=Y.mul(S);te.isNegative()||te.gt(G);)te=(Y=l(U-=J,this.unsigned)).mul(S);Y.isZero()&&(Y=I),j=j.add(Y),G=G.sub(te)}return j},F.div=F.divide,F.modulo=function(S){return a(S)||(S=d(S)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,S.low,S.high),n.get_high(),this.unsigned):this.sub(this.div(S).mul(S))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return u(~this.low,~this.high,this.unsigned)},F.and=function(S){return a(S)||(S=d(S)),u(this.low&S.low,this.high&S.high,this.unsigned)},F.or=function(S){return a(S)||(S=d(S)),u(this.low|S.low,this.high|S.high,this.unsigned)},F.xor=function(S){return a(S)||(S=d(S)),u(this.low^S.low,this.high^S.high,this.unsigned)},F.shiftLeft=function(S){return a(S)&&(S=S.toInt()),0==(S&=63)?this:S<32?u(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):u(0,this.low<<S-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(S){return a(S)&&(S=S.toInt()),0==(S&=63)?this:S<32?u(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):u(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),0==(S&=63))return this;var O=this.high;return S<32?u(this.low>>>S|O<<32-S,O>>>S,this.unsigned):u(32===S?O:O>>>S-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},F.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var S=this.high,O=this.low;return[255&O,O>>>8&255,O>>>16&255,O>>>24,255&S,S>>>8&255,S>>>16&255,S>>>24]},F.toBytesBE=function(){var S=this.high,O=this.low;return[S>>>24,S>>>16&255,S>>>8&255,255&S,O>>>24,O>>>16&255,O>>>8&255,255&O]},r.fromBytes=function(S,O,U){return U?r.fromBytesLE(S,O):r.fromBytesBE(S,O)},r.fromBytesLE=function(S,O){return new r(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,O)},r.fromBytesBE=function(S,O){return new r(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],O)}}),nR=yt(()=>{}),rR=yt(()=>{}),aR=yt((e,t)=>{!function(n,r,a){function s(u){var p=this,h=function l(){var u=4022871197;return function(h){h=String(h);for(var d=0;d<h.length;d++){var c=.02519603282416938*(u+=h.charCodeAt(d));c-=u=c>>>0,u=(c*=u)>>>0,u+=4294967296*(c-=u)}return 2.3283064365386963e-10*(u>>>0)}}();p.next=function(){var d=2091639*p.s0+2.3283064365386963e-10*p.c;return p.s0=p.s1,p.s1=p.s2,p.s2=d-(p.c=0|d)},p.c=1,p.s0=h(" "),p.s1=h(" "),p.s2=h(" "),p.s0-=h(u),p.s0<0&&(p.s0+=1),p.s1-=h(u),p.s1<0&&(p.s1+=1),p.s2-=h(u),p.s2<0&&(p.s2+=1),h=null}function i(u,p){return p.c=u.c,p.s0=u.s0,p.s1=u.s1,p.s2=u.s2,p}function o(u,p){var h=new s(u),d=p&&p.state,c=h.next;return c.int32=function(){return 4294967296*h.next()|0},c.double=function(){return c()+11102230246251565e-32*(2097152*c()|0)},c.quick=c,d&&("object"==typeof d&&i(d,h),c.state=function(){return i(h,{})}),c}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.alea=o}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),sR=yt((e,t)=>{!function(n,r,a){function s(l){var u=this,p="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(0|l)?u.x=l:p+=l;for(var h=0;h<p.length+64;h++)u.x^=0|p.charCodeAt(h),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do{var m=((p.next()>>>11)+(p.next()>>>0)/4294967296)/(1<<21)}while(0===m);return m},d.int32=p.next,d.quick=d,h&&("object"==typeof h&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),iR=yt((e,t)=>{!function(n,r,a){function s(l){var u=this,p="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^d^d<<1)|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(0|l)?u.x=l:p+=l;for(var h=0;h<p.length+64;h++)u.x^=0|p.charCodeAt(h),h==p.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do{var m=((p.next()>>>11)+(p.next()>>>0)/4294967296)/(1<<21)}while(0===m);return m},d.int32=p.next,d.quick=d,h&&("object"==typeof h&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),oR=yt((e,t)=>{!function(n,r,a){function s(l){var u=this;u.next=function(){var c,f,h=u.x,d=u.i;return c=h[d],f=(c^=c>>>7)^c<<24,f^=(c=h[d+1&7])^c>>>10,f^=(c=h[d+3&7])^c>>>3,f^=(c=h[d+4&7])^c<<7,c=h[d+7&7],h[d]=f^=(c^=c<<13)^c<<9,u.i=d+1&7,f},function p(h,d){var c,m=[];if(d===(0|d))m[0]=d;else for(d=""+d,c=0;c<d.length;++c)m[7&c]=m[7&c]<<15^d.charCodeAt(c)+m[c+1&7]<<13;for(;m.length<8;)m.push(0);for(c=0;c<8&&0===m[c];++c);for(8==c&&(m[7]=-1),h.x=m,h.i=0,c=256;c>0;--c)h.next()}(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){null==l&&(l=+new Date);var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do{var m=((p.next()>>>11)+(p.next()>>>0)/4294967296)/(1<<21)}while(0===m);return m},d.int32=p.next,d.quick=d,h&&(h.x&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),lR=yt((e,t)=>{!function(n,r,a){function s(l){var u=this;u.next=function(){var f,m,h=u.w,d=u.X,c=u.i;return u.w=h=h+1640531527|0,m=d[c+34&127],f=d[c=c+1&127],m^=m<<13,f^=f<<17,m=d[c]=(m^=m>>>15)^(f^=f>>>12),u.i=c,m+(h^h>>>16)|0},function p(h,d){var c,f,m,g,y,b=[],x=128;for(d===(0|d)?(f=d,d=null):(d+="\0",f=0,x=Math.max(x,d.length)),m=0,g=-32;g<x;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),0===g&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(m=0==(c=b[127&g]^=f+(y=y+1640531527|0))?m+1:0);for(m>=128&&(b[127&(d&&d.length||0)]=-1),m=127,g=512;g>0;--g)f=b[m+34&127],c=b[m=m+1&127],f^=f<<13,c^=c<<17,b[m]=(f^=f>>>15)^(c^=c>>>12);h.w=y,h.X=b,h.i=m}(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){null==l&&(l=+new Date);var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do{var m=((p.next()>>>11)+(p.next()>>>0)/4294967296)/(1<<21)}while(0===m);return m},d.int32=p.next,d.quick=d,h&&(h.X&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),uR=yt((e,t)=>{!function(n,r,a){function s(l){var u=this,p="";u.next=function(){var d=u.b,c=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^c,c=c-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^c,u.c=c=c-f|0,u.d=f<<16^c>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=0|l):p+=l;for(var h=0;h<p.length+20;h++)u.b^=0|p.charCodeAt(h),u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do{var m=((p.next()>>>11)+(p.next()>>>0)/4294967296)/(1<<21)}while(0===m);return m},d.int32=p.next,d.quick=d,h&&("object"==typeof h&&i(h,p),d.state=function(){return i(p,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),pR=yt(()=>{}),dR=yt((e,t)=>{!function(n,r,a){var c,s=256,l="random",u=a.pow(s,6),p=a.pow(2,52),h=2*p,d=s-1;function f(I,_,T){var E=[],A=b(y((_=1==_?{entropy:!0}:_||{}).entropy?[I,v(r)]:I??function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(I)),v(I)}catch{var _=n.navigator,T=_&&_.plugins;return[+new Date,n,T,n.screen,v(r)]}}(),3),E),D=new m(E),F=function(){for(var S=D.g(6),O=u,U=0;S<p;)S=(S+U)*s,O*=s,U=D.g(1);for(;S>=h;)S/=2,O/=2,U>>>=1;return(S+U)/O};return F.int32=function(){return 0|D.g(4)},F.quick=function(){return D.g(4)/4294967296},F.double=F,b(v(D.S),r),(_.pass||T||function(S,O,U,G){return G&&(G.S&&g(G,D),S.state=function(){return g(D,{})}),U?(a[l]=S,O):S})(F,A,"global"in _?_.global:this==a,_.state)}function m(I){var _,T=I.length,E=this,A=0,D=E.i=E.j=0,F=E.S=[];for(T||(I=[T++]);A<s;)F[A]=A++;for(A=0;A<s;A++)F[A]=F[D=d&D+I[A%T]+(_=F[A])],F[D]=_;(E.g=function(S){for(var O,U=0,G=E.i,j=E.j,K=E.S;S--;)O=K[G=d&G+1],U=U*s+K[d&(K[G]=K[j=d&j+O])+(K[j]=O)];return E.i=G,E.j=j,U})(s)}function g(I,_){return _.i=I.i,_.j=I.j,_.S=I.S.slice(),_}function y(I,_){var A,T=[],E=typeof I;if(_&&"object"==E)for(A in I)try{T.push(y(I[A],_-1))}catch{}return T.length?T:"string"==E?I:I+"\0"}function b(I,_){for(var E,T=I+"",A=0;A<T.length;)_[d&A]=d&(E^=19*_[d&A])+T.charCodeAt(A++);return v(_)}function v(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),r),"object"==typeof t&&t.exports){t.exports=f;try{c=pR()}catch{}}else"function"==typeof define&&It.amdO?define(function(){return f}):a["seed"+l]=f}(typeof self<"u"?self:e,[],Math)}),nh=yt((e,t)=>{var n=aR(),r=sR(),a=iR(),s=oR(),i=lR(),o=uR(),l=dR();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),Sk=yt(()=>{}),fm=yt(()=>{}),Nk=yt(()=>{}),hR=yt(()=>{}),cR=yt(()=>{}),fR=yt(()=>{}),mR=yt((e,t)=>{var r,n=(r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(r=r||__filename),function(a){function i(){return pe.buffer!=Re&&lt(pe.buffer),er}function l(){return pe.buffer!=Re&&lt(pe.buffer),dn}function u(){return pe.buffer!=Re&&lt(pe.buffer),zn}function h(){return pe.buffer!=Re&&lt(pe.buffer),Pn}var c,f,m,d=typeof(a=a||{})<"u"?a:{};d.ready=new Promise(function(M,q){c=M,f=q}),typeof process<"u"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var D,F,S,g=Object.assign({},d),y=[],x=(M,q)=>{throw q},v="object"==typeof window,I="function"==typeof importScripts,_="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,T=d.ENVIRONMENT_IS_PTHREAD||!1,E="";function A(M){return d.locateFile?d.locateFile(M,E):E+M}if(_){var G=fm(),j=Nk();let M;E=I?j.dirname(E)+"/":__dirname+"/",D=(q,ue)=>(q=Ku(q)?new URL(q):j.normalize(q),G.readFileSync(q,ue?void 0:"utf8")),S=q=>{var ue=D(q,!0);return ue.buffer||(ue=new Uint8Array(ue)),ue},F=(q,ue,Te)=>{q=Ku(q)?new URL(q):j.normalize(q),G.readFile(q,function(De,Fe){De?Te(De):ue(Fe.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof Vo))throw q}),process.on("unhandledRejection",function(q){throw q}),x=(q,ue)=>{if(Ar())throw process.exitCode=q,ue;(function U(M){M instanceof Vo||Y("exiting due to exception: "+M)})(ue),process.exit(q)},d.inspect=function(){return"[Emscripten Module object]"};try{M=hR()}catch(q){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),q}global.Worker=M.Worker}else(v||I)&&(I?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),typeof r<"u"&&r&&(E=r),E=0!==E.indexOf("blob:")?E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):"",_||(D=M=>{var q=new XMLHttpRequest;return q.open("GET",M,!1),q.send(null),q.responseText},I&&(S=M=>{var q=new XMLHttpRequest;return q.open("GET",M,!1),q.responseType="arraybuffer",q.send(null),new Uint8Array(q.response)}),F=(M,q,ue)=>{var Te=new XMLHttpRequest;Te.open("GET",M,!0),Te.responseType="arraybuffer",Te.onload=()=>{200==Te.status||0==Te.status&&Te.response?q(Te.response):ue()},Te.onerror=ue,Te.send(null)}));_&&typeof performance>"u"&&(global.performance=cR().performance);var K=console.log.bind(console),Z=console.warn.bind(console);_&&(K=M=>G.writeSync(1,M+"\n"),Z=M=>G.writeSync(2,M+"\n"));var ie,J=d.print||K,Y=d.printErr||Z;Object.assign(d,g),g=null,d.arguments&&(y=d.arguments),d.quit&&(x=d.quit),Atomics,Atomics,Atomics,d.wasmBinary&&(ie=d.wasmBinary);var ve=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&Wo("no native wasm support detected");var pe,be,Ne,Re,gt,er,dn,zn,Pn,Ie=!1,Ue=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function dt(M,q,ue){for(var Te=(q>>>=0)+ue,De=q;M[De]&&!(De>=Te);)++De;if(De-q>16&&M.buffer&&Ue)return Ue.decode(M.buffer instanceof SharedArrayBuffer?M.slice(q,De):M.subarray(q,De));for(var Fe="";q<De;){var me=M[q++];if(128&me){var ke=63&M[q++];if(192!=(224&me)){var Ct=63&M[q++];if((me=224==(240&me)?(15&me)<<12|ke<<6|Ct:(7&me)<<18|ke<<12|Ct<<6|63&M[q++])<65536)Fe+=String.fromCharCode(me);else{var yr=me-65536;Fe+=String.fromCharCode(55296|yr>>10,56320|1023&yr)}}else Fe+=String.fromCharCode((31&me)<<6|ke)}else Fe+=String.fromCharCode(me)}return Fe}function lt(M){Re=M,d.HEAP8=gt=new Int8Array(M),d.HEAP16=new Int16Array(M),d.HEAP32=dn=new Int32Array(M),d.HEAPU8=er=new Uint8Array(M),d.HEAPU16=new Uint16Array(M),d.HEAPU32=zn=new Uint32Array(M),d.HEAPF32=new Float32Array(M),d.HEAPF64=Pn=new Float64Array(M)}T&&(Re=d.buffer);var Bn=d.INITIAL_MEMORY||16777216;if(T)pe=d.wasmMemory,Re=d.buffer;else if(d.wasmMemory)pe=d.wasmMemory;else if(!((pe=new WebAssembly.Memory({initial:Bn/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw Y("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&Y("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");pe&&(Re=pe.buffer),Bn=Re.byteLength,lt(Re);var tr,$a=[],ju=[],ha=[];function Ar(){return ve}function nn(){!T&&Xd(ju)}var _s=0,qu=null,Aa=null;function Wo(M){d.onAbort&&d.onAbort(M),Y(M="Aborted("+M+")"),Ie=!0,Ne=1,M+=". Build with -sASSERTIONS for more info.";var q=new WebAssembly.RuntimeError(M);throw f(q),q}var mn;function Vf(M){return M.startsWith("data:application/octet-stream;base64,")}function Ku(M){return M.startsWith("file://")}function Uf(M){try{if(M==mn&&ie)return new Uint8Array(ie);if(S)return S(M);throw"both async and sync fetching of the wasm failed"}catch(q){Wo(q)}}Vf(mn="tfjs-backend-wasm-threaded-simd.wasm")||(mn=A(mn));var Gf={};function Vo(M){this.name="ExitStatus",this.message="Program terminated with exit("+M+")",this.status=M}function Zd(M){var q=Ae.pthreads[M];(function Pe(M,q){M||Wo(q)})(q),Ae.returnWorkerToPool(q)}function Q0(M){var q=Ae.getNewWorker();if(!q)return 6;Ae.runningWorkers.push(q),Ae.pthreads[M.pthread_ptr]=q,q.pthread_ptr=M.pthread_ptr;var ue={cmd:"run",start_routine:M.startRoutine,arg:M.arg,pthread_ptr:M.pthread_ptr};return q.runPthread=()=>{_&&q.ref(),q.postMessage(ue,M.transferList),delete q.runPthread},q.loaded&&q.runPthread(),0}function jf(M){if(T)return Ts(1,1,M);Ne=M,Ar()||(Ae.terminateAllThreads(),d.onExit&&d.onExit(M),Ie=!0),x(M,new Vo(M))}var qf=function ew(M,q){if(Ne=M,!q&&T)throw Kf(M),"unwind";jf(M)},Ae={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){T?Ae.initWorker():Ae.initMainThread()},initMainThread:function(){for(var M=8;M--;)Ae.allocateUnusedWorker()},initWorker:function(){ve=!1},setExitStatus:function(M){Ne=M},terminateAllThreads:function(){for(var M of Object.values(Ae.pthreads))Ae.returnWorkerToPool(M);for(var M of Ae.unusedWorkers)M.terminate();Ae.unusedWorkers=[]},returnWorkerToPool:function(M){var q=M.pthread_ptr;delete Ae.pthreads[q],Ae.unusedWorkers.push(M),Ae.runningWorkers.splice(Ae.runningWorkers.indexOf(M),1),M.pthread_ptr=0,_&&M.unref(),wk(q)},receiveObjectTransfer:function(M){},threadInitTLS:function(){Ae.tlsInitFunctions.forEach(M=>M())},loadWasmModuleToWorker:function(M,q){M.onmessage=Fe=>{var me=Fe.data,ke=me.cmd;if(M.pthread_ptr&&(Ae.currentProxiedOperationCallerThread=M.pthread_ptr),me.targetThread&&me.targetThread!=lm()){var Ct=Ae.pthreads[me.targetThread];return Ct?Ct.postMessage(me,me.transferList):Y('Internal error! Worker sent a message "'+ke+'" to target pthread '+me.targetThread+", but that thread no longer exists!"),void(Ae.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===ke?Jd(me.queue):"spawnThread"===ke?Q0(me):"cleanupThread"===ke?Zd(me.thread):"killThread"===ke?function J0(M){var q=Ae.pthreads[M];delete Ae.pthreads[M],q.terminate(),wk(M),Ae.runningWorkers.splice(Ae.runningWorkers.indexOf(q),1),q.pthread_ptr=0}(me.thread):"cancelThread"===ke?function Y0(M){Ae.pthreads[M].postMessage({cmd:"cancel"})}(me.thread):"loaded"===ke?(M.loaded=!0,_&&M.unref(),q&&q(M),M.runPthread&&M.runPthread()):"print"===ke?J("Thread "+me.threadId+": "+me.text):"printErr"===ke?Y("Thread "+me.threadId+": "+me.text):"alert"===ke?alert("Thread "+me.threadId+": "+me.text):"setimmediate"===me.target?M.postMessage(me):"callHandler"===ke?d[me.handler](...me.args):ke&&Y("worker sent an unknown command "+ke),Ae.currentProxiedOperationCallerThread=void 0},M.onerror=Fe=>{throw Y("worker sent an error! "+Fe.filename+":"+Fe.lineno+": "+Fe.message),Fe},_&&(M.on("message",function(Fe){M.onmessage({data:Fe})}),M.on("error",function(Fe){M.onerror(Fe)}),M.on("detachedExit",function(){}));var ue=[];for(var De of["onExit","onAbort","print","printErr"])d.hasOwnProperty(De)&&ue.push(De);M.postMessage({cmd:"load",handlers:ue,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:pe,wasmModule:be})},allocateUnusedWorker:function(){var M,q=A("tfjs-backend-wasm-threaded-simd.worker.js");M=new Worker(q),Ae.unusedWorkers.push(M)},getNewWorker:function(){return 0==Ae.unusedWorkers.length&&(Ae.allocateUnusedWorker(),Ae.loadWasmModuleToWorker(Ae.unusedWorkers[0])),Ae.unusedWorkers.pop()}};function Xd(M){for(;M.length>0;)M.shift()(d)}function Kf(M){if(T)return Ts(2,0,M);try{qf(M)}catch(q){!function tw(M){if(M instanceof Vo||"unwind"==M)return Ne;x(1,M)}(q)}}d.PThread=Ae,d.establishStackSpace=function nw(){var M=lm(),q=l()[M+52>>>2],ue=l()[M+56>>>2];XF(q,q-ue),um(q)};var Yd,Zu=[];function Zf(M,q,ue,Te){return T?Ts(3,1,M,q,ue,Te):Xf(M,q,ue,Te)}function Xf(M,q,ue,Te){if(typeof SharedArrayBuffer>"u")return Y("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var De=[];if(T&&0===De.length)return Zf(M,q,ue,Te);var me={startRoutine:ue,pthread_ptr:M,arg:Te,transferList:De};return T?(me.cmd="spawnThread",postMessage(me,De),0):Q0(me)}function Jd(M){Atomics.store(l(),M>>2,1),lm()&&KF(M),Atomics.compareExchange(l(),M>>2,1,0)}function Uo(M){Uo.shown||(Uo.shown={}),Uo.shown[M]||(Uo.shown[M]=1,_&&(M="warning: "+M),Y(M))}function Ts(M,q){var ue=arguments.length-2,Te=arguments;return function xw(M){var q=kk(),ue=M();return um(q),ue}(()=>{for(var De=ue,Fe=pm(8*De),me=Fe>>3,ke=0;ke<ue;ke++){var Ct=Te[2+ke];h()[me+ke>>>0]=Ct}return qF(M,De,Fe,q)})}d.invokeEntryPoint=function aw(M,q){var ue=function rw(M){var q=Zu[M];return q||(M>=Zu.length&&(Zu.length=M+1),Zu[M]=q=tr.get(M)),q}(M)(q);Ar()?Ae.setExitStatus(ue):ZF(ue)},d.executeNotifiedProxyingQueue=Jd,Yd=_?()=>{var M=process.hrtime();return 1e3*M[0]+M[1]/1e6}:()=>performance.timeOrigin+performance.now();var Qd=[];function ww(M){try{return pe.grow(M-Re.byteLength+65535>>>16),lt(pe.buffer),1}catch{}}function Yf(M){return T?Ts(4,1,M):52}function Qf(M,q,ue,Te,De){return T?Ts(5,1,M,q,ue,Te,De):70}var Sw=[null,[],[]];function Nw(M,q){var ue=Sw[M];0===q||10===q?((1===M?J:Y)(dt(ue,0)),ue.length=0):ue.push(q)}function em(M,q,ue,Te){if(T)return Ts(6,1,M,q,ue,Te);for(var De=0,Fe=0;Fe<ue;Fe++){var me=u()[q>>>2],ke=u()[q+4>>>2];q+=8;for(var Ct=0;Ct<ke;Ct++)Nw(M,i()[me+Ct>>>0]);De+=ke}return u()[Te>>>2]=De,0}function tm(M){return d["_"+M]}function Tw(M,q,ue,Te,De){var Fe={string:br=>{var Qu=0;if(null!=br&&0!==br){var QF=1+(br.length<<2);!function Qe(M,q,ue){(function Ye(M,q,ue,Te){if(!(Te>0))return 0;for(var De=ue>>>=0,Fe=ue+Te-1,me=0;me<M.length;++me){var ke=M.charCodeAt(me);if(ke>=55296&&ke<=57343&&(ke=65536+((1023&ke)<<10)|1023&M.charCodeAt(++me)),ke<=127){if(ue>=Fe)break;q[ue++>>>0]=ke}else if(ke<=2047){if(ue+1>=Fe)break;q[ue++>>>0]=192|ke>>6,q[ue++>>>0]=128|63&ke}else if(ke<=65535){if(ue+2>=Fe)break;q[ue++>>>0]=224|ke>>12,q[ue++>>>0]=128|ke>>6&63,q[ue++>>>0]=128|63&ke}else{if(ue+3>=Fe)break;q[ue++>>>0]=240|ke>>18,q[ue++>>>0]=128|ke>>12&63,q[ue++>>>0]=128|ke>>6&63,q[ue++>>>0]=128|63&ke}}q[ue>>>0]=0})(M,i(),q,ue)}(br,Qu=pm(QF),QF)}return Qu},array:br=>{var Qu=pm(br.length);return function _w(M,q){(function s(){return pe.buffer!=Re&&lt(pe.buffer),gt})().set(M,q>>>0)}(br,Qu),Qu}},ke=tm(M),Ct=[],yr=0;if(Te)for(var Ra=0;Ra<Te.length;Ra++){var YF=Fe[ue[Ra]];YF?(0===yr&&(yr=kk()),Ct[Ra]=YF(Te[Ra])):Ct[Ra]=Te[Ra]}var Ik=ke.apply(null,Ct);return function lge(br){return 0!==yr&&um(yr),function me(br){return"string"===q?function et(M,q){return(M>>>=0)?dt(i(),M,q):""}(br):"boolean"===q?!!br:br}(br)}(Ik)}Ae.init();var dm,hm,cm,Ew=[null,jf,Kf,Zf,Yf,Qf,em],nm={__emscripten_init_main_thread_js:function iw(M){jF(M,!I,1,!v),Ae.threadInitTLS()},__emscripten_thread_cleanup:function ow(M){T?postMessage({cmd:"cleanupThread",thread:M}):Zd(M)},__pthread_create_js:Xf,_emscripten_default_pthread_stack_size:function lw(){return 65536},_emscripten_get_now_is_monotonic:function pw(){return!0},_emscripten_notify_task_queue:function dw(M,q,ue,Te){if(M==q)setTimeout(()=>Jd(Te));else if(T)postMessage({targetThread:M,cmd:"processProxyingQueue",queue:Te});else{var De=Ae.pthreads[M];if(!De)return;De.postMessage({cmd:"processProxyingQueue",queue:Te})}return 1},_emscripten_set_offscreencanvas_size:function hw(M,q,ue){return-1},abort:function cw(){Wo("")},emscripten_check_blocking_allowed:function fw(){_||I||Uo("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function mw(){return Date.now()},emscripten_get_heap_max:function gw(){return 4294901760},emscripten_get_now:Yd,emscripten_memcpy_big:function yw(M,q,ue){i().copyWithin(M>>>0,q>>>0,q+ue>>>0)},emscripten_num_logical_cores:function bw(){return _?fR().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function vw(M,q,ue){Qd.length=q;for(var Te=ue>>3,De=0;De<q;De++)Qd[De]=h()[Te+De>>>0];return(M<0?Gf[-M-1]:Ew[M]).apply(null,Qd)},emscripten_resize_heap:function kw(M){var q=i().length;if((M>>>=0)<=q)return!1;var Ct,ue=4294901760;if(M>ue)return!1;for(var De=1;De<=4;De*=2){var Fe=q*(1+.2/De);if(Fe=Math.min(Fe,M+100663296),ww(Math.min(ue,(Ct=Math.max(M,Fe))+(65536-Ct%65536)%65536)))return!0}return!1},emscripten_unwind_to_js_event_loop:function Iw(){throw"unwind"},exit:qf,fd_close:Yf,fd_seek:Qf,fd_write:em,memory:pe||d.wasmMemory},lm=(function X0(){var M={env:nm,wasi_snapshot_preview1:nm};function q(me,ke){if(d.asm=me.exports,function sw(M){Ae.tlsInitFunctions.push(M)}(d.asm._emscripten_tls_init),tr=d.asm.__indirect_function_table,function j0(M){ju.unshift(M)}(d.asm.__wasm_call_ctors),be=ke,!T){var yr=Ae.unusedWorkers.length;Ae.unusedWorkers.forEach(function(Ra){Ae.loadWasmModuleToWorker(Ra,function(){--yr||function Wf(M){if(_s--,d.monitorRunDependencies&&d.monitorRunDependencies(_s),0==_s&&(null!==qu&&(clearInterval(qu),qu=null),Aa)){var q=Aa;Aa=null,q()}}()})})}}function ue(me){q(me.instance,me.module)}function Te(me){return function Z0(){if(!ie&&(v||I)){if("function"==typeof fetch&&!Ku(mn))return fetch(mn,{credentials:"same-origin"}).then(function(M){if(!M.ok)throw"failed to load wasm binary file at '"+mn+"'";return M.arrayBuffer()}).catch(function(){return Uf(mn)});if(F)return new Promise(function(M,q){F(mn,function(ue){M(new Uint8Array(ue))},q)})}return Promise.resolve().then(function(){return Uf(mn)})}().then(function(ke){return WebAssembly.instantiate(ke,M)}).then(function(ke){return ke}).then(me,function(ke){Y("failed to asynchronously prepare wasm: "+ke),Wo(ke)})}if(T||function q0(M){_s++,d.monitorRunDependencies&&d.monitorRunDependencies(_s)}(),d.instantiateWasm)try{return d.instantiateWasm(M,q)}catch(me){Y("Module.instantiateWasm callback failed with error: "+me),f(me)}(function De(){return ie||"function"!=typeof WebAssembly.instantiateStreaming||Vf(mn)||Ku(mn)||_||"function"!=typeof fetch?Te(ue):fetch(mn,{credentials:"same-origin"}).then(function(me){return WebAssembly.instantiateStreaming(me,M).then(ue,function(Ct){return Y("wasm streaming compile failed: "+Ct),Y("falling back to ArrayBuffer instantiation"),Te(ue)})})})().catch(f)}(),d.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},d._init=function(){return(d._init=d.asm.init).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.register_tensor).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.dispose_data).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.dispose).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.Abs).apply(null,arguments)},d._Acos=function(){return(d._Acos=d.asm.Acos).apply(null,arguments)},d._Acosh=function(){return(d._Acosh=d.asm.Acosh).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.Add).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.AddN).apply(null,arguments)},d._All=function(){return(d._All=d.asm.All).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.Any).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.ArgMax).apply(null,arguments)},d._ArgMin=function(){return(d._ArgMin=d.asm.ArgMin).apply(null,arguments)},d._Asin=function(){return(d._Asin=d.asm.Asin).apply(null,arguments)},d._Asinh=function(){return(d._Asinh=d.asm.Asinh).apply(null,arguments)},d._Atan=function(){return(d._Atan=d.asm.Atan).apply(null,arguments)},d._Atan2=function(){return(d._Atan2=d.asm.Atan2).apply(null,arguments)},d._Atanh=function(){return(d._Atanh=d.asm.Atanh).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.AvgPool).apply(null,arguments)},d._AvgPool3D=function(){return(d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},d._AvgPool3DGrad=function(){return(d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},d._AvgPoolGrad=function(){return(d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},d._Bincount=function(){return(d._Bincount=d.asm.Bincount).apply(null,arguments)},d._BitwiseAnd=function(){return(d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.Ceil).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.Conv2D).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},d._Conv3D=function(){return(d._Conv3D=d.asm.Conv3D).apply(null,arguments)},d._Conv3DBackpropFilterV2=function(){return(d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},d._Conv3DBackpropInputV2=function(){return(d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Cos).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.Cosh).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},d._Cumprod=function(){return(d._Cumprod=d.asm.Cumprod).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Cumsum).apply(null,arguments)},d._DenseBincount=function(){return(d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},d._Diag=function(){return(d._Diag=d.asm.Diag).apply(null,arguments)},d._Dilation2D=function(){return(d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},d._Dilation2DBackpropFilter=function(){return(d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},d._Dilation2DBackpropInput=function(){return(d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.Elu).apply(null,arguments)},d._EluGrad=function(){return(d._EluGrad=d.asm.EluGrad).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.Equal).apply(null,arguments)},d._Erf=function(){return(d._Erf=d.asm.Erf).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.Exp).apply(null,arguments)},d._Expm1=function(){return(d._Expm1=d.asm.Expm1).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.Floor).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.Gather).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.GatherNd).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.Greater).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},d._IsFinite=function(){return(d._IsFinite=d.asm.IsFinite).apply(null,arguments)},d._IsInf=function(){return(d._IsInf=d.asm.IsInf).apply(null,arguments)},d._IsNan=function(){return(d._IsNan=d.asm.IsNan).apply(null,arguments)},d._LRN=function(){return(d._LRN=d.asm.LRN).apply(null,arguments)},d._LRNGrad=function(){return(d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.Less).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d._LinSpace=function(){return(d._LinSpace=d.asm.LinSpace).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.Log).apply(null,arguments)},d._Log1p=function(){return(d._Log1p=d.asm.Log1p).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},d._LogicalNot=function(){return(d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},d._LogicalOr=function(){return(d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},d._LogicalXor=function(){return(d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.Max).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.MaxPool).apply(null,arguments)},d._MaxPool3D=function(){return(d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},d._MaxPool3DGrad=function(){return(d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},d._MaxPoolGrad=function(){return(d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},d._MaxPoolWithArgmax=function(){return(d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.Maximum).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.Mean).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.Min).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.Minimum).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},d._Mod=function(){return(d._Mod=d.asm.Mod).apply(null,arguments)},d._Multinomial=function(){return(d._Multinomial=d.asm.Multinomial).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.Multiply).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.Neg).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.NotEqual).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.OneHot).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.PadV2).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Pow).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Prelu).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Prod).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.RealDiv).apply(null,arguments)},d._Reciprocal=function(){return(d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Relu).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.Relu6).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},d._ResizeBilinearGrad=function(){return(d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},d._ResizeNearestNeighbor=function(){return(d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},d._ResizeNearestNeighborGrad=function(){return(d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Reverse).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Round).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},d._SearchSorted=function(){return(d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.SelectV2).apply(null,arguments)},d._Selu=function(){return(d._Selu=d.asm.Selu).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},d._Sign=function(){return(d._Sign=d.asm.Sign).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Sin).apply(null,arguments)},d._Sinh=function(){return(d._Sinh=d.asm.Sinh).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Softmax).apply(null,arguments)},d._Softplus=function(){return(d._Softplus=d.asm.Softplus).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},d._SparseToDense=function(){return(d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Sqrt).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Square).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.Step).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Sub).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Sum).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.Tan).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.Tanh).apply(null,arguments)},d._TensorScatterUpdate=function(){return(d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Tile).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.TopK).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.Transform).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Transpose).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},d._malloc=function(){return(d._malloc=d.asm.malloc).apply(null,arguments)},d._free=function(){return(d._free=d.asm.free).apply(null,arguments)},d.__emscripten_tls_init=function(){return(d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},d._pthread_self=function(){return(lm=d._pthread_self=d.asm.pthread_self).apply(null,arguments)}),jF=(d.___errno_location=function(){return(d.___errno_location=d.asm.__errno_location).apply(null,arguments)},d.__emscripten_thread_init=function(){return(jF=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)}),qF=(d.__emscripten_thread_crashed=function(){return(d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},d._emscripten_main_thread_process_queued_calls=function(){return(d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(qF=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),KF=(d._emscripten_dispatch_to_thread_=function(){return(d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},d.__emscripten_proxy_execute_task_queue=function(){return(KF=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),wk=d.__emscripten_thread_free_data=function(){return(wk=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},ZF=d.__emscripten_thread_exit=function(){return(ZF=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},XF=d._emscripten_stack_set_limits=function(){return(XF=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},kk=d.stackSave=function(){return(kk=d.stackSave=d.asm.stackSave).apply(null,arguments)},um=d.stackRestore=function(){return(um=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},pm=d.stackAlloc=function(){return(pm=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)};function JF(M){if(M=M||y,!(_s>0)){if(T)return c(d),nn(),void startWorker(d);(function Ns(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)M=d.preRun.shift(),$a.unshift(M);var M;Xd($a)})(),_s>0||(d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),q()},1)):q())}function q(){dm||(dm=!0,d.calledRun=!0,!Ie&&(nn(),c(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function Bf(){if(!T){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)M=d.postRun.shift(),ha.unshift(M);Xd(ha)}var M}()))}}if(d.dynCall_iijjiiii=function(){return(d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},d.dynCall_jiji=function(){return(d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},d.keepRuntimeAlive=Ar,d.wasmMemory=pe,d.cwrap=function Cw(M,q,ue,Te){var De=(ue=ue||[]).every(me=>"number"===me||"boolean"===me);return"string"!==q&&De&&!Te?tm(M):function(){return Tw(M,q,ue,arguments)}},d.ExitStatus=Vo,d.PThread=Ae,Aa=function M(){dm||JF(),dm||(Aa=M)},d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(JF(),m&&(hm={uncaughtException:process.listeners("uncaughtException").filter(function(M){return!m.uncaughtException.indexOf(M)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(M){return!m.unhandledRejection.indexOf(M)>-1})}),typeof WasmBackendModule<"u")cm=WasmBackendModule;else{if(!(typeof a<"u"))throw new Error("Could not find wasm module in post.js");cm=a}if(hm){var oge=cm._dispose;cm._dispose=function(){oge(),hm.uncaughtException.forEach(function(M){process.removeListener("uncaughtException",M)}),hm.unhandledRejection.forEach(function(M){process.removeListener("unhandledRejection",M)})}}return a.ready});"object"==typeof e&&"object"==typeof t?t.exports=n:"function"==typeof define&&It.amdO?define([],function(){return n}):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=n)}),gR=yt((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'}),yR=yt((e,t)=>{var r,n=(r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(r=r||__filename),function(a){var i,o,l,s=typeof(a=a||{})<"u"?a:{};s.ready=new Promise(function(X,oe){i=X,o=oe}),typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var b,x,v,u=Object.assign({},s),p=[],c="object"==typeof window,f="function"==typeof importScripts,m="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g="";if(m){var T=fm(),E=Nk();g=f?E.dirname(g)+"/":__dirname+"/",b=(X,oe)=>(X=Ns(X)?new URL(X):E.normalize(X),T.readFileSync(X,oe?void 0:"utf8")),v=X=>{var oe=b(X,!0);return oe.buffer||(oe=new Uint8Array(oe)),oe},x=(X,oe,Se)=>{X=Ns(X)?new URL(X):E.normalize(X),T.readFile(X,function(Ke,wt){Ke?Se(Ke):oe(wt.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),p=process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof qu))throw X}),process.on("unhandledRejection",function(X){throw X}),s.inspect=function(){return"[Emscripten Module object]"}}else(c||f)&&(f?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",b=X=>{var oe=new XMLHttpRequest;return oe.open("GET",X,!1),oe.send(null),oe.responseText},f&&(v=X=>{var oe=new XMLHttpRequest;return oe.open("GET",X,!1),oe.responseType="arraybuffer",oe.send(null),new Uint8Array(oe.response)}),x=(X,oe,Se)=>{var Ke=new XMLHttpRequest;Ke.open("GET",X,!0),Ke.responseType="arraybuffer",Ke.onload=()=>{200==Ke.status||0==Ke.status&&Ke.response?oe(Ke.response):Se()},Ke.onerror=Se,Ke.send(null)});var S,A=s.print||console.log.bind(console),D=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(p=s.arguments),s.wasmBinary&&(S=s.wasmBinary),"object"!=typeof WebAssembly&&ha("no native wasm support detected");var U,ne,se,ie,Ie,G=!1,Z=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function J(X,oe,Se){for(var Ke=(oe>>>=0)+Se,wt=oe;X[wt]&&!(wt>=Ke);)++wt;if(wt-oe>16&&X.buffer&&Z)return Z.decode(X.subarray(oe,wt));for(var kt="";oe<wt;){var Ge=X[oe++];if(128&Ge){var We=63&X[oe++];if(192!=(224&Ge)){var Pt=63&X[oe++];if((Ge=224==(240&Ge)?(15&Ge)<<12|We<<6|Pt:(7&Ge)<<18|We<<12|Pt<<6|63&X[oe++])<65536)kt+=String.fromCharCode(Ge);else{var gr=Ge-65536;kt+=String.fromCharCode(55296|gr>>10,56320|1023&gr)}}else kt+=String.fromCharCode((31&Ge)<<6|We)}else kt+=String.fromCharCode(Ge)}return kt}function Ue(X){ne=X,s.HEAP8=se=new Int8Array(X),s.HEAP16=new Int16Array(X),s.HEAP32=new Int32Array(X),s.HEAPU8=ie=new Uint8Array(X),s.HEAPU16=new Uint16Array(X),s.HEAPU32=Ie=new Uint32Array(X),s.HEAPF32=new Float32Array(X),s.HEAPF64=new Float64Array(X)}var Ye=[],Qe=[],Re=[],lt=0,Bn=null,tr=null;function ha(X){s.onAbort&&s.onAbort(X),D(X="Aborted("+X+")"),G=!0,X+=". Build with -sASSERTIONS for more info.";var oe=new WebAssembly.RuntimeError(X);throw o(oe),oe}var nn;function Ar(X){return X.startsWith("data:application/octet-stream;base64,")}function Ns(X){return X.startsWith("file://")}function Bf(X){try{if(X==nn&&S)return new Uint8Array(S);if(v)return v(X);throw"both async and sync fetching of the wasm failed"}catch(oe){ha(oe)}}function qu(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}function Aa(X){for(;X.length>0;)X.shift()(s)}function Vf(X){try{return U.grow(X-ne.byteLength+65535>>>16),Ue(U.buffer),1}catch{}}Ar(nn="tfjs-backend-wasm.wasm")||(nn=function y(X){return s.locateFile?s.locateFile(X,g):g+X}(nn));var X0=[null,[],[]];function UF(X,oe){var Se=X0[X];0===oe||10===oe?((1===X?A:D)(J(Se,0)),Se.length=0):Se.push(oe)}function Gf(X){return s["_"+X]}function J0(X,oe,Se,Ke,wt){var kt={string:Wn=>{var Cs=0;if(null!=Wn&&0!==Wn){var om=1+(Wn.length<<2);!function ae(X,oe,Se){(function te(X,oe,Se,Ke){if(!(Ke>0))return 0;for(var wt=Se>>>=0,kt=Se+Ke-1,Ge=0;Ge<X.length;++Ge){var We=X.charCodeAt(Ge);if(We>=55296&&We<=57343&&(We=65536+((1023&We)<<10)|1023&X.charCodeAt(++Ge)),We<=127){if(Se>=kt)break;oe[Se++>>>0]=We}else if(We<=2047){if(Se+1>=kt)break;oe[Se++>>>0]=192|We>>6,oe[Se++>>>0]=128|63&We}else if(We<=65535){if(Se+2>=kt)break;oe[Se++>>>0]=224|We>>12,oe[Se++>>>0]=128|We>>6&63,oe[Se++>>>0]=128|63&We}else{if(Se+3>=kt)break;oe[Se++>>>0]=240|We>>18,oe[Se++>>>0]=128|We>>12&63,oe[Se++>>>0]=128|We>>6&63,oe[Se++>>>0]=128|63&We}}oe[Se>>>0]=0})(X,ie,oe,Se)}(Wn,Cs=eh(om),om)}return Cs},array:Wn=>{var Cs=eh(Wn.length);return function Vo(X,oe){se.set(X,oe>>>0)}(Wn,Cs),Cs}},We=Gf(X),Pt=[],gr=0;if(Ke)for(var Fa=0;Fa<Ke.length;Fa++){var im=kt[Se[Fa]];im?(0===gr&&(gr=rm()),Pt[Fa]=im(Ke[Fa])):Pt[Fa]=Ke[Fa]}var th=We.apply(null,Pt);return function vk(Wn){return 0!==gr&&am(gr),function Ge(Wn){return"string"===oe?function Y(X,oe){return(X>>>=0)?J(ie,X,oe):""}(Wn):"boolean"===oe?!!Wn:Wn}(Wn)}(th)}var Xu,Ju,Yu,Zd={abort:function q0(){ha("")},emscripten_get_heap_max:function Wo(){return 4294901760},emscripten_memcpy_big:function K0(X,oe,Se){ie.copyWithin(X>>>0,oe>>>0,oe+Se>>>0)},emscripten_resize_heap:function Ku(X){var Pt,oe=ie.length,Se=4294901760;if((X>>>=0)>Se)return!1;for(var wt=1;wt<=4;wt*=2){var kt=oe*(1+.2/wt);if(kt=Math.min(kt,X+100663296),Vf(Math.min(Se,(Pt=Math.max(X,kt))+(65536-Pt%65536)%65536)))return!0}return!1},fd_close:function Uf(X){return 52},fd_seek:function Z0(X,oe,Se,Ke,wt){return 70},fd_write:function GF(X,oe,Se,Ke){for(var wt=0,kt=0;kt<Se;kt++){var Ge=Ie[oe>>>2],We=Ie[oe+4>>>2];oe+=8;for(var Pt=0;Pt<We;Pt++)UF(X,ie[Ge+Pt>>>0]);wt+=We}return Ie[Ke>>>2]=wt,0}},rm=(function j0(){var X={env:Zd,wasi_snapshot_preview1:Zd};function oe(Ge,We){s.asm=Ge.exports,Ue((U=s.asm.memory).buffer),function mr(X){Qe.unshift(X)}(s.asm.__wasm_call_ctors),function ju(X){if(lt--,s.monitorRunDependencies&&s.monitorRunDependencies(lt),0==lt&&(null!==Bn&&(clearInterval(Bn),Bn=null),tr)){var oe=tr;tr=null,oe()}}()}function Se(Ge){oe(Ge.instance)}function Ke(Ge){return function H0(){if(!S&&(c||f)){if("function"==typeof fetch&&!Ns(nn))return fetch(nn,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+nn+"'";return X.arrayBuffer()}).catch(function(){return Bf(nn)});if(x)return new Promise(function(X,oe){x(nn,function(Se){X(new Uint8Array(Se))},oe)})}return Promise.resolve().then(function(){return Bf(nn)})}().then(function(We){return WebAssembly.instantiate(We,X)}).then(function(We){return We}).then(Ge,function(We){D("failed to asynchronously prepare wasm: "+We),ha(We)})}if(function $a(X){lt++,s.monitorRunDependencies&&s.monitorRunDependencies(lt)}(),s.instantiateWasm)try{return s.instantiateWasm(X,oe)}catch(Ge){D("Module.instantiateWasm callback failed with error: "+Ge),o(Ge)}(function wt(){return S||"function"!=typeof WebAssembly.instantiateStreaming||Ar(nn)||Ns(nn)||m||"function"!=typeof fetch?Ke(Se):fetch(nn,{credentials:"same-origin"}).then(function(Ge){return WebAssembly.instantiateStreaming(Ge,X).then(Se,function(Pt){return D("wasm streaming compile failed: "+Pt),D("falling back to ArrayBuffer instantiation"),Ke(Se)})})})().catch(o)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s.stackSave=function(){return(rm=s.stackSave=s.asm.stackSave).apply(null,arguments)}),am=s.stackRestore=function(){return(am=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},eh=s.stackAlloc=function(){return(eh=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function sm(X){function oe(){Xu||(Xu=!0,s.calledRun=!0,!G&&(function fr(){Aa(Qe)}(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function dn(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)X=s.postRun.shift(),Re.unshift(X);var X;Aa(Re)}()))}X=X||p,lt>0||(function zt(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)X=s.preRun.shift(),Ye.unshift(X);var X;Aa(Ye)}(),lt>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),oe()},1)):oe())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function Y0(X,oe,Se,Ke){var wt=(Se=Se||[]).every(Ge=>"number"===Ge||"boolean"===Ge);return"string"!==oe&&wt&&!Ke?Gf(X):function(){return J0(X,oe,Se,arguments)}},tr=function X(){Xu||sm(),Xu||(tr=X)},s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(sm(),l&&(Ju={uncaughtException:process.listeners("uncaughtException").filter(function(X){return!l.uncaughtException.indexOf(X)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(X){return!l.unhandledRejection.indexOf(X)>-1})}),typeof a<"u")Yu=a;else{if(!(typeof WasmBackendModuleThreadedSimd<"u"))throw new Error("Could not find wasm module in post.js");Yu=WasmBackendModuleThreadedSimd}if(Ju){var xk=Yu._dispose;Yu._dispose=function(){xk(),Ju.uncaughtException.forEach(function(X){process.removeListener("uncaughtException",X)}),Ju.unhandledRejection.forEach(function(X){process.removeListener("unhandledRejection",X)})}}return a.ready});"object"==typeof e&&"object"==typeof t?t.exports=n:"function"==typeof define&&It.amdO?define([],function(){return n}):"object"==typeof e&&(e.WasmBackendModule=n)}),rh=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ep=class{refCount(e){return Vn("refCount")}incRef(e){return Vn("incRef")}timerAvailable(){return!0}time(e){return Vn("time")}read(e){return Vn("read")}readSync(e){return Vn("readSync")}readToGPU(e,t){return Vn("readToGPU")}numDataIds(){return Vn("numDataIds")}disposeData(e,t){return Vn("disposeData")}write(e,t,n){return Vn("write")}move(e,t,n,r,a){return Vn("move")}createTensorFromGPUData(e,t,n){return Vn("createTensorFromGPUData")}memory(){return Vn("memory")}floatPrecision(){return Vn("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Vn("dispose")}};function Vn(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function _k(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ah(e,t,n)}function bR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ah(e,n,r),ah(t,n,r)}function tp(e,t,n){return Math.max(e,Math.min(t,n))}function xR(e){return e%2==0?e:e+1}function ah(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function vR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function wR(e,t){let n=Math.random();return t*n+(1-n)*e}function kR(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function $(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function yn(e,t,n=""){$(ca(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Es(e){$(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ht(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function IR(e){return 0===e.length}function Tk(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function ca(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ho(e){return e%1==0}function SR(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function NR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function _R(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return _k(t),t}function np(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function TR(e,t=(a=>0),n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e())return void a();i++;let l=t(i);null!=n&&i>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()})}function CR(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function vr(e,t){let n=t.length;return $((e=null==e?t.map((r,a)=>a):[].concat(e)).every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(r=>Ho(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function Ck(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:vr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function Ek(e,t){return mm(e,t)}function mm(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $k(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Ak(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ER(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function sh(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Fk(e){if(null==e)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Oa(e){return"string"==typeof e||e instanceof String}function Rk(e){return"boolean"==typeof e}function Dk(e){return"number"==typeof e}function rp(e){return Array.isArray(e)?rp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Dk(e)?"float32":Oa(e)?"string":Rk(e)?"bool":"float32"}function La(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ih(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function jo(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Mk(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)a[i]=n[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<s;l++)a[l]=Mk(e+l*o,i,n,r)}return a}function qo(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce((a,s)=>a*s)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Mk(0,e,t,n)}function $R(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function gm(e,t){let n=oh(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function oh(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function AR(e,t){let n=e.reduce((r,a)=>r*a,1);if(null==t||"float32"===t)return qo(e,new Float32Array(n));if("int32"===t)return qo(e,new Int32Array(n));if("bool"===t)return qo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Un(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function FR(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function RR(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function lh(e){return e&&e.then&&"function"==typeof e.then}var Ok="tfjsflags",Lk=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=DR,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let r=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}getAsync(e){var t=this;return(0,R.Z)(function*(){return e in t.flags||(t.flags[e]=yield t.evaluateFlag(e)),t.flags[e]})()}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(lh(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);Ok in e&&e[Ok].split(",").forEach(t=>{let[n,r]=t.split(":");this.urlFlags[n]=function OR(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,r)})}};function DR(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(function MR(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("="))),t}function H(){return ym}var bm,ym=null;function zk(){if(null==bm){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");e=self}bm=e}return bm}function xm(e,t){let n=function zR(){let e=zk();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Ko="Abs",$s="Acos",As="Acosh",za="Add",Fs="AddN",Zo="All",Xo="Any",Jo="ArgMax",Yo="ArgMin",Rs="Asin",Ds="Asinh",Ms="Atan",Os="Atanh",Ls="Atan2",zs="AvgPool",ap="AvgPoolGrad",Qo="AvgPool3D",sp="AvgPool3DGrad",Ps="BatchMatMul",el="BatchToSpaceND",tl="Bincount",nl="BitwiseAnd",Pk="BroadcastTo",ip="BroadcastArgs",Bs="Cast",Ws="Ceil",Pa="ClipByValue",uh="Complex",op="ComplexAbs",rl="Concat",Vs="Conv2D",ph="Conv2DBackpropFilter",Us="Conv2DBackpropInput",Gs="Conv3D",al="Conv3DBackpropFilterV2",sl="Conv3DBackpropInputV2",Hs="Cos",js="Cosh",il="Cumprod",qs="Cumsum",ol="CropAndResize",lp="DenseBincount",ll="DepthToSpace",Ks="DepthwiseConv2dNative",dh="DepthwiseConv2dNativeBackpropFilter",hh="DepthwiseConv2dNativeBackpropInput",up="Diag",Zs="Dilation2D",ul="Dilation2DBackpropInput",pl="Dilation2DBackpropFilter",vm="Draw",Xs="RealDiv",ch="Einsum",Js="Elu",dl="EluGrad",Ys="Erf",hl="Equal",Qs="Exp",cl="ExpandDims",ei="Expm1",fh="FFT",pp="Fill",fl="FlipLeftRight",ti="Floor",ni="FloorDiv",ri="FusedBatchNorm",ml="GatherV2",gl="GatherNd",yl="Greater",ai="GreaterEqual",si="Identity",mh="IFFT",gh="Imag",ii="IsFinite",oi="IsInf",li="IsNan",ui="LeakyRelu",bl="Less",xl="LessEqual",vl="LinSpace",pi="Log",di="Log1p",wl="LogicalAnd",kl="LogicalNot",Il="LogicalOr",Bk="LogicalXor",Wk="LogSoftmax",PR="LowerBound",hi="LRN",Sl="LRNGrad",BR="MatrixBandPart",ci="Max",fi="Maximum",mi="MaxPool",dp="MaxPoolGrad",Nl="MaxPool3D",hp="MaxPool3DGrad",cp="MaxPoolWithArgmax",gi="Mean",yi="Min",bi="Minimum",xi="MirrorPad",vi="Mod",_l="Multinomial",wi="Multiply",Tl="Neg",Cl="NotEqual",El="NonMaxSuppressionV3",$l="NonMaxSuppressionV4",Al="NonMaxSuppressionV5",Fl="OnesLike",ki="OneHot",Rl="Pack",Ii="PadV2",WR="Pool",Si="Pow",Ni="Prelu",_i="Prod",yh="RaggedGather",bh="RaggedRange",xh="RaggedTensorToTensor",fp="Range",vh="Real",Ti="Reciprocal",Ci="Relu",Dl="Reshape",Ei="ResizeNearestNeighbor",Ml="ResizeNearestNeighborGrad",$i="ResizeBilinear",Ol="ResizeBilinearGrad",Ai="Relu6",Fi="Reverse",Ri="Round",Di="Rsqrt",Ll="ScatterNd",zl="TensorScatterUpdate",Pl="SearchSorted",Bl="Select",Mi="Selu",Wl="Slice",Oi="Sin",Li="Sinh",zi="Sign",Pi="Sigmoid",Bi="Softplus",Wi="Sqrt",Vi="Sum",Vl="SpaceToBatchND",Ul="SplitV",Ui="Softmax",mp="SparseFillEmptyRows",Gl="SparseReshape",gp="SparseSegmentMean",yp="SparseSegmentSum",Hl="SparseToDense",Gi="SquaredDifference",bp="Square",xp="StaticRegexReplace",jl="StridedSlice",vp="StringNGrams",wp="StringSplit",kp="StringToHashBucketFast",Hi="Sub",ji="Tan",qi="Tanh",Ba="Tile",ql="TopK",Kl="Transform",fa="Transpose",Ip="Unique",Zl="Unpack",Sp="UnsortedSegmentSum",VR="UpperBound",Xl="ZerosLike",Wa="Step",wh="FromPixels",Jl="RotateWithOffset",Ki="_FusedMatMul",Zi="FusedConv2D",Xi="FusedDepthwiseConv2D";function Va(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...e)}function UR(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...e)}var Yl=xm("kernelRegistry",()=>new Map),Np=xm("gradRegistry",()=>new Map);function kh(e,t){let n=km(e,t);return Yl.get(n)}function wm(e){return Np.get(e)}function Ih(e){let t=Yl.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function _p(e){let{kernelName:t,backendName:n}=e,r=km(t,n);Yl.has(r)&&Va(`The kernel '${t}' for backend '${n}' is already registered`),Yl.set(r,e)}function Vk(e){let{kernelName:t}=e;Np.has(t)&&H().getBool("DEBUG")&&Va(`Overriding the gradient for '${t}'`),Np.set(t,e)}function GR(e,t){let n=km(e,t);if(!Yl.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Yl.delete(n)}function HR(e){if(!Np.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Np.delete(e)}function jR(e,t){Ih(e).forEach(n=>{_p(Object.assign({},n,{backendName:t}))})}function km(e,t){return`${t}_${e}`}var w={};function Uk(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}_e(w,{arraysEqual:()=>ca,arraysEqualWithNull:()=>Tk,assert:()=>$,assertNonNegativeIntegerDimensions:()=>Un,assertNonNull:()=>Es,assertShapesMatch:()=>yn,bytesFromStringArray:()=>Fk,bytesPerElement:()=>sh,checkConversionForErrors:()=>$k,clamp:()=>tp,computeStrides:()=>jo,convertBackendValuesAndArrayBuffer:()=>$R,createScalarValue:()=>YR,createShuffledIndices:()=>_R,decodeString:()=>_h,distSquared:()=>kR,encodeString:()=>Ep,fetch:()=>eD,fingerPrint64:()=>JR,flatten:()=>Ga,getArrayFromDType:()=>mm,getTypedArrayFromDType:()=>Ek,hasEncodingLoss:()=>ER,hexToLong:()=>Tp,indexToLoc:()=>RR,inferDtype:()=>rp,inferFromImplicitShape:()=>CR,isBoolean:()=>Rk,isFunction:()=>La,isInt:()=>Ho,isNumber:()=>Dk,isPromise:()=>lh,isScalarShape:()=>IR,isString:()=>Oa,isTypedArray:()=>Zt,isValidDtype:()=>Ak,locToIndex:()=>FR,makeOnesTypedArray:()=>gm,makeZerosNestedTypedArray:()=>AR,makeZerosTypedArray:()=>oh,nearestDivisor:()=>ih,nearestLargerEven:()=>xR,now:()=>Cp,parseAxisParam:()=>vr,randUniform:()=>wR,repeatedTry:()=>TR,rightPad:()=>np,shuffle:()=>_k,shuffleCombo:()=>bR,sizeFromShape:()=>ht,sizeToSquarishShape:()=>NR,squeezeShape:()=>Ck,sum:()=>vR,swap:()=>ah,tanh:()=>SR,toNestedArray:()=>qo,toTypedArray:()=>Nh});var Gk=Ma(tR()),Ji=Gk.default||Gk;function Tp(e){return Ji.fromString(e,!0,16)}var Hk=Tp("c3a5c85c97cb3127"),Yi=Tp("b492b66fbe98f273"),bn=Tp("9ae16a3b2f90404f");function Im(e){return e.xor(e.shru(47))}function jk(e,t,n){let r=e.slice(t,t+n);return Ji.fromBytes(Array.from(r),!0,!0)}function ct(e,t){return jk(e,t,8)}function qk(e,t){return jk(e,t,4)}function Kt(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ua(e,t,n=Tp("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Sh(e,t,n,r){return function qR(e,t,n,r,a,s){a=a.add(e),s=Kt(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(Kt(a,44)),[a.add(r),s.add(i)]}(ct(e,t),ct(e,t+8),ct(e,t+16),ct(e,t+24),n,r)}function JR(e,t=e.length){let n=Ji.fromNumber(81,!0);if(t<=32)return t<=16?function KR(e,t=e.length){if(t>=8){let n=bn.add(2*t),r=ct(e,0).add(bn),a=ct(e,t-8);return Ua(Kt(a,37).mul(n).add(r),Kt(r,25).add(a).mul(n),n)}if(t>=4){let n=bn.add(2*t);return Ua(qk(e,0).shl(3).add(t),qk(e,t-4),n)}if(t>0){let i=t+(e[t-1]<<2);return Im(bn.mul(e[0]+(e[t>>1]<<8)).xor(Hk.mul(i))).mul(bn)}return bn}(e,t):function ZR(e,t=e.length){let n=bn.add(2*t),r=ct(e,0).mul(Yi),a=ct(e,8),s=ct(e,t-8).mul(n),i=ct(e,t-16).mul(bn);return Ua(Kt(r.add(a),43).add(Kt(s,30)).add(i),r.add(Kt(a.add(bn),18)).add(s),n)}(e,t);if(t<=64)return function XR(e,t=e.length){let n=bn.add(2*t),r=ct(e,0).mul(bn),a=ct(e,8),s=ct(e,t-8).mul(n),i=ct(e,t-16).mul(bn),o=Kt(r.add(a),43).add(Kt(s,30)).add(i),l=Ua(o,r.add(Kt(a.add(bn),18)).add(s),n),u=ct(e,16).mul(n),p=ct(e,24),h=o.add(ct(e,t-32)).mul(n),d=l.add(ct(e,t-24)).mul(n);return Ua(Kt(u.add(p),43).add(Kt(h,30)).add(d),u.add(Kt(p.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(Yi).add(113),s=Im(a.mul(bn).add(113)).mul(bn),i=[Ji.UZERO,Ji.UZERO],o=[Ji.UZERO,Ji.UZERO];r=r.mul(bn).add(ct(e,0));let l=0,u=64*(t-1>>6),p=u+(t-1&63)-63;do{r=Kt(r.add(a).add(i[0]).add(ct(e,l+8)),37).mul(Yi),a=Kt(a.add(i[1]).add(ct(e,l+48)),42).mul(Yi),r=r.xor(o[1]),a=a.add(i[0]).add(ct(e,l+40)),s=Kt(s.add(o[0]),33).mul(Yi),i=Sh(e,l,i[1].mul(Yi),r.add(o[0])),o=Sh(e,l+32,s.add(o[1]),a.add(ct(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let h=Yi.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Kt(r.add(a).add(i[0]).add(ct(e,l+8)),37).mul(h),a=Kt(a.add(i[1]).add(ct(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(ct(e,l+40))),s=Kt(s.add(o[0]),33).mul(h),i=Sh(e,l,i[1].mul(h),r.add(o[0])),o=Sh(e,l+32,s.add(o[1]),a.add(ct(e,l+16))),[s,r]=[r,s],Ua(Ua(i[0],o[0],h).add(Im(a).mul(Hk)).add(s),Ua(i[1],o[1],h).add(r),h)}function YR(e,t){return"string"===t?Ep(e):Nh([e],t)}function Nh(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ga(e)),H().getBool("DEBUG")&&$k(e,t),function QR(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)0!==Math.round(e[r])&&(n[r]=1);return n}throw new Error(`Unknown data type ${t}`)}function Cp(){return H().platform.now()}function eD(e,t){return H().platform.fetch(e,t)}function Ep(e,t="utf-8"){return t=t||"utf-8",H().platform.encode(e,t)}function _h(e,t="utf-8"){return t=t||"utf-8",H().platform.decode(e,t)}function Zt(e){return null!=H().platform.isTypedArray?H().platform.isTypedArray(e):Uk(e)}function Ga(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||lh(e)||null==e||Zt(e)&&n)t.push(e);else if(Array.isArray(e)||Zt(e))for(let r=0;r<e.length;++r)Ga(e[r],t,n);else{let r=-1;for(let a of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(a)&&(r=Math.max(r,Number(a)));for(let a=0;a<=r;a++)Ga(e[a],t,n)}return t}function nD(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var Kk=20,$p=3,Sm=7;function iD(e,t,n,r){let a=jo(t),s=function oD(e,t,n,r){let a=ht(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Fp(e):e;if(o>1)for(let u=0;u<a/s;u++){let p=u*s;for(let h=0;h<s;h++)i[h]=Math.max(i[h],Ap(l[p+h],0,n).length)}return i}(e,t,n,a),i=t.length,o=Th(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join("\n")),l.join("\n")}function Ap(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Sm))} + ${parseFloat(e[1].toFixed(Sm))}j`:Oa(e)?`'${e}'`:"bool"===n?Zk(e):parseFloat(e.toFixed(Sm)).toString(),np(r,t)}function Zk(e){return 0===e?"false":"true"}function Th(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Ap(Fp(e)[0],0,n)]:"bool"===n?[Zk(e[0])]:[e[0].toString()];if(1===l){if(o>Kk){let g=Array.from(e.slice(0,$p*i)),y=Array.from(e.slice((o-$p)*i,o*i));return"complex64"===n&&(g=Fp(g),y=Fp(y)),["["+g.map((b,x)=>Ap(b,a[x],n)).join(", ")+", ..., "+y.map((b,x)=>Ap(b,a[o-$p+x],n)).join(", ")+"]"]}return["["+("complex64"===n?Fp(e):Array.from(e)).map((m,g)=>Ap(m,a[g],n)).join(", ")+"]"]}let u=t.slice(1),p=r.slice(1),h=r[0]*i,d=[];if(o>Kk){for(let m=0;m<$p;m++){let g=m*h;d.push(...Th(e.slice(g,g+h),u,n,p,a,!1))}d.push("...");for(let m=o-$p;m<o;m++){let g=m*h;d.push(...Th(e.slice(g,g+h),u,n,p,a,m===o-1))}}else for(let m=0;m<o;m++){let g=m*h;d.push(...Th(e.slice(g,g+h),u,n,p,a,m===o-1))}let c=2===l?",":"";d[0]="["+(o>0?d[0]+c:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+c;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Fp(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Rt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ht(e),null!=n){let r=n.length;$(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||mm(t,this.size),this.strides=jo(e)}set(e,...t){0===t.length&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Dr().makeTensor(this.values,this.shape,this.dtype)}},Dr=null,Ql=null,$e=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ht(e),this.strides=jo(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var e=this;return(0,R.Z)(function*(){let t=yield e.data();return Ql.buffer(e.shape,e.dtype,t)})()}bufferSync(){return Ql.buffer(this.shape,this.dtype,this.dataSync())}array(){var e=this;return(0,R.Z)(function*(){let t=yield e.data();return qo(e.shape,t,"complex64"===e.dtype)})()}arraySync(){return qo(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var e=this;return(0,R.Z)(function*(){e.throwIfDisposed();let t=Dr().read(e.dataId);if("string"===e.dtype){let n=yield t;try{return n.map(r=>_h(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})()}dataToGPU(e){return this.throwIfDisposed(),Dr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Dr().readSync(this.dataId);if("string"===this.dtype)try{return e.map(t=>_h(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}bytes(){var e=this;return(0,R.Z)(function*(){e.throwIfDisposed();let t=yield Dr().read(e.dataId);return"string"===e.dtype?t:new Uint8Array(t.buffer)})()}dispose(){this.isDisposed||(Dr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ql.print(this,e)}clone(){return this.throwIfDisposed(),Ql.clone(this)}toString(e=!1){return iD(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ql.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Dr().makeVariable(this,e,t,n)}};function Q(){return xm("Tensor",()=>$e)}Object.defineProperty($e,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Q();var Qi=class extends $e{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ca(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Dr().disposeTensor(this),this.dataId=e.dataId,Dr().incRef(this,null)}dispose(){Dr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Qi,Symbol.hasInstance,{value:e=>e instanceof $e&&null!=e.assign&&e.assign instanceof Function});var Nm,e,_m,Tm,Cm,Em,Mr={};_e(Mr,{assertTypesMatch:()=>Yk,getTensorsInContainer:()=>$m,isTensorInList:()=>cD,makeTypesMatch:()=>St}),(e=Nm||(Nm={})).R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(_m||(_m={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Tm||(Tm={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Cm||(Cm={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Em||(Em={}));var hD={float32:Cm,int32:_m,bool:Tm,complex64:Em};function sr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return hD[e][t]}function Ch(e){return sr(e,"int32")}function Xk(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Jk(e){return typeof GPUBuffer<"u"&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function St(e,t){if(e.dtype===t.dtype)return[e,t];let n=sr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Yk(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function cD(e,t){return t.some(n=>n.id===e.id)}function $m(e){let t=[];return Qk(e,t,new Set),t}function Qk(e,t,n){if(null==e)return;if(e instanceof $e)return void t.push(e);if(!function fD(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let a in r){let s=r[a];n.has(s)||(n.add(s),Qk(s,t,n))}}function Am(e){return null!=e.kernelName}var eI=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Rp=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new eI}ready(){var e=this;return(0,R.Z)(function*(){if(null!=e.pendingBackendInit)return e.pendingBackendInit.then(()=>{});if(null!=e.backendInstance)return;let t=e.getSortedBackends();for(let n=0;n<t.length;n++){let r=t[n];if(yield e.initializeBackend(r).success)return void(yield e.setBackend(r))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Va(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}setBackend(e){var t=this;return(0,R.Z)(function*(){if(null==t.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(t.backendName=e,null==t.registry[e]){t.backendInstance=null;let{success:n,asyncInit:r}=t.initializeBackend(e);if(!(r?yield n:n))return!1}return t.backendInstance=t.registry[e],t.setupRegisteredKernels(),t.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?np(`${r}ms`,9):r.error,o=np(e,25),l=t.rank,u=t.size,p=np(t.shape.toString(),14),h="";for(let d in a){let c=a[d];if(null!=c){let f=c.shape||t.shape,m=f.length;h+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${p}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let r,s,a=()=>{r=n()},i=Cp();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:Cp()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(u=>{nD(u,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>null!=o.getExtraProfileInfo?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}}(t.backendInstance),!0})()}setupRegisteredKernels(){Ih(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ih(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof ep||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let r=++this.pendingBackendInitId,a=n.then(s=>!(r<this.pendingBackendInitId||(this.registry[e]=s,this.pendingBackendInit=null,0))).catch(s=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Va(`Initialization of backend ${e} failed`),Va(s.stack||s.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return Va(`Initialization of backend ${e} failed`),Va(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r,n=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,n){e();try{let r=n();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Rp.nextTensorId++}nextVariableId(){return Rp.nextVariableId++}clone(e){let t=L.runKernel(si,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],s=>({x:()=>L.runKernel(Bs,{x:s},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==kh(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach(o=>{a+="complex64"===o.dtype?3:1});let i=r-t-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,i,n=[],r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o,l=Am(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Am(e)){let{kernelName:c,inputs:f,attrs:m}=e,g=kh(c,this.backendName);$(null!=g,()=>`Cannot find registered kernel '${c}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let b=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b);let x=b.map(v=>null!=v.rank?v:this.makeTensorFromTensorInfo(v));if(r){let v=this.getTensorsForGradient(c,f,x);n=this.saveTensorsForBackwardMode(v)}return x}}else{let{forwardFunc:c}=e,f=m=>{r&&(n=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>c(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let d,{inputs:u,attrs:p}=e,h=Am(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()}),r&&this.addTapeNode(l,u,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(c=>null!=u[c]?u[c].shape:null),outputShapes:t.map(c=>c.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,n){let r=wm(e);if(null!=r){let i,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=a.map(l=>t[l]);let o=n.filter((l,u)=>s[u]);return i.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=e;"string"===(n=n||"float32")&&Oa(e[0])&&(a=e.map(o=>Ep(o)));let s=r.write(a,t,n),i=new $e(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let o=this.state.tensorInfo.get(s),l=Fk(a);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,n,r){return this.makeTensorFromTensorInfo({dataId:e,shape:t,dtype:n=n||"float32"},r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new $e(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Qi(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*sh(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Qi||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let n=e.size*sh(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){var t=this;return(0,R.Z)(function*(){t.state.profiling=!0;let n=t.state.numBytes,r=t.state.numTensors;t.state.activeProfile.kernels=[],t.state.activeProfile.result=yield e(),t.state.profiling=!1,t.state.activeProfile.peakBytes=Math.max(...t.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),t.state.activeProfile.newBytes=t.state.numBytes-n,t.state.activeProfile.newTensors=t.state.numTensors-r;for(let a of t.state.activeProfile.kernels)a.kernelTimeMs=yield a.kernelTimeMs,a.extraInfo=yield a.extraInfo;return t.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=wm(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=l=>(l=l.map((u,p)=>{if(null==u){let h=n[p],d=oh(h.size,h.dtype);return this.makeTensor(d,h.shape,h.dtype)}return u}),r(l.length>1?l:l[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=$m(e),n=new Set(t.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){let s=this.state.activeScope.track[a];!s.kept&&!n.has(s.id)&&s.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(a=>{!a.kept&&a.scopeId===r.id&&this.track(a)})}gradients(e,t,n,r=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(a instanceof $e,()=>"The result y returned by f() must be a tensor.");let s=function aD(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],p=u.inputs;for(let h in p){let d=p[h],c=!1;for(let f=0;f<t.length;f++)if(r[d.id]){u.outputs.forEach(m=>r[m.id]=!0),c=!0,a[u.id]=!0;break}if(c)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],p=u.inputs;for(let h=0;h<u.outputs.length;h++)if(s[u.outputs[h].id]){for(let d in p)s[p[d].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(a[u.id]&&i[u.id]){let p={};for(let d in u.inputs){let c=u.inputs[d];r[c.id]&&(p[d]=c)}let h=Object.assign({},u);h.inputs=p,h.outputs=u.outputs,o.push(h)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[a.id]=n??function mD(e){let t=gm(ht(e),"float32");return L.makeTensor(t,e,"float32")}(a.shape),function sD(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];i.push(null!=u?u:null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=n(()=>o[l]());if("float32"!==u.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let p=s.inputs[l];if(!ca(u.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${p.shape}'`);if(null==e[p.id])e[p.id]=u;else{let h=e[p.id];e[p.id]=r(h,u),h.dispose()}}}}(i,s,l=>this.tidy(l),gD);let o=t.map(l=>i[l.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:a,grads:o}})}customGrad(e){return $(La(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof $e),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};return t.forEach((i,o)=>{r[o]=i}),this.runKernelFunc({forwardFunc:(i,o)=>(n=e(...t,o),$(n.value instanceof $e,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(La(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(i,o)=>{let l=n.gradFunc(i,o),u=Array.isArray(l)?l:[l];$(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(u.every(h=>h instanceof $e),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return u.forEach((h,d)=>{p[d]=()=>h}),p},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}time(e){var t=this;return(0,R.Z)(function*(){let n=Cp(),r=yield t.backend.time(e);return r.wallMs=Cp()-n,r})()}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new eI;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function tI(){let e=zk();if(null==e._tfengine){let t=new Lk(e);e._tfengine=new Rp(t)}return function LR(e){ym=e}(e._tfengine.ENV),function uD(e){Dr=e}(()=>e._tfengine),e._tfengine}Rp.nextTensorId=0,Rp.nextVariableId=0;var L=tI();function gD(e,t){return L.runKernel(za,{a:e,b:t})}var Fm,Dp={};function bD(e){Fm=e}function xD(e){if(void 0!==Fm)return Fm;if(e||function yD(){return typeof navigator<"u"&&null!=navigator}()){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");return t?/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)):e.userAgentData&&e.userAgentData.mobile}return!1}function nI(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}_e(Dp,{isBrowser:()=>nI,isMobile:()=>xD,mockIsMobile:()=>bD});var $n=H();function qr(e,t){let n=e;if(Zt(e))return"string"===t?[]:[e.length];if(Xk(e))return[e.height,e.width*(e.channels||"RGBA").length];if(Jk(e))return[e.buffer.size/(null==t?4:sh(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Zt(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&rI(e,r,[]),r}function rI(e,t,n){if(n=n||[],!Array.isArray(e)&&!Zt(e))return void $(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)rI(e[a],r,n.concat(a))}function aI(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function C(e,t,n,r="numeric"){if(e instanceof $e)return aI(r,e.dtype,t,n),e;let a=rp(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),aI(r,a,t,n),null==e||!Zt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);let s=qr(e,a);!Zt(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Nh(e,a):Ga(e,[],!0);return L.makeTensor(i,s,a)}function Mp(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>C(a,`${t}[${s}]`,n,r))}$n.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),$n.registerFlag("IS_BROWSER",()=>nI()),$n.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),$n.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),$n.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),$n.registerFlag("PROD",()=>!1),$n.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>$n.getBool("DEBUG")),$n.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),$n.registerFlag("IS_TEST",()=>!1),$n.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>$n.getBool("DEBUG")),$n.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),$n.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),$n.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var Rm="__op";function z(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Rm;let a=(...s)=>{L.startScope(n);try{let i=r(...s);return lh(i)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(i),i}catch(i){throw L.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var ma=z({complex_:function vD(e,t){let n=C(e,"real","complex"),r=C(t,"imag","complex");return yn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),L.runKernel(uh,{real:n,imag:r})}});function Ha(e,t,n,r){if(null==r)r=rp(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Jk(e)||Xk(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return L.backend.createTensorFromGPUData(e,t||n,r)}if(!Zt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Un(t);let a=ht(t),s=ht(n);$(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<n.length;++i){let l=i!==n.length-1||n[i]!==ht(t.slice(i));$(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Zt(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Nh(e,r):Ga(e,[],!0),L.makeTensor(e,t,r)}function xn(e,t,n){return Ha(e,t,qr(e,n),n)}var Dm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Kr=class{static join(e){return new Kr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(n=>Zt(n)?n.buffer:n)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);let a=new ArrayBuffer(t-e),s=new Uint8Array(a),i=0;for(let o=n;o<this.shards.length;o++){let l=this.shards[o],u=e+i-l.start,p=i,h=Math.min(t,l.end)-l.start,d=new Uint8Array(l.buffer,u,h-u);if(s.set(d,p),i+=d.length,t<l.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function wD(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}},Eh=4;function kD(e,t){return Mm.apply(this,arguments)}function Mm(){return Mm=(0,R.Z)(function*(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],l=Array.isArray(e)?e[i].tensor:e[o];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){let p=new Promise(function(){var h=(0,R.Z)(function*(d){let c=yield l.bytes(),f=c.reduce((y,b)=>y+b.length,0)+Eh*c.length,m=new Uint8Array(f),g=0;for(let y=0;y<c.length;y++){let b=c[y],x=new Uint8Array(new Uint32Array([b.length]).buffer);m.set(x,g),g+=Eh,m.set(b,g),g+=b.length}d(m)});return function(d){return h.apply(this,arguments)}}());r.push(p)}else r.push(l.data());null!=t&&(u.group=t),n.push(u)}return{data:ID(yield Promise.all(r)),specs:n}}),Mm.apply(this,arguments)}function sI(e,t){let a,n=new Kr(e),r={},s=0;for(let i of t){let h,o=i.name,l=i.dtype,u=i.shape,p=ht(u);if("quantization"in i){let d=i.quantization;if("uint8"===d.dtype||"uint16"===d.dtype){if(!("min"in d)||!("scale"in d))throw new Error(`Weight ${i.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==d.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${i.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${l}.`)}let c=Dm[d.dtype],f=n.slice(s,s+p*c),m="uint8"===d.dtype?new Uint8Array(f):new Uint16Array(f);if("float32"===l)if("uint8"===d.dtype||"uint16"===d.dtype){h=new Float32Array(m.length);for(let g=0;g<m.length;g++)h[g]=m[g]*d.scale+d.min}else{if("float16"!==d.dtype)throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);void 0===a&&(a=$D()),h=a(m)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${o}': ${l}`);if("uint8"!==d.dtype&&"uint16"!==d.dtype)throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);h=new Int32Array(m.length);for(let g=0;g<m.length;g++)h[g]=Math.round(m[g]*d.scale+d.min)}s+=p*c}else if("string"===l){let d=ht(i.shape);h=[];for(let c=0;c<d;c++){let f=new Uint32Array(n.slice(s,s+Eh))[0];s+=Eh;let m=new Uint8Array(n.slice(s,s+f));h.push(m),s+=f}}else{let d=Dm[l],c=n.slice(s,s+p*d);if("float32"===l)h=new Float32Array(c);else if("int32"===l)h=new Int32Array(c);else if("bool"===l)h=new Uint8Array(c);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${o}': ${l}`);{h=new Float32Array(c);let f=new Float32Array(h.length/2),m=new Float32Array(h.length/2);for(let b=0;b<f.length;b++)f[b]=h[2*b],m[b]=h[2*b+1];let g=xn(f,u,"float32"),y=xn(m,u,"float32");r[o]=ma(g,y),g.dispose(),y.dispose()}}s+=p*d}"complex64"!==l&&(r[o]=xn(h,u,l))}return r}function ID(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(s=>{r.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),r.buffer}var Om=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function iI(e){return Om?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function _D(e){return Kr.join(e)}function oI(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let n=e.split("/");return n[n.length-1]}function lI(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function uI(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}function Lm(e,t){return zm.apply(this,arguments)}function zm(){return zm=(0,R.Z)(function*(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=yield t(e.weightsManifest)),uI(e,n,r)}),zm.apply(this,arguments)}function Op(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:iI(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:iI(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Kr(e.weightData).byteLength}}function pI(e){let t=[];for(let n of e)t.push(...n.weights);return t}function $D(){let e=function TD(){let e=n=>{let r=n<<13,a=0;for(;!(8388608&r);)a-=8388608,r<<=1;return r&=-8388609,a+=947912704,r|a},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function CD(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function ED(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let o=r[i];s[i]=e[n[o>>10]+(1023&o)]+t[o>>10]}return new Float32Array(a)}}var Et=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Et.instance&&(Et.instance=new Et),Et.instance}static registerSaveRouter(e){Et.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Et.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Et.getHandlers(e,"save")}static getLoadHandlers(e,t){return Et.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Et.getInstance().loadRouters:Et.getInstance().saveRouters).forEach(a=>{let s=a(e,n);null!==s&&r.push(s)}),r}},AD=e=>Et.registerSaveRouter(e),FD=e=>Et.registerLoadRouter(e),RD=e=>Et.getSaveHandlers(e),DD=(e,t)=>Et.getLoadHandlers(e,t),Pm="tensorflowjs",eo="models_store",ja="model_info_store";function dI(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Wm(e){let t=e.result;t.createObjectStore(eo,{keyPath:"modelPath"}),t.createObjectStore(ja,{keyPath:"modelPath"})}var to=class{constructor(e){if(this.indexedDB=dI(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){var t=this;return(0,R.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return t.databaseAction(t.modelPath,e)})()}load(){var e=this;return(0,R.Z)(function*(){return e.databaseAction(e.modelPath)})()}databaseAction(e,t){return new Promise((n,r)=>{let a=this.indexedDB.open(Pm,1);a.onupgradeneeded=()=>Wm(a),a.onsuccess=()=>{let s=a.result;if(null==t){let i=s.transaction(eo,"readonly"),o=i.objectStore(eo).get(this.modelPath);o.onsuccess=()=>{if(null==o.result)return s.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=l=>(s.close(),r(o.error)),i.oncomplete=()=>s.close()}else{t.weightData=Kr.join(t.weightData);let u,p,i=Op(t),o=s.transaction(ja,"readwrite"),l=o.objectStore(ja);try{u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(h){return r(h)}u.onsuccess=()=>{p=s.transaction(eo,"readwrite");let d,h=p.objectStore(eo);try{d=h.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(c){return r(c)}d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=c=>{l=o.objectStore(ja);let f=l.delete(this.modelPath);f.onsuccess=()=>(s.close(),r(d.error)),f.onerror=m=>(s.close(),r(d.error))}},u.onerror=h=>(s.close(),r(u.error)),o.oncomplete=()=>{null==p?s.close():p.oncomplete=()=>s.close()}}},a.onerror=s=>r(a.error)})}};to.URL_SCHEME="indexeddb://";var hI=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(to.URL_SCHEME)?function MD(e){return new to(e)}(e.slice(to.URL_SCHEME.length)):null;Et.registerSaveRouter(hI),Et.registerLoadRouter(hI);var ga="/",eu="tensorflowjs_models",cI="info",zD="model_topology",PD="weight_specs",BD="weight_data",WD="model_metadata";function fI(e){return{info:[eu,e,cI].join(ga),topology:[eu,e,zD].join(ga),weightSpecs:[eu,e,PD].join(ga),weightData:[eu,e,BD].join(ga),modelMetadata:[eu,e,WD].join(ga)}}function mI(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function VD(e){let t=e.split(ga);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ga)}var no=class{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=fI(this.modelPath)}save(e){var t=this;return(0,R.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Op(e),s=Kr.join(e.weightData);try{return t.LS.setItem(t.keys.info,JSON.stringify(a)),t.LS.setItem(t.keys.topology,n),t.LS.setItem(t.keys.weightSpecs,r),t.LS.setItem(t.keys.weightData,function SD(e){if(Om)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(s)),t.LS.setItem(t.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:a}}catch{throw mI(t.keys),new Error(`Failed to save model '${t.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}})()}load(){var e=this;return(0,R.Z)(function*(){let t=JSON.parse(e.LS.getItem(e.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${e.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let n={},r=JSON.parse(e.LS.getItem(e.keys.topology));if(null==r)throw new Error(`In local storage, the topology of model '${e.modelPath}' is missing.`);n.modelTopology=r;let a=JSON.parse(e.LS.getItem(e.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${e.modelPath}' are missing.`);n.weightSpecs=a;let s=e.LS.getItem(e.keys.modelMetadata);if(null!=s){let o=JSON.parse(s);n.format=o.format,n.generatedBy=o.generatedBy,n.convertedBy=o.convertedBy,null!=o.signature&&(n.signature=o.signature),null!=o.userDefinedMetadata&&(n.userDefinedMetadata=o.userDefinedMetadata),null!=o.modelInitializer&&(n.modelInitializer=o.modelInitializer),null!=o.initializerSignature&&(n.initializerSignature=o.initializerSignature),null!=o.trainingConfig&&(n.trainingConfig=o.trainingConfig)}let i=e.LS.getItem(e.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${e.modelPath}' are missing.`);return n.weightData=function ND(e){if(Om){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(i),n})()}};no.URL_SCHEME="localstorage://";var gI=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(no.URL_SCHEME)?function GD(e){return new no(e)}(e.slice(no.URL_SCHEME.length)):null;Et.registerSaveRouter(gI),Et.registerLoadRouter(gI);var tu="://",An=class{constructor(){this.managers={}}static getInstance(){return null==An.instance&&(An.instance=new An),An.instance}static registerManager(e,t){$(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(tu)&&(e=e.slice(0,e.indexOf(tu))),$(e.length>0,()=>"scheme must not be an empty string.");let n=An.getInstance();$(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=An.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(An.getInstance().managers)}};function $h(e){if(-1===e.indexOf(tu))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${An.getSchemes().join(",")}`);return{scheme:e.split(tu)[0],path:e.split(tu)[1]}}function yI(e,t){return Vm.apply(this,arguments)}function Vm(){return Vm=(0,R.Z)(function*(e,t,n=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=Et.getLoadHandlers(e);$(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=Et.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=$h(e).scheme,l=$h(e).path,u=o===$h(e).scheme,p=yield a.load();n&&u&&(yield An.getManager(o).removeModel(l));let h=yield i.save(p);return n&&!u&&(yield An.getManager(o).removeModel(l)),h.modelArtifactsInfo}),Vm.apply(this,arguments)}function jD(){return Um.apply(this,arguments)}function Um(){return Um=(0,R.Z)(function*(){let e=An.getSchemes(),t={};for(let n of e){let r=yield An.getManager(n).listModels();for(let a in r)t[n+tu+a]=r[a]}return t}),Um.apply(this,arguments)}function qD(e){return Gm.apply(this,arguments)}function Gm(){return Gm=(0,R.Z)(function*(e){let t=$h(e);return An.getManager(t.scheme).removeModel(t.path)}),Gm.apply(this,arguments)}function KD(e,t){return Hm.apply(this,arguments)}function Hm(){return Hm=(0,R.Z)(function*(e,t){return yI(e,t,!1)}),Hm.apply(this,arguments)}function ZD(e,t){return jm.apply(this,arguments)}function jm(){return jm=(0,R.Z)(function*(e,t){return yI(e,t,!0)}),jm.apply(this,arguments)}if(H().get("IS_BROWSER")){H().setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")?setTimeout(e,t):(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{n.source===window&&n.data.name===this.messageName&&(n.stopPropagation(),(0,this.functionRefs[n.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0)))}isTypedArray(e){return Uk(e)}});try{An.registerManager(no.URL_SCHEME,new class{constructor(){$(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var e=this;return(0,R.Z)(function*(){let t={},n=eu+ga,r=ga+cI;for(let a=0;a<e.LS.length;++a){let s=e.LS.key(a);s.startsWith(n)&&s.endsWith(r)&&(t[VD(s)]=JSON.parse(e.LS.getItem(s)))}return t})()}removeModel(e){var t=this;return(0,R.Z)(function*(){let n=fI(e=function UD(e){return e.startsWith(no.URL_SCHEME)?e.slice(no.URL_SCHEME.length):e}(e));if(null==t.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);let r=JSON.parse(t.LS.getItem(n.info));return mI(n),r})()}})}catch{}try{An.registerManager(to.URL_SCHEME,new class{constructor(){this.indexedDB=dI()}listModels(){var e=this;return(0,R.Z)(function*(){return new Promise((t,n)=>{let r=e.indexedDB.open(Pm,1);r.onupgradeneeded=()=>Wm(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(ja,"readonly"),i=s.objectStore(ja).getAll();i.onsuccess=()=>{let o={};for(let l of i.result)o[l.modelPath]=l.modelArtifactsInfo;t(o)},i.onerror=o=>(a.close(),n(i.error)),s.oncomplete=()=>a.close()},r.onerror=a=>n(r.error)})})()}removeModel(e){var t=this;return(0,R.Z)(function*(){return e=function OD(e){return e.startsWith(to.URL_SCHEME)?e.slice(to.URL_SCHEME.length):e}(e),new Promise((n,r)=>{let a=t.indexedDB.open(Pm,1);a.onupgradeneeded=()=>Wm(a),a.onsuccess=()=>{let u,s=a.result,i=s.transaction(ja,"readwrite"),o=i.objectStore(ja),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=o.delete(e),h=()=>{u=s.transaction(eo,"readwrite");let d=u.objectStore(eo).delete(e);d.onsuccess=()=>n(l.result.modelArtifactsInfo),d.onerror=c=>r(l.error)};p.onsuccess=h,p.onerror=d=>(h(),s.close(),r(l.error))}},l.onerror=p=>(s.close(),r(l.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},a.onerror=s=>r(a.error)})})()}})}catch{}}var qm;function Me(e,t="float32",n){return t=t||"float32",Un(e),new Rt(e,t,n)}H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new class{constructor(){this.util=rR(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=H().global.fetch?H().global.fetch(e,t):(null==qm&&(qm=nR()),qm(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var le=z({cast_:function QD(e,t){let n=C(e,"x","cast");if(!Ak(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return L.runKernel(Bs,{x:n},{dtype:t})}}),Zr=z({clone_:function eM(e){let t={x:C(e,"x","clone","string_or_numeric")};return L.runKernel(si,t)}});function Km(e,t=!1){console.log(e.toString(t))}function nM(){H().set("PROD",!0)}function rM(){H().set("DEBUG",!0)}function aM(){H().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Zm(e){H().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function sM(){L.disposeVariables()}function wr(){return L}function Ah(){return L.memory()}function iM(e){return L.profile(e)}function W(e,t){return L.tidy(e,t)}function Ee(e){$m(e).forEach(t=>t.dispose())}function Bt(e){return L.keep(e)}function oM(e){return L.time(e)}function lM(e){return L.setBackend(e)}function uM(){return L.ready()}function pM(){return L.backendName}function dM(e){L.removeBackend(e)}function hM(e){return L.findBackend(e)}function cM(e){return L.findBackendFactory(e)}function Fh(e,t,n=1){return L.registerBackend(e,t,n)}function bI(){return L.backend}function fM(e,t){H().setPlatform(e,t)}tI(),function pD(e){Ql=e}({buffer:Me,cast:le,clone:Zr,print:Km});var ee=z({add_:function mM(e,t){let n=C(e,"a","add"),r=C(t,"b","add");return[n,r]=St(n,r),L.runKernel(za,{a:n,b:r})}}),Rh=z({floorDiv_:function gM(e,t){let n=C(e,"a","floorDiv"),r=C(t,"b","floorDiv");return[n,r]=St(n,r),L.runKernel(ni,{a:n,b:r})}}),fe=z({div_:function yM(e,t){let n=C(e,"a","div"),r=C(t,"b","div");return[n,r]=St(n,r),"int32"===n.dtype&&"int32"===r.dtype?Rh(n,r):L.runKernel(Xs,{a:n,b:r},{})}}),P=z({mul_:function bM(e,t){let n=C(e,"a","mul"),r=C(t,"b","mul");return[n,r]=St(n,r),L.runKernel(wi,{a:n,b:r})}}),Dt=z({abs_:function xM(e){let t=C(e,"x","abs");return L.runKernel("complex64"===t.dtype?op:Ko,{x:t})}}),Xm=z({acos_:function vM(e){let t={x:C(e,"x","acos")};return L.runKernel($s,t)}}),Jm=z({acosh_:function wM(e){let t={x:C(e,"x","acosh")};return L.runKernel(As,t)}}),xI=z({addN_:function kM(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>C(a,`tensors${s}`,"addN")),n=t[0];return t.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!ca(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),L.runKernel(Fs,t)}}),Dh=z({all_:function IM(e,t=null,n=!1){let r={x:C(e,"x","all","bool")};return L.runKernel(Zo,r,{axis:t,keepDims:n})}}),Lp=z({any_:function SM(e,t=null,n=!1){let r={x:C(e,"x","any","bool")};return L.runKernel(Xo,r,{axis:t,keepDims:n})}}),ro=z({argMax_:function NM(e,t=0){let n={x:C(e,"x","argMax")};return L.runKernel(Jo,n,{axis:t})}}),Ym=z({argMin_:function _M(e,t=0){let n={x:C(e,"x","argMin")};return L.runKernel(Yo,n,{axis:t})}}),Qm=z({asin_:function TM(e){let t={x:C(e,"x","asin")};return L.runKernel(Rs,t)}}),eg=z({asinh_:function CM(e){let t={x:C(e,"x","asinh")};return L.runKernel(Ds,t)}}),tg=z({atan_:function EM(e){let t={x:C(e,"x","atan")};return L.runKernel(Ms,t)}}),ng=z({atan2_:function $M(e,t){let n=C(e,"a","atan2"),r=C(t,"b","atan2");return[n,r]=St(n,r),L.runKernel(Ls,{a:n,b:r})}}),rg=z({atanh_:function AM(e){let t={x:C(e,"x","atanh")};return L.runKernel(Os,t)}});function FM(e,t,n,r,a="NHWC",s){return zp(e,[...t,e[3]],n,s,r,null,null,kI(a))}function vI(e,t,n,r,a,s,i="channelsLast"){let u,[o,l]=Pp(t);if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return zp(e,u,n,r,a,s,!1,i)}function RM(e,t,n,r,a,s,i="NDHWC"){let p,h,[o,l,u]=sg(t);if("NDHWC"===i)h="channelsLast",p=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",p=[o,l,u,e[1],e[1]]}return wI(e,p,n,r,a,!1,h,s)}function zp(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,p,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,p,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,p]=e}let A,[d,c,,f]=t,[m,g]=Pp(n),[y,b]=Pp(r),x=nu(d,y),v=nu(c,b),{padInfo:I,outHeight:_,outWidth:T}=function OM(e,t,n,r,a,s,i,o,l){let u,p,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let d=function DM(e,t,n,r,a){null==r&&(r=ag(e,t,n));let i=e[1];return[Bp((e[0]-t+2*r)/n+1,a),Bp((i-t+2*r)/n+1,a)]}([t,n],s,r,e,o);p=d[0],h=d[1]}else if("same"===e){p=Math.ceil(t/r),h=Math.ceil(n/a);let d=Math.max(0,(p-1)*r+s-t),c=Math.max(0,(h-1)*a+i-n),f=Math.floor(d/2),m=d-f,g=Math.floor(c/2);u={top:f,bottom:m,left:g,right:c-g,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},p=Bp((t-s+d+c)/r+1,o),h=Bp((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:p,outWidth:h}}(a,u,p,m,g,x,v,s,o),E=i?f*h:f;return"channelsFirst"===o?A=[l,E,_,T]:"channelsLast"===o&&(A=[l,_,T,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:h,outHeight:_,outWidth:T,outChannels:E,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function wI(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,p,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,p,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,p,h]=e}let G,[c,f,m,,g]=t,[y,b,x]=sg(n),[v,I,_]=sg(r),T=nu(c,v),E=nu(f,I),A=nu(m,_),{padInfo:D,outDepth:F,outHeight:S,outWidth:O}=function LM(e,t,n,r,a,s,i,o,l,u,p){let h,d,c,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=function MM(e,t,n,r,a,s){null==a&&(a=ag(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=Bp((e[o]-t[o]+2*a)/r[o]+1,s));return i}([t,n,r,1],[o,l,u],1,[a,s,i],e,p);d=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let m=(d-1)*a+o-t,g=(c-1)*s+l-n,y=(f-1)*i+u-r,b=Math.floor(m/2),x=m-b,v=Math.floor(g/2),I=g-v,_=Math.floor(y/2);h={top:v,bottom:I,left:_,right:y-_,front:b,back:x,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:c,outWidth:f}}(a,u,p,h,y,b,x,T,E,A,o),U=s?g*d:g;return"channelsFirst"===i?G=[l,U,F,S,O]:"channelsLast"===i&&(G=[l,F,S,O,U]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:h,inChannels:d,outDepth:F,outHeight:S,outWidth:O,outChannels:U,padInfo:D,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:f,filterWidth:m,effectiveFilterDepth:T,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:v,dilationHeight:I,dilationWidth:_,inShape:e,outShape:G,filterShape:t}}function ag(e,t,n,r=1){let a=nu(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Pp(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function sg(e){return"number"==typeof e?[e,e,e]:e}function nu(e,t){return t<=1?e:e+(e-1)*(t-1)}function Bp(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function qa(e){let[t,n,r]=Pp(e);return 1===t&&1===n&&1===r}function Xr(e,t){return qa(e)||qa(t)}function ao(e){return Pp(e).every(t=>t>0)}function kI(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function vn(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)$(Ho(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(r=>{r.forEach(a=>{$(Ho(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})})}}}var B=z({reshape_:function zM(e,t){let n={x:C(e,"x","reshape","string_or_numeric")};return L.runKernel(Dl,n,{shape:t})}}),ya=z({avgPool_:function PM(e,t,n,r,a){let s=C(e,"x","avgPool","float32");$(Xr(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let o=s,l=!1;3===s.rank&&(l=!0,o=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),vn("avgPool",r,a);let h=L.runKernel(zs,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return h=le(h,s.dtype),l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ig=z({avgPool3d_:function BM(e,t,n,r,a,s="NDHWC"){let i=C(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$("NDHWC"===s,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),$("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),vn("avgPool3d",r,a);let h=L.runKernel(Qo,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return h=le(h,o.dtype),l?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),at=z({concat_:function WM(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=Mp(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(s=>{if("complex64"!==s.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${s.dtype}. `)}),1===n.length?Zr(n[0]):L.runKernel(rl,n,{axis:t})}}),Oe=z({matMul_:function VM(e,t,n=!1,r=!1){let a=C(e,"a","matMul"),s=C(t,"b","matMul");return[a,s]=St(a,s),L.runKernel(Ps,{a,b:s},{transposeA:n,transposeB:r})}}),kr=z({sigmoid_:function UM(e){let t={x:C(e,"x","sigmoid","float32")};return L.runKernel(Pi,t)}}),Ve=z({slice_:function GM(e,t,n){let r=C(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return L.runKernel(Wl,{x:r},{begin:t,size:n})}}),so=z({tanh_:function HM(e){let t={x:C(e,"x","tanh","float32")};return L.runKernel(qi,t)}}),II=z({basicLSTMCell_:function jM(e,t,n,r,a,s){let i=C(e,"forgetBias","basicLSTMCell"),o=C(t,"lstmKernel","basicLSTMCell"),l=C(n,"lstmBias","basicLSTMCell"),u=C(r,"data","basicLSTMCell"),p=C(a,"c","basicLSTMCell"),h=C(s,"h","basicLSTMCell"),d=at([u,h],1),c=Oe(d,o),f=ee(c,l),g=f.shape[1]/4,y=[f.shape[0],g],b=Ve(f,[0,0],y),x=Ve(f,[0,g],y),v=Ve(f,[0,2*g],y),I=Ve(f,[0,3*g],y),_=ee(P(kr(b),so(x)),P(p,kr(ee(i,v))));return[_,P(so(_),kr(I))]}}),Wp=z({batchToSpaceND_:function qM(e,t,n){let r=C(e,"x","batchToSpaceND"),a=t.reduce((o,l)=>o*l);return $(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`),L.runKernel(el,{x:r},{blockShape:t,crops:n})}});function KM(e){let t;return t=0===e.rank||1===e.rank?B(e,[1,1,1,e.size]):2===e.rank?B(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?B(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var io=z({batchNorm_:function ZM(e,t,n,r,a,s){null==s&&(s=.001);let u,p,i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm");null!=a&&(u=C(a,"scale","batchNorm")),null!=r&&(p=C(r,"offset","batchNorm")),$(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(null==p||o.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:KM(i),scale:u,offset:p,mean:o,variance:l},c=L.runKernel(ri,h,{varianceEpsilon:s});return B(c,i.shape)}}),og=z({batchNorm2d_:function XM(e,t,n,r,a,s){let u,p,i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm");return null!=a&&(u=C(a,"scale","batchNorm")),null!=r&&(p=C(r,"offset","batchNorm")),$(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&$(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=p&&$(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),io(i,o,l,p,u,s)}}),lg=z({batchNorm3d_:function JM(e,t,n,r,a,s){let u,p,i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm");return null!=a&&(u=C(a,"scale","batchNorm")),null!=r&&(p=C(r,"offset","batchNorm")),$(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&$(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=p&&$(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),io(i,o,l,p,u,s)}}),ug=z({batchNorm4d_:function YM(e,t,n,r,a,s){let u,p,i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),l=C(n,"variance","batchNorm");return null!=a&&(u=C(a,"scale","batchNorm")),null!=r&&(p=C(r,"offset","batchNorm")),$(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&$(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=p&&$(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),io(i,o,l,p,u,s)}}),pg=z({bincount_:function QM(e,t,n){let r=C(e,"x","bincount"),a=C(t,"weights","bincount");return $("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`),L.runKernel(tl,{x:r,weights:a},{size:n})}}),SI=z({bitwiseAnd_:function eO(e,t){let n=C(e,"x","bitwiseAnd"),r=C(t,"y","bitwiseAnd");if(!ca(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);return L.runKernel(nl,{a:n,b:r})}}),NI=z({broadcastArgs_:function tO(e,t){let n=C(e,"s0","broadcastArgs","int32"),r=C(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);return L.runKernel(ip,{s0:n,s1:r})}}),oo=z({broadcastTo_:function nO(e,t){let n=C(e,"broadcastTo","x"),r=n.shape;if(Un(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=B(n,l)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length?Zr(n):L.runKernel(Ba,{x:n},{reps:s})}}),dg=z({ceil_:function rO(e){let t={x:C(e,"x","ceil","float32")};return L.runKernel(Ws,t)}});function Gn(e,t,n){return Un(e),n=n||rp(t),L.runKernel(pp,{},{shape:e,value:t,dtype:n})}var hn=z({clipByValue_:function aO(e,t,n){let r=C(e,"x","clipByValue");return $(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n?Gn(r.shape,t,r.dtype):L.runKernel(Pa,{x:r},{clipValueMin:t,clipValueMax:n})}}),hg=z({concat1d_:function sO(e){return at(e,0)}}),cg=z({concat2d_:function iO(e,t){return at(e,t)}}),fg=z({concat3d_:function oO(e,t){return at(e,t)}}),mg=z({concat4d_:function lO(e,t){return at(e,t)}}),wn=z({conv2d_:function uO(e,t,n,r,a="NHWC",s=[1,1],i){let o=C(e,"x","conv2d","float32"),l=C(t,"filter","conv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),$(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),vn("conv2d",r,i);let h="NHWC"===a?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),$(Xr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(ao(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(ao(n),()=>"Error in conv2D: Strides should be larger than 0.");let f=L.runKernel(Vs,{x:u,filter:l},{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return p?B(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Mh=z({conv1d_:function pO(e,t,n,r,a="NWC",s=1,i){let o=C(e,"x","conv1d"),l=C(t,"filter","conv1d"),u=o,p=!1;2===o.rank&&(p=!0,u=B(o,[1,o.shape[0],o.shape[1]])),$(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),$(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),vn("conv1d",r,i),$(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(Xr(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(ao(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(ao(n),()=>"Error in conv1D: Stride should be larger than 0."),$("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=B(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=wn(d,h,[1,n],r,"NHWC",[1,s],i);return B(c,p?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}}),gg=z({conv2DBackpropInput_:function dO(e,t,n,r,a,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let p="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];$(p===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`),$(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),vn("conv2dDerInput",a,i);let f=L.runKernel(Us,{dy:l,filter:n},{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o});return u?B(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Oh=z({conv2dTranspose_:function hO(e,t,n,r,a,s){let i=C(e,"x","conv2dTranspose"),o=C(t,"filter","conv2dTranspose");return gg(n,i,o,r,a,"NHWC",s)}}),yg=z({conv3d_:function cO(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=C(e,"x","conv3d"),o=C(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(Xr(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),$(ao(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(ao(n),()=>"Error in conv3D: Strides should be larger than 0.");let d=L.runKernel(Gs,{x:l,filter:o},{strides:n,pad:r,dataFormat:a,dilations:s});return u?B(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),_I=z({conv3DBackpropInput_:function fO(e,t,n,r,a){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];$(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),$(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let d=L.runKernel(sl,{dy:i,filter:n},{pad:a,strides:r,inputShape:s});return o?B(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),bg=z({conv3dTranspose_:function mO(e,t,n,r,a){let s=C(e,"x","conv3dTranspose"),i=C(t,"filter","conv3dTranspose");return _I(n,s,i,r,a)}}),Vp=z({cos_:function gO(e){let t={x:C(e,"x","cos","float32")};return L.runKernel(Hs,t)}}),Lh=z({cosh_:function yO(e){let t={x:C(e,"x","cosh","float32")};return L.runKernel(js,t)}}),Up=z({cumprod_:function bO(e,t=0,n=!1,r=!1){let a={x:C(e,"x","cumprod")};return L.runKernel(il,a,{axis:t,exclusive:n,reverse:r})}}),zh=z({cumsum_:function xO(e,t=0,n=!1,r=!1){let a={x:C(e,"x","cumsum")};return L.runKernel(qs,a,{axis:t,exclusive:n,reverse:r})}}),Ph=z({denseBincount_:function vO(e,t,n,r=!1){let a=C(e,"x","denseBincount"),s=C(t,"weights","denseBincount");return $("int32"===a.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),$(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`),L.runKernel(lp,{x:a,weights:s},{size:n,binaryOutput:r})}}),xg=z({depthToSpace_:function wO(e,t,n="NHWC"){let r=C(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return $(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),$(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),$(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),L.runKernel(ll,{x:r},{blockSize:t,dataFormat:n})}}),lo=z({depthwiseConv2d_:function kO(e,t,n,r,a="NHWC",s=[1,1],i){let o=C(e,"x","depthwiseConv2d","float32"),l=C(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),$(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h="NHWC"===a?u.shape[3]:u.shape[1];$(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),vn("depthwiseConv2d",r,i);let f=L.runKernel(Ks,{x:u,filter:l},{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return p?B(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),TI=z({diag_:function IO(e){let t={x:C(e,"x","diag")};return L.runKernel(up,t)}}),vg=z({dilation2d_:function SO(e,t,n,r,a=[1,1],s="NHWC"){let i=C(e,"x","dilation2d"),o=C(t,"filter","dilation2d");$(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$("NHWC"===s,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;3===i.rank&&(l=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),$(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let d=L.runKernel(Zs,{x:l,filter:o},{strides:n,pad:r,dilations:a});return u?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ru={};function CI(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a;(t[t.length-1-a]||1)>1&&1===(e[s]||1)&&r.unshift(s)}return r}function Mt(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1;(null==a||1===a&&t[s]>1)&&n.unshift(s)}return n}function st(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-a-1]=s}}return r}_e(ru,{assertAndGetBroadcastShape:()=>st,getBroadcastDims:()=>CI,getReductionAxes:()=>Mt});var Hn=z({equal_:function NO(e,t){let n=C(e,"a","equal","string_or_numeric"),r=C(t,"b","equal","string_or_numeric");return[n,r]=St(n,r),st(n.shape,r.shape),L.runKernel(hl,{a:n,b:r})}}),Xt=z({where_:function _O(e,t,n){let r=C(t,"a","where"),a=C(n,"b","where"),s=C(e,"condition","where","bool"),i=st(st(s.shape,r.shape),a.shape),o=oo(s,i),l=oo(r,i),u=oo(a,i);return L.runKernel(Bl,{condition:o,t:l,e:u})}}),He=z({zerosLike_:function TO(e){let t={x:C(e,"x","zerosLike")};return L.runKernel(Xl,t)}}),wg=z({divNoNan_:function CO(e,t){let n=C(e,"a","div"),r=C(t,"b","div");[n,r]=St(n,r);let a=fe(n,r),s=He(a),i=Hn(r,s);return Xt(i,s,a)}}),kg=z({dot_:function EO(e,t){let n=C(e,"t1","dot"),r=C(t,"t2","dot");$(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if($(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){let i=B(n,[1,-1]),o=B(r,[-1,1]),l=Oe(i,o);return B(l,[])}if(1===n.rank&&2===r.rank){let i=B(n,[1,-1]),o=B(r,[r.shape[0],r.shape[1]]),l=Oe(i,o);return B(l,[l.size])}if(2===n.rank&&1===r.rank){let i=B(r,[-1,1]),o=Oe(n,i);return B(o,[o.size])}{let i=B(r,[r.shape[0],r.shape[1]]);return Oe(n,i)}}}),EI=z({einsum_:function $O(e,...t){let n=t.map((a,s)=>C(a,`tensors${s}`,"einsum"));return L.runKernel(ch,n,{equation:e})}}),au=z({elu_:function AO(e){let t={x:C(e,"x","elu","float32")};return L.runKernel(Js,t)}}),$I=z({ensureShape_:function FO(e,t){let n=C(e,"x","ensureShape","string_or_numeric");if(!Tk(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Ig=z({erf_:function RO(e){let t=C(e,"x","erf");return $("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=le(t,"float32")),L.runKernel(Ys,{x:t})}});function Sg(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function AI(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function FI(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(s=>e[s])]}function uo(e,t){return AI(e,t.map(r=>1),t)}function DO(e,t,n){$(Sg(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function RI(e,t){if(Sg(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(r=>n.push(r)),n}function Ng(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function MO(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var ir=z({max_:function OO(e,t=null,n=!1){let r={x:C(e,"x","max")};return L.runKernel(ci,r,{reductionIndices:t,keepDims:n})}}),su=z({min_:function LO(e,t=null,n=!1){let r={x:C(e,"x","min")};return L.runKernel(yi,r,{axis:t,keepDims:n})}}),ba=z({pow_:function zO(e,t){let n=C(e,"base","pow"),r=C(t,"exp","pow");return[n,r]=St(n,r),L.runKernel(Si,{a:n,b:r})}});function we(e,t){if((Zt(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Zt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ha(e,[],[],t)}var rn=z({sqrt_:function PO(e){let t={x:C(e,"x","sqrt","float32")};return L.runKernel(Wi,t)}}),it=z({square_:function BO(e){let t=C(e,"x","square");return L.runKernel("Square",{x:t},{})}}),ge=z({sum_:function WO(e,t=null,n=!1){let r=C(e,"x","sum");return"bool"===r.dtype&&(r=le(r,"int32")),L.runKernel(Vi,{x:r},{axis:t,keepDims:n})}});function DI(e,t,n=null){if(0===e.rank)return Dt(e);if(1!==e.rank&&null===n)return DI(B(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ge(Dt(e),n);if(t===1/0)return ir(Dt(e),n);if(t===-1/0)return su(Dt(e),n);if("euclidean"===t||2===t)return rn(ge(ba(Dt(e),we(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ir(ge(Dt(e),n[0]),n[1]-1);if(t===1/0)return ir(ge(Dt(e),n[1]),n[0]);if(t===-1/0)return su(ge(Dt(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return rn(ge(it(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var iu=z({norm_:function VO(e,t="euclidean",n=null,r=!1){let a=DI(e=C(e,"x","norm"),t,n),s=a.shape;if(r){let i=vr(n,e.shape);s=uo(a.shape,i)}return B(a,s)}}),_g=z({euclideanNorm_:function UO(e,t=null,n=!1){return iu(e,"euclidean",t,n)}}),kn=z({exp_:function GO(e){let t={x:C(e,"x","exp")};return L.runKernel(Qs,t)}}),an=z({expandDims_:function HO(e,t=0){let n=C(e,"x","expandDims","string_or_numeric");return $(t<=n.rank,()=>"Axis must be <= rank of the tensor"),L.runKernel(cl,{input:n},{dim:t})}}),Tg=z({expm1_:function jO(e){let t={x:C(e,"x","expm1")};return L.runKernel(ei,t)}}),jn=z({tile_:function qO(e,t){let n=C(e,"x","tile","string_or_numeric");return $(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),L.runKernel(Ba,{x:n},{reps:t})}}),Bh=z({eye_:function KO(e,t,n,r="float32"){null==t&&(t=e);let a=Me([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=B(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return jn(an(i,0),[n[0],1,1]);if(2===n.length)return jn(an(an(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return jn(an(an(an(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ou=z({floor_:function ZO(e){let t={x:C(e,"x","floor","float32")};return L.runKernel(ti,t)}}),lu=z({gather_:function XO(e,t,n=0,r=0){let a=C(e,"x","gather"),s=C(t,"indices","gather","int32");return L.runKernel(ml,{x:a,indices:s},{axis:n,batchDims:r})}}),In=z({greater_:function JO(e,t){let n=C(e,"a","greater","string_or_numeric"),r=C(t,"b","greater","string_or_numeric");return[n,r]=St(n,r),st(n.shape,r.shape),L.runKernel(yl,{a:n,b:r})}}),xa=z({greaterEqual_:function YO(e,t){let n=C(e,"a","greaterEqual","string_or_numeric"),r=C(t,"b","greaterEqual","string_or_numeric");return[n,r]=St(n,r),st(n.shape,r.shape),L.runKernel(ai,{a:n,b:r})}}),Gp=z({imag_:function QO(e){let t={input:C(e,"input","imag")};return L.runKernel(gh,t)}}),Cg=z({isFinite_:function e3(e){let t={x:C(e,"x","isFinite")};return L.runKernel(ii,t)}}),Eg=z({isInf_:function t3(e){let t={x:C(e,"x","isInf")};return L.runKernel(oi,t)}}),$g=z({isNaN_:function n3(e){let t={x:C(e,"x","isNaN")};return L.runKernel(li,t)}}),Hp=z({leakyRelu_:function r3(e,t=.2){let n={x:C(e,"x","leakyRelu")};return L.runKernel(ui,n,{alpha:t})}}),uu=z({less_:function a3(e,t){let n=C(e,"a","less","string_or_numeric"),r=C(t,"b","less","string_or_numeric");return[n,r]=St(n,r),st(n.shape,r.shape),L.runKernel(bl,{a:n,b:r})}}),Ka=z({lessEqual_:function s3(e,t){let n=C(e,"a","lessEqual","string_or_numeric"),r=C(t,"b","lessEqual","string_or_numeric");return[n,r]=St(n,r),st(n.shape,r.shape),L.runKernel(xl,{a:n,b:r})}});function MI(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return L.runKernel(vl,{},{start:e,stop:t,num:n})}var Ag=z({localResponseNormalization_:function i3(e,t=5,n=1,r=1,a=.5){let s=C(e,"x","localResponseNormalization");$(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),$(Ho(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=B(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let p=L.runKernel(hi,{x:i},{depthRadius:t,bias:n,alpha:r,beta:a});return o?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),qn=z({log_:function o3(e){let t={x:C(e,"x","log","float32")};return L.runKernel(pi,t)}}),jp=z({log1p_:function l3(e){let t={x:C(e,"x","log1p")};return L.runKernel(di,t)}});function u3(e){return $(La(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=C(t,"x","tf.grad","string_or_numeric"),a=null!=n?C(n,"dy","tf.grad"):null;return L.tidy(()=>{let{value:s,grads:i}=L.gradients(()=>e(r),[r],a);return null!=a&&yn(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Wh(i),i[0]})}}function p3(e){return $(La(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Mp(t,"args","tf.grads","string_or_numeric"),a=null!=n?C(n,"dy","tf.grads"):null;return L.tidy(()=>{let{value:s,grads:i}=L.gradients(()=>e(...r),r,a);return null!=a&&yn(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Wh(i),i})}}function d3(e){return $(La(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof $e,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(null==n||n instanceof $e,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=L.gradients(()=>e(t),[t],n);return Wh(r),{grad:r[0],value:a}}}function h3(e){return $(La(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(a=>a instanceof $e),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(null==n||n instanceof $e,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=L.gradients(()=>e(...t),t,n);return null!=n&&yn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Wh(r.grads),r}}function OI(e,t){$(La(e),()=>"The f passed in variableGrads(f) must be a function"),$(null==t||Array.isArray(t)&&t.every(u=>u instanceof Qi),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=null!=t;if(!n){t=[];for(let u in L.registeredVariables)t.push(L.registeredVariables[u])}let r=n?t.filter(u=>!u.trainable):null,a=t.length;$((t=t.filter(u=>u.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let{value:i,grads:o}=L.gradients(e,t,null,!0);$(o.some(u=>null!=u),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,p)=>{null!=o[p]&&(l[u.name]=o[p])}),r?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Jr(e){return L.customGrad(e)}function Wh(e){if(e.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var ft=z({neg_:function c3(e){let t={x:C(e,"x","neg")};return L.runKernel(Tl,t)}}),po=z({softplus_:function f3(e){let t={x:C(e,"x","softplus")};return L.runKernel(Bi,t)}}),Fg=z({logSigmoid_:function m3(e){let t=C(e,"x","logSigmoid");return Jr(n=>({value:ft(po(ft(n))),gradFunc:r=>P(r,kr(ft(n)))}))(t)}}),ce=z({sub_:function g3(e,t){let n=C(e,"a","sub"),r=C(t,"b","sub");return[n,r]=St(n,r),L.runKernel(Hi,{a:n,b:r})}}),Vh=z({logSoftmax_:function y3(e,t=-1){let n=C(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Jr((r,a)=>{let s=ir(r,t,!0),i=ce(r,s),o=ce(le(i,"float32"),qn(ge(kn(i),t,!0)));return a([o]),{value:o,gradFunc:(l,u)=>{let[p]=u,d=kn(p);return ce(l,P(ge(l,t,!0),d))}}})(n)}}),Uh=z({logSumExp_:function b3(e,t=null,n=!1){let r=C(e,"x","logSumExp"),a=vr(t,r.shape),s=ir(r,a,!0),i=ce(r,s),o=kn(i),l=ge(o,a),u=qn(l),p=ee(B(s,u.shape),u);if(n){let h=uo(p.shape,a);return B(p,h)}return p}}),Ir=z({logicalAnd_:function x3(e,t){let n=C(e,"a","logicalAnd","bool"),r=C(t,"b","logicalAnd","bool");return st(n.shape,r.shape),L.runKernel(wl,{a:n,b:r})}}),qp=z({logicalNot_:function v3(e){let t={x:C(e,"x","logicalNot","bool")};return L.runKernel(kl,t)}}),Gh=z({logicalOr_:function w3(e,t){let n=C(e,"a","logicalOr","bool"),r=C(t,"b","logicalOr","bool");return st(n.shape,r.shape),L.runKernel(Il,{a:n,b:r})}}),Rg=z({logicalXor_:function k3(e,t){let n=C(e,"a","logicalXor","bool"),r=C(t,"b","logicalXor","bool");return st(n.shape,r.shape),Ir(Gh(e,t),qp(Ir(e,t)))}}),Hh=2147483648,jh=z({searchSorted_:function I3(e,t,n="left"){let r=C(e,"sortedSequence","searchSorted"),a=C(t,"values","searchSorted"),i=a.shape[a.shape.length-1],o=B(r,[-1,r.shape[r.shape.length-1]]),l=B(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ht(l.shape)>=Hh)throw new Error(`values tensor size must less than ${Hh}`);if(o.shape[1]>=Hh)throw new Error(`trailing dim_size must less than ${Hh} for int32 output type, was ${o.shape[1]}`);return L.runKernel(Pl,{sortedSequence:o,values:l},{side:n})}});function LI(e,t){return jh(e,t,"left")}var Jt=z({maxPool_:function S3(e,t,n,r,a){let s=C(e,"x","maxPool"),o=s,l=!1;3===s.rank&&(l=!0,o=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(Xr(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),vn("maxPool",r,a);let h=L.runKernel(mi,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Dg=z({maxPool3d_:function N3(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=C(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$("NDHWC"===s,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),vn("maxPool3d",r,a);let h=L.runKernel(Nl,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return l?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),zI=z({maxPoolWithArgmax_:function _3(e,t,n,r,a=!1){let s={x:C(e,"x","maxPoolWithArgmax")},o=L.runKernel(cp,s,{filterSize:t,strides:n,pad:r,includeBatchInIndex:a});return{result:o[0],indexes:o[1]}}}),Yr=z({maximum_:function T3(e,t){let n=C(e,"a","maximum"),r=C(t,"b","maximum");return[n,r]=St(n,r),"bool"===n.dtype&&(n=le(n,"int32"),r=le(r,"int32")),st(n.shape,r.shape),L.runKernel(fi,{a:n,b:r})}}),Nt=z({mean_:function C3(e,t=null,n=!1){let r={x:C(e,"x","mean")};return L.runKernel(gi,r,{axis:t,keepDims:n})}});function _t(e,t="float32"){if(Un(e),"complex64"===t){let r=_t(e,"float32"),a=_t(e,"float32");return ma(r,a)}let n=oh(ht(e),t);return L.makeTensor(n,e,t)}function Kn(e,t="float32"){if(Un(e),"complex64"===t){let r=Kn(e,"float32"),a=_t(e,"float32");return ma(r,a)}let n=gm(ht(e),t);return L.makeTensor(n,e,t)}function PI(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=C(e,"x","meshgrid",e instanceof $e?e.dtype:"float32");if(void 0===t)return[r];let a=C(t,"y","meshgrid",t instanceof $e?t.dtype:"float32"),s=ht(r.shape),i=ht(a.shape);return"xy"===n?(r=B(r,[1,-1]),a=B(a,[-1,1]),[Oe(Kn([i,1],r.dtype),r),Oe(a,Kn([1,s],a.dtype))]):(r=B(r,[-1,1]),a=B(a,[1,-1]),[Oe(r,Kn([1,i],r.dtype)),Oe(Kn([s,1],a.dtype),a)])}var Za=z({minimum_:function E3(e,t){let n=C(e,"a","minimum"),r=C(t,"b","minimum");return[n,r]=St(n,r),"bool"===n.dtype&&(n=le(n,"int32"),r=le(r,"int32")),st(n.shape,r.shape),L.runKernel(bi,{a:n,b:r})}}),Mg=z({mirrorPad_:function $3(e,t,n){$("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=C(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a="reflect"===n?1:0;for(let o=0;o<r.rank;o++)$(2===t[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);return L.runKernel(xi,{x:r},{paddings:t,mode:n})}}),Og=z({mod_:function A3(e,t){let n=C(e,"a","mod"),r=C(t,"b","mod");return[n,r]=St(n,r),L.runKernel(vi,{a:n,b:r})}}),Kp=z({moments_:function F3(e,t=null,n=!1){let r=vr(t,(e=C(e,"x","moments")).shape),a=Nt(e,r,n),s=a.shape;n||(s=uo(a.shape,r));let i=it(ce(le(e,"float32"),B(a,s)));return{mean:a,variance:Nt(i,r,n)}}}),BI=z({multiRNNCell_:function R3(e,t,n,r){let a=C(t,"data","multiRNNCell"),s=Mp(n,"c","multiRNNCell"),i=Mp(r,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let d=e[h](o,s[h],i[h]);l.push(d[0]),l.push(d[1]),o=d[1]}let u=[],p=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),p.push(l[h+1]);return[u,p]}}),WI=z({multinomial_:function D3(e,t,n,r=!1){let a=C(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?B(a,[1,-1]):a},u=L.runKernel(_l,o,{numSamples:t,seed:n,normalized:r});return 1===i?B(u,[u.size]):u}}),ho=z({notEqual_:function M3(e,t){let n=C(e,"a","notEqual","string_or_numeric"),r=C(t,"b","notEqual","string_or_numeric");return[n,r]=St(n,r),st(n.shape,r.shape),L.runKernel(Cl,{a:n,b:r})}}),pu=z({oneHot_:function O3(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:C(e,"indices","oneHot","int32")};return L.runKernel(ki,s,{dtype:a,depth:t,onValue:n,offValue:r})}}),Zn=z({onesLike_:function L3(e){let t={x:C(e,"x","onesLike")};return L.runKernel(Fl,t)}}),VI=z({outerProduct_:function z3(e,t){let n=C(e,"v1","outerProduct"),r=C(t,"v2","outerProduct");$(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=B(n,[-1,1]),s=B(r,[1,-1]);return Oe(a,s)}}),Or=z({pad_:function P3(e,t,n=0){let r=C(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return L.runKernel(Ii,{x:r},{paddings:t,constantValue:n})}}),UI=z({pad1d_:function B3(e,t,n=0){return $(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Or(e,[t],n)}}),GI=z({pad2d_:function W3(e,t,n=0){return $(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Or(e,t,n)}}),HI=z({pad3d_:function V3(e,t,n=0){return $(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Or(e,t,n)}}),jI=z({pad4d_:function U3(e,t,n=0){return $(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Or(e,t,n)}}),Zp=z({spaceToBatchND_:function G3(e,t,n){let r=C(e,"x","spaceToBatchND");return $(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]==0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),L.runKernel(Vl,{x:r},{blockShape:t,paddings:n})}}),Lg=z({pool_:function H3(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=C(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(Xr(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let d,p=vI(l.shape,t,s,a,r),h=[p.dilationHeight,p.dilationWidth];d="same"===r?function q3(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),a=n.map((s,i)=>s-r[i]);return n.map((s,i)=>[r[i],a[i]])}([p.filterHeight,p.filterWidth],h):[[0,0],[0,0]];let c=1===h[0]&&1===h[1],[f,m]=function j3(e,t,n){let r=n.map(p=>p[0]),a=n.map(p=>p[1]),s=e.concat(r,a),i=t.map((p,h)=>(p-s[h]%p)%p),o=a.map((p,h)=>p+i[h]),l=t.map((p,h)=>[r[h],o[h]]),u=t.map((p,h)=>[0,i[h]]);return[l,u]}([p.inHeight,p.inWidth],h,d),g=c?r:"valid",y=c?l:Zp(l,h,f),b=("avg"===n?()=>ya(y,t,s,g,i):()=>Jt(y,t,s,g,i))(),x=c?b:Wp(b,h,m);return u?B(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),Xp=z({prelu_:function K3(e,t){let n=C(e,"x","prelu"),r=C(t,"alpha","prelu");return L.runKernel(Ni,{x:n,alpha:r})}}),zg=z({prod_:function Z3(e,t=null,n=!1){let r=C(e,"x","prod");return"bool"===r.dtype&&(r=le(r,"int32")),L.runKernel(_i,{x:r},{axis:t,keepDims:n})}}),qI=z({raggedGather_:function X3(e,t,n,r){let a=e.map((p,h)=>C(p,`tensors${h}`,"raggedGather","int32")),s=C(t,"paramsDenseValues","raggedGather"),i=C(n,"indices","raggedGather","int32"),u=L.runKernel(yh,{paramsNestedSplits:a,paramsDenseValues:s,indices:i},{outputRaggedRank:r});return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}}),KI=z({raggedRange_:function J3(e,t,n){let r=C(e,"starts","raggedRange"),a=C(t,"limits","raggedRange",r.dtype),s=C(n,"deltas","raggedRange",r.dtype),o=L.runKernel(bh,{starts:r,limits:a,deltas:s});return{rtNestedSplits:o[0],rtDenseValues:o[1]}}}),ZI=z({raggedTensorToTensor_:function Y3(e,t,n,r,a){let s=C(e,"shape","raggedTensorToTensor","int32"),i=C(t,"values","raggedTensorToTensor"),o=C(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((h,d)=>C(h,`tensors${d}`,"raggedTensorToTensor","int32"));return L.runKernel(xh,{shape:s,values:i,defaultValue:o,rowPartitionTensors:l},{rowPartitionTypes:a})}}),XI=z({rand_:function Q3(e,t,n){Un(e);let r=ht(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return L.makeTensor(a,e,n)}}),Pg=Ma(nh()),JI={};_e(JI,{TEST_EPSILON_FLOAT16:()=>YI,createVideoElement:()=>oL,encodeStrings:()=>QI,expectArrayBuffersEqual:()=>iL,expectArraysClose:()=>tL,expectArraysEqual:()=>rL,expectNumbersClose:()=>aL,expectPromiseToFail:()=>nL,expectValuesInRange:()=>sL,play:()=>lL,testEpsilon:()=>Bg});var eL=.001,YI=.1;function tL(e,t,n){return null==n&&(n=Bg()),Wg(e,t,(r,a)=>Vg(r,a,n))}function Bg(){return 32===L.backend.floatPrecision()?eL:YI}function Wg(e,t,n){let r=!0;if((Zt(e)||Zt(t))&&(r=!1),Zt(e)&&Zt(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=qr(e),o=qr(t);if(!ca(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=Zt(e)?e:Ga(e),s=Zt(t)?t:Ga(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.\nActual:   ${a}.\nExpected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function nL(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function rL(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Oa(e)||Oa(e[0])||Oa(t)||Oa(t[0])?Wg(e,n,(r,a)=>r==a):Wg(e,t,(r,a)=>Vg(r,a,0))}function aL(e,t,n){if(null==n&&(n=Bg()),!Vg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function Vg(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function sL(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function iL(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function QI(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?QI(n):e[t]=Ep(n)}return e}function oL(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",r=>n(t)),t.load()})}function lL(e){return Ug.apply(this,arguments)}function Ug(){return Ug=(0,R.Z)(function*(e){yield e.play(),"requestVideoFrameCallback"in e&&(yield new Promise(t=>{e.requestVideoFrameCallback(t)}))}),Ug.apply(this,arguments)}var Gg=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Pg.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},eS=z({randomGamma_:function dL(e,t,n=1,r="float32",a){if(Un(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Pg.alea(a.toString()),this.randn=new Gg(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s*=1/this.beta*this.d,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=Me(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),qh=z({randomNormal_:function hL(e,t=0,n=1,r,a){if(Un(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new Gg(t,n,r,!1,a),i=Me(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),tS=z({randomStandardNormal_:function cL(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return qh(e,0,1,t,n)}}),Xa=z({randomUniform_:function fL(e,t=0,n=1,r="float32",a){Un(e);let s=Me(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Pg.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),nS=z({randomUniformInt_:function mL(e,t,n,r){return Xa(e,t,n,"int32",r)}});function co(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return L.runKernel(fp,{},{start:e,stop:t,step:n,dtype:r})}var du=z({real_:function gL(e){let t={input:C(e,"input","real")};return L.runKernel(vh,t)}}),Hg=z({reciprocal_:function yL(e){let t={x:C(e,"x","reciprocal")};return L.runKernel(Ti,t)}}),tt=z({relu_:function bL(e){let t={x:C(e,"x","relu")};return L.runKernel(Ci,t)}}),Kh=z({relu6_:function xL(e){let t={x:C(e,"x","relu6")};return L.runKernel(Ai,t)}}),or=z({reverse_:function vL(e,t){let n={x:C(e,"x","reverse")};return L.runKernel(Fi,n,{dims:t})}}),rS=z({reverse1d_:function wL(e){let t=C(e,"x","reverse");return $(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),or(t,0)}}),aS=z({reverse2d_:function kL(e,t){let n=C(e,"x","reverse");return $(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),or(n,t)}}),sS=z({reverse3d_:function IL(e,t){let n=C(e,"x","reverse");return $(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),or(n,t)}}),iS=z({reverse4d_:function SL(e,t){let n=C(e,"x","reverse");return $(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),or(n,t)}}),Zh=z({round_:function NL(e){let t={x:C(e,"x","round")};return L.runKernel(Ri,t)}}),Xh=z({rsqrt_:function _L(e){let t={x:C(e,"x","rsqrt","float32")};return L.runKernel(Di,t)}}),Jh=z({selu_:function TL(e){let t={x:C(e,"x","selu")};return L.runKernel(Mi,t)}}),hu=z({separableConv2d_:function CL(e,t,n,r,a,s=[1,1],i="NHWC"){let o=C(e,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),u=C(n,"pointwiseFilter","separableConv2d"),p=o,h=!1;if(3===o.rank&&(h=!0,p=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(4===p.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),$(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),$(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],c=l.shape[3];$(u.shape[2]===d*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`);let f=lo(p,l,r,a,i,s),m=wn(f,u,1,"valid",i);return h?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});function jg(){return jg=(0,R.Z)(function*(e,t){let n=C(e,"x","setdiff1d"),r=C(t,"y","setdiff1d");$(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),$(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=yield n.data(),s=yield r.data(),i=new Set(s),o=0;for(let p=0;p<a.length;p++)i.has(a[p])||o++;let l=new Rt([o],n.dtype),u=new Rt([o],"int32");for(let p=0,h=0;p<a.length;p++)i.has(a[p])||(l.values[h]=a[p],u.values[h]=p,h++);return[l.toTensor(),u.toTensor()]}),jg.apply(this,arguments)}var oS=function EL(e,t){return jg.apply(this,arguments)},qg=z({sign_:function $L(e){let t={x:C(e,"x","sign")};return L.runKernel(zi,t)}}),Yh=z({sin_:function AL(e){let t={x:C(e,"x","sin","float32")};return L.runKernel(Oi,t)}}),Qh=z({sinh_:function FL(e){let t={x:C(e,"x","sinh")};return L.runKernel(Li,t)}}),Jp=z({slice1d_:function RL(e,t,n){let r=C(e,"x","slice1d");return $(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ve(r,[t],[n])}}),ec=z({slice2d_:function DL(e,t,n){let r=C(e,"x","slice2d");return $(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ve(r,t,n)}}),cu=z({slice3d_:function ML(e,t,n){let r=C(e,"x","slice3d");return $(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ve(r,t,n)}}),fu=z({slice4d_:function OL(e,t,n){let r=C(e,"x","slice4d");return $(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ve(r,t,n)}}),Ja=z({softmax_:function LL(e,t=-1){let n=C(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return L.runKernel(Ui,{logits:n},{dim:t})}}),Yp=z({fft_:function zL(e){return $("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),L.runKernel(fh,{input:e})}}),mu=z({ifft_:function PL(e){return $("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),L.runKernel(mh,{input:e})}}),tc=z({irfft_:function BL(e){let r,t=e.shape[e.shape.length-1],n=e.size/t;if(t<=2){let a=B(e,[n,t]);r=mu(a)}else{let a=[n,2*(t-1)],s=B(du(e),[n,t]),i=B(Gp(e),[n,t]),o=or(Ve(s,[0,1],[n,t-2]),1),l=P(or(Ve(i,[0,1],[n,t-2]),1),we(-1)),u=at([s,o],1),p=at([i,l],1),h=B(ma(u,p),[a[0],a[1]]);r=mu(h)}if(r=du(r),3===e.rank&&0!==e.shape[0]){let a=r,s=e.shape[0];r=B(r,[s,r.shape[0]/s,r.shape[1]]),a.dispose()}return r}}),Fn=z({split_:function WL(e,t,n=0){let r={x:C(e,"x","split")};return L.runKernel(Ul,r,{numOrSizeSplits:t,axis:n})}}),Qp=z({rfft_:function VL(e,t){$("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let a,n=e.shape[e.shape.length-1],r=e.size/n;if(null!=t&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,a=Ve(e,f,m),n=t}else if(null!=t&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,a=at([e,_t(f)],e.shape.length-1),n=t}else a=e;let s=He(a),i=B(ma(a,s),[r,n]),o=Yp(i),l=Math.floor(n/2)+1,u=du(o),p=Gp(o),h=Fn(u,[l,n-l],u.shape.length-1),d=Fn(p,[l,n-l],p.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=l,B(ma(h[0],d[0]),c)}}),nc=z({squaredDifference_:function UL(e,t){let n=C(e,"a","squaredDifference"),r=C(t,"b","squaredDifference");return[n,r]=St(n,r),st(n.shape,r.shape),L.runKernel(Gi,{a:n,b:r},{})}}),Ya=z({squeeze_:function GL(e,t){let n=C(e,"x","squeeze","string_or_numeric");return B(n,Ck(n.shape,t).newShape)}}),Wt=z({stack_:function HL(e,t=0){let n=Mp(e,"tensors","stack","string_or_numeric");return $(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),L.runKernel(Rl,n,{axis:t})}}),fo=z({step_:function jL(e,t=0){let n={x:C(e,"x","step")};return L.runKernel(Wa,n,{alpha:t})}}),Kg=z({stridedSlice_:function qL(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:C(e,"x","stridedSlice","string_or_numeric")};return L.runKernel(jl,u,{begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l})}}),Zg=z({tan_:function KL(e){let t={x:C(e,"x","tan","float32")};return L.runKernel(ji,t)}});function nt(e,t){Es(e);let n=qr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ha(e,null,n,t)}function Qr(e,t,n){if(Es(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=qr(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ha(e,t,r,n)}function rc(e,t,n){if(Es(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=qr(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ha(e,t,r,n)}function Qa(e,t,n){if(Es(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=qr(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ha(e,t,r,n)}function lS(e,t,n){if(Es(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=qr(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ha(e,t,r,n)}function uS(e,t,n){if(Es(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=qr(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ha(e,t=t||r,r,n)}var ac={};function Xg(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function sc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Xg(n,t,e)}function pS(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let h=a;h<s;++h)i*=n[h];let o=a<1?1:a;return{sliceRank:a,numUpdates:ht(t.shape)/o,sliceSize:i,strides:[...jo(n.slice(0,a)),1],outputSize:ht(n)}}_e(ac,{calculateShapes:()=>pS,validateInput:()=>sc,validateUpdateShape:()=>Xg});var dS=z({tensorScatterUpdate_:function ZL(e,t,n){let r=C(e,"tensor","tensorScatterupdate"),a=C(t,"indices","tensorScatterupdate","int32"),s=C(n,"updates","tensorScatterupdate");if(sc(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);return L.runKernel(zl,{tensor:r,indices:a,updates:s},{})}}),Jg=z({topk_:function XL(e,t=1,n=!0){let r=C(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=L.runKernel(ql,s,i);return{values:o,indices:l}}}),ic=z({truncatedNormal_:function JL(e,t=0,n=1,r,a){if(Un(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new Gg(t,n,r,!0,a),i=Me(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),Yg=z({unique_:function YL(e,t=0){let n=C(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=L.runKernel(Ip,r,a);return{values:s,indices:i}}}),oc=z({unsortedSegmentSum_:function QL(e,t,n){let r=C(e,"x","unsortedSegmentSum"),a=C(t,"segmentIds","unsortedSegmentSum","int32");return $(Ho(n),()=>"numSegments must be of dtype int"),L.runKernel(Sp,{x:r,segmentIds:a},{numSegments:n})}}),$t=z({unstack_:function ez(e,t=0){let n=C(e,"x","unstack","string_or_numeric");return $(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),L.runKernel(Zl,{value:n},{axis:t})}});function hS(e,t){return jh(e,t,"right")}function Qg(e,t=!0,n,r){return L.makeVariable(e,t,n,r)}function cS(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Me(e,"int32"),a=Me([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=r.indexToLoc(n[s]);a.values.set(i,s*e.length)}return a.toTensor()}function ey(){return ey=(0,R.Z)(function*(e){let t=C(e,"condition","whereAsync","bool"),n=yield t.data(),r=cS(t.shape,n);return e!==t&&t.dispose(),r}),ey.apply(this,arguments)}var ty=function tz(e){return ey.apply(this,arguments)};function ny(){return ny=(0,R.Z)(function*(e,t,n){let r=C(e,"tensor","boolMask"),a=C(t,"mask","boolMask","bool"),s=n??0,i=a.rank,o=r.shape;$(i>0,()=>"mask cannot be scalar"),yn(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),p=B(r,u),h=B(a,[-1]),d=yield ty(h),c=Ya(d,[1]),f=lu(p,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),p.dispose(),h.dispose(),d.dispose(),f}),ny.apply(this,arguments)}var fS=function nz(e,t,n){return ny.apply(this,arguments)},Le=z({transpose_:function rz(e,t,n){let r=C(e,"x","transpose");if(null==t&&(t=r.shape.map((i,o)=>o).reverse()),$(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{$(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?W(()=>{let i=du(r),o=Gp(r);return i=L.runKernel(fa,{x:i},s),o=L.runKernel(fa,{x:o},s),n&&(o=ft(o)),ma(i,o)}):L.runKernel(fa,a,s)}}),mS=z({movingAverage_:function az(e,t,n,r,a=!0){let s=C(e,"v","movingAverage"),i=C(t,"x","movingAverage"),o=C(n,"decay","movingAverage");Yk(s,i),$(ca(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=we(1),u=ce(l,o),p=P(ce(i,s),u);if(a){$(null!=r,()=>"When using zeroDebias: true, step is required.");let h=C(r,"step","movingAverage");p=fe(p,ce(l,ba(o,h)))}return ee(s,p)}}),gS=z({scatterND_:function sz(e,t,n){Un(n);let r=C(e,"indices","scatterND","int32"),a=C(t,"updates","scatterND");return sc(a,r,n),L.runKernel(Ll,{indices:r,updates:a},{shape:n})}}),yS=z({sparseToDense_:function oz(e,t,n,r=0){Un(n);let a=C(e,"sparseIndices","sparseToDense","int32"),s=C(t,"sparseValues","sparseToDense","string_or_numeric"),i=C(r,"defaultValue","sparseToDense",s.dtype);return function iz(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);if(0!==t.rank&&(1!==t.rank||t.size!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i),L.runKernel(Hl,{sparseIndices:a,sparseValues:s,defaultValue:i},{outputShape:n})}}),bS=z({gatherND_:function lz(e,t){let n=C(t,"indices","gatherND","int32"),r={params:C(e,"x","gatherND","string_or_numeric"),indices:n};return L.runKernel(gl,r)}}),ry=z({dropout_:function pz(e,t,n,r){let a=C(e,"x","dropout");if($("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof $e?a.clone():a;let s=function uz(e,t){if(null==t)return e.shape.slice();if(ca(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(a,n),i=1-t,o=fe(ou(ee(Xa(s,0,1,"float32",r),i)),i);return P(a,o)}});function ay(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function lc(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return nt(a,"float32")}function sy(){return sy=(0,R.Z)(function*(e,t,n=1){let r=C(e,"predictions","inTopK"),a=C(t,"targets","inTopK");$(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),$(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),yn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=yield r.data(),o=yield a.data(),[l,u]=[i.length/s,s],p=Ek("bool",l);for(let h=0;h<l;h++){let d=h*u,c=i.subarray(d,d+u),f=[];for(let m=0;m<c.length;m++)f.push({value:c[m],index:m});f.sort((m,g)=>g.value-m.value),p[h]=0;for(let m=0;m<n;m++)if(f[m].index===o[h]){p[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),xn(p,a.shape,"bool")}),sy.apply(this,arguments)}var xS=function dz(e,t){return sy.apply(this,arguments)},gu={};_e(gu,{conv2d:()=>fz,depthwiseConv2d:()=>bz,matMul:()=>vz});var iy=z({conv2DBackpropFilter_:function hz(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u="NHWC"===s?o.shape[3]:o.shape[1],p="NHWC"===s?l.shape[3]:l.shape[1];return $(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),$(p===n[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`),vn("conv2dDerFilter",a,i),L.runKernel(ph,{x:o,dy:l},{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n})}});function uc(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return P(e,fo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function pc(e,t){let n=t,r=Mt(e.shape,t.shape);return r.length>0&&(n=ge(n,r)),B(n,e.shape)}function dc(e,t,n,r){if("linear"===t)return e;if("relu"===t)return tt(e);if("elu"===t)return au(e);if("relu6"===t)return Kh(e);if("prelu"===t)return Xp(e,n);if("leakyrelu"===t)return Hp(e,r);if("sigmoid"===t)return kr(e);throw new Error(`Unknown fused activation ${t}.`)}var hc=(e,t)=>!(e>0)||"linear"===t,fz=z({fusedConv2d_:function cz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(!1===hc(L.state.gradientDepth,l=l||"linear")){$("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=wn(e,t,n,r,a,s,i);return null!=o&&(_=ee(_,o)),dc(_,l,u,p)}let h=C(e,"x","conv2d","float32"),d=C(t,"filter","conv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=B(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(4===c.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),$(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),vn("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];$(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),$(Xr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let y,b,g=zp(c.shape,d.shape,n,s,r,i);if(null!=o&&(y=C(o,"bias","fused conv2d"),[y]=St(y,h),"NHWC"===a?st(g.outShape,y.shape):($(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),$(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`))),null!=u){let _=u.shape;if($(_.length<=1||3===_.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),1===_.length)$(1===_[0]||_[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${g.outChannels}).`);else if(3===_.length)try{st(_,g.outShape)}catch{throw Error(`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${g.outShape}).`)}b=C(u,"prelu weights","fused conv2d")}let x=(_,T)=>{$("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,A,D,F]=T,S=uc(_,D,l);$(qa(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let G=[gg(A.shape,S,E,n,r),iy(A,S,E.shape,n,r)];if(null!=F){let j=pc(F,S);G.push(j)}return G},v={x:c,filter:d,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?Jr((_,T,E)=>{let A=L.runKernel(Zi,v,I);return E([T,_,A]),f&&(A=B(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(c,d):Jr((_,T,E,A)=>{let D=L.runKernel(Zi,v,I);return A([T,_,D,E]),f&&(D=B(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:x}})(c,d,y)}}),vS=z({depthwiseConv2dNativeBackpropFilter_:function mz(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;return 3===l.rank&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]])),L.runKernel(dh,{x:o,dy:l},{strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n})}}),wS=z({depthwiseConv2dNativeBackpropInput_:function gz(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=L.runKernel(hh,{dy:o,filter:n},{strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e});return l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),bz=z({fusedDepthwiseConv2d_:function yz({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(!1===hc(L.state.gradientDepth,l)){let I=lo(e,t,n,r,a,s,i);return null!=o&&(I=ee(I,o)),dc(I,l,u,p)}let h=C(e,"x","depthwiseConv2d","float32"),d=C(t,"filter","depthwiseConv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=B(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(4===c.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),$(c.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==s&&(s=[1,1]),$(Xr(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),vn("fused depthwiseConv2d",r,i);let g,y,m=zp(c.shape,d.shape,n,s,r,i,!0);null!=o&&(g=C(o,"bias","fused conv2d"),[g]=St(g,h),st(m.outShape,g.shape)),null!=u&&(y=C(u,"prelu weights","fused depthwiseConv2d"));let b=(I,_)=>{$(qa(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[T,E,A,D]=_,F=uc(I,A,l),S=wS(E.shape,F,T,n,r,s,i),O=vS(E,F,T.shape,n,r,s,i);return null!=D?[S,O,pc(g,F)]:[S,O]},x={x:c,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?Jr((I,_,T)=>{let E=L.runKernel(Xi,x,v);return T([_,I,E]),f&&(E=B(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,d):Jr((I,_,T,E)=>{let A=L.runKernel(Xi,x,v);return E([_,I,A,T]),f&&(A=B(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(c,d,g)}}),vz=z({fusedMatMul_:function xz({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===hc(L.state.gradientDepth,s)){let D=Oe(e,t,n,r);return null!=a&&(D=ee(D,a)),dc(D,s,i,o)}let l=C(e,"a","fused matMul"),u=C(t,"b","fused matMul");[l,u]=St(l,u);let p=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ht(f),y=ht(m);$(p===h,()=>`Error in fused matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);let I,_,b=st(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),x=B(l,n?[g,p,d]:[g,d,p]),v=B(u,r?[y,c,h]:[y,h,c]);null!=a&&(I=C(a,"bias","fused matMul"),[I]=St(I,l),st(b,I.shape)),null!=i&&(_=C(i,"prelu weights","fused matMul"));let T=(D,F)=>{let K,Z,[S,O,U,G]=F,j=uc(B(D,U.shape),U,s);return n||r?!n&&r?(K=Oe(j,O,!1,!1),Z=Oe(j,S,!0,!1)):n&&!r?(K=Oe(O,j,!1,!0),Z=Oe(S,j,!1,!1)):(K=Oe(O,j,!0,!0),Z=Oe(j,S,!0,!0)):(K=Oe(j,O,!1,!0),Z=Oe(S,j,!0,!1)),null!=a?[K,Z,pc(G,j)]:[K,Z]},E={a:x,b:v,bias:I,preluActivationWeights:_},A={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Jr((D,F,S)=>{let O=L.runKernel(Ki,E,A);return S([D,F,O]),{value:B(O,b),gradFunc:T}})(x,v):Jr((D,F,S,O)=>{let U=L.runKernel(Ki,E,A);return O([D,F,U,S]),{value:B(U,b),gradFunc:T}})(x,v,I)}}),kz=z({hammingWindow_:function wz(e){return lc(e,.54,.46)}}),kS=z({hannWindow_:function Iz(e){return lc(e,.5,.5)}}),IS=z({frame_:function Sz(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ve(e,s,t)),s+=n;if(r)for(;s<e.size;){let o=s+t-e.size,l=at([Ve(e,s,t-o),Gn([o],a)]);i.push(l),s+=n}return 0===i.length?Qr([],[0,t]):B(at(i),[i.length,t])}}),_z=z({stft_:function Nz(e,t,n,r,a=kS){null==r&&(r=ay(t));let s=IS(e,t,n),i=P(s,a(t));return Qp(i,r)}}),Cz=z({cropAndResize_:function Tz(e,t,n,r,a="bilinear",s=0){let i=C(e,"image","cropAndResize"),o=C(t,"boxes","cropAndResize","float32"),l=C(n,"boxInd","cropAndResize","int32"),u=o.shape[0];return $(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),$(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),$(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),$("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`),L.runKernel(ol,{image:i,boxes:o,boxInd:l},{method:a,extrapolationValue:s,cropSize:r})}}),$z=z({flipLeftRight_:function Ez(e){let t=C(e,"image","flipLeftRight","float32");return $(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),L.runKernel(fl,{image:t},{})}}),Fz=z({grayscaleToRGB_:function Az(e){let t=C(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),$(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,jn(t,a)}}),Dz=z({rotateWithOffset_:function Rz(e,t,n=0,r=.5){let a=C(e,"image","rotateWithOffset","float32");return $(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),L.runKernel(Jl,{image:a},{radians:t,fillValue:n,center:r})}});function yu(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(1===t.rank,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Oz=z({nonMaxSuppression_:function Mz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppression","float32"),i=C(t,"scores","nonMaxSuppression","float32"),o=yu(s,i,n,r,a);return L.runKernel(El,{boxes:s,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold})}});function Lz(e,t,n){let r=function zz(e,t,n){return function Bz(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Pz)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function Pz(e,t){return e>t?1:e<t?-1:0}function SS(e,t,n,r,a){return oy(e,t,n,r,a,0)}function NS(e,t,n,r,a,s){return oy(e,t,n,r,a,0,!1,s,!0)}function _S(e,t,n,r,a,s){return oy(e,t,n,r,a,s,!0)}function oy(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(TS);let p=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let v=!1;for(let I=h.length-1;I>=x;--I){let _=Wz(e,b,h[I]);if(_>=r){v=!0;break}if(g.score=g.score*Vz(r,p,_),g.score<=a)break}g.suppressBeginIndex=h.length,v||(g.score===y?(h.push(b),d.push(g.score)):g.score>a&&Lz(u,g,TS))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function Wz(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-u)*(d-p);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,p),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function Vz(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function TS(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function ly(){return ly=(0,R.Z)(function*(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppressionAsync"),i=C(t,"scores","nonMaxSuppressionAsync"),o=yu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=yield Promise.all([s.data(),i.data()]),u=l[0],p=l[1],{selectedIndices:h}=SS(u,p,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),nt(h,"int32")}),ly.apply(this,arguments)}var jz=z({nonMaxSuppressionWithScore_:function Hz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=yu(i,o,n,r,a,s),h=L.runKernel(Al,{boxes:i,scores:o},{maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma});return{selectedIndices:h[0],selectedScores:h[1]}}});function uy(){return uy=(0,R.Z)(function*(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),l=yu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=yield Promise.all([i.data(),o.data()]),p=u[0],h=u[1],{selectedIndices:d,selectedScores:c}=_S(p,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:nt(d,"int32"),selectedScores:nt(c)}}),uy.apply(this,arguments)}var Xz=z({nonMaxSuppressionPadded_:function Zz(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),l=yu(i,o,n,r,a,null),f=L.runKernel($l,{boxes:i,scores:o},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s});return{selectedIndices:f[0],validOutputs:f[1]}}});function py(){return py=(0,R.Z)(function*(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),l=yu(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,[d,c]=yield Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=NS(d,c,u,p,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:nt(f,"int32"),validOutputs:we(m,"int32")}}),py.apply(this,arguments)}var CS=z({resizeBilinear_:function Qz(e,t,n=!1,r=!1){let a=C(e,"images","resizeBilinear");$(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),$(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,u=L.runKernel($i,{images:s},{alignCorners:n,halfPixelCenters:r,size:t});return i?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ES=z({resizeNearestNeighbor_:function eP(e,t,n=!1,r=!1){let a=C(e,"images","resizeNearestNeighbor");$(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),$(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),$(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,u=L.runKernel(Ei,{images:s},{alignCorners:n,halfPixelCenters:r,size:t});return i?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),rP=z({threshold_:function tP(e,t="binary",n=!1,r=.5){let p,h,d,c,a=C(e,"image","threshold"),l=a.shape[0]*a.shape[1],u=P(nt([r]),255);if($(3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),$(3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),$("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),$("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===a.shape[2]){[p,h,d]=Fn(a,[1,1,1],-1);let m=P(p,.2989),g=P(h,.587),y=P(d,.114);c=ee(ee(m,g),y)}else c=e;"otsu"===t&&(u=function nP(e,t){let s,i,o,l,u,p,n=nt([-1]),r=nt([0]),a=nt([0]);for(let h=0;h<e.size-1;h++){s=Ve(e,0,h+1),i=Ve(e,h+1),u=fe(ge(s),t),p=fe(ge(i),t);let d=ge(P(s,co(0,s.size)));o=fe(d,ge(s));let c=Gn(i.shape,s.size),f=ee(co(0,i.size),c),m=P(i,f);l=fe(ge(m),ge(i));let g=ce(o,l),y=ce(o,l),b=P(u,p);a=P(P(b,g),y);let x=In(a,r);r=Xt(x,a,r),n=Xt(x,nt([h]),n)}return n}(pg(le(Zh(c),"int32"),xn([]),256),l));let f=n?Ka(c,u):In(c,u);return le(P(f,255),"int32")}}),sP=z({transform_:function aP(e,t,n="nearest",r="constant",a=0,s){let i=C(e,"image","transform","float32"),o=C(t,"transforms","transform","float32");return $(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`),L.runKernel(Kl,{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:a,outputShape:s})}}),oP=z({bandPart_:function iP(e,t,n){let r=C(e,"a","bandPart");$(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let o,l,a=r.shape,[s,i]=r.shape.slice(-2);"number"==typeof t?($(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=C(t<0?s:t,"numLower","bandPart")):($("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),o=Xt(uu(t,0),s,Za(t,s))),"number"==typeof n?($(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),$(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=C(n<0?i:n,"numUpper","bandPart")):($("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=Xt(uu(n,0),i,Za(n,i)));let u=B(co(0,s,1,"int32"),[-1,1]),p=co(0,i,1,"int32"),h=ce(u,p),d=Ir(Ka(h,o),xa(h,ft(l))),c=_t([s,i],r.dtype);return B(Wt($t(B(r,[-1,s,i])).map(f=>Xt(d,f,c))),a)}}),uP=z({gramSchmidt_:function lP(e){let t;if(Array.isArray(e)){t=!1,$(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=Fn(e,e.shape[0],0).map(a=>Ya(a,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(L.tidy(()=>{let s=r[a];if(a>0)for(let i=0;i<a;++i){let o=P(ge(P(n[i],s)),n[i]);s=ce(s,o)}return fe(s,iu(s,"euclidean"))}));return t?Wt(n,0):n}});function $S(e,t=!1){return L.tidy(()=>{$(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=Bh(n),s=Zr(e),i=Qr([[1]],[1,1]),o=Zr(i),l=n>=r?r:n;for(let u=0;u<l;++u){let p=s,h=o,d=a;[o,s,a]=L.tidy(()=>{let c=Ve(s,[u,u],[n-u,1]),f=iu(c),m=Ve(s,[u,u],[1,1]),g=Xt(In(m,0),Qr([[-1]]),Qr([[1]])),y=ce(m,P(g,f)),b=fe(c,y);o=1===b.shape[0]?Zr(i):at([i,Ve(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=ft(fe(Oe(g,y),f)),v=Ve(s,[u,0],[n-u,r]),I=P(x,o),_=Le(o);if(0===u)s=ce(v,Oe(I,Oe(_,v)));else{let A=ce(v,Oe(I,Oe(_,v)));s=at([Ve(s,[0,0],[u,r]),A],0)}let T=Le(I),E=Ve(a,[0,u],[n,a.shape[1]-u]);if(0===u)a=ce(E,Oe(Oe(E,o),T));else{let A=ce(E,Oe(Oe(E,o),T));a=at([Ve(a,[0,0],[n,u]),A],1)}return[o,s,a]}),Ee([p,h,d])}return!t&&n>r&&(a=Ve(a,[0,0],[n,r]),s=Ve(s,[0,0],[r,r])),[a,s]})}var Sn,dP=z({qr_:function pP(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return $S(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),r=$t(B(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(l=>{let[u,p]=$S(l,t);a.push(u),s.push(p)}),[B(Wt(a,0),e.shape),B(Wt(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Sn||(Sn={}));var va=z({computeWeightedLoss_:function hP(e,t,n=Sn.SUM_BY_NONZERO_WEIGHTS){let r=C(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=C(t,"weights","computeWeightedLoss"));let s=null==a?r:P(r,a);if(n===Sn.NONE)return s;if(n===Sn.SUM)return ge(s);if(n===Sn.MEAN){if(null==a)return Nt(s);{let i=r.size/a.size,o=fe(ge(s),ge(a));return i>1?fe(o,we(i)):o}}if(n===Sn.SUM_BY_NONZERO_WEIGHTS){if(null==a)return fe(ge(s),we(r.size));{let i=P(a,Kn(r.shape)),o=le(ge(ho(i,we(0))),"float32");return fe(ge(s),o)}}throw Error(`Unknown reduction: ${n}`)}}),fP=z({absoluteDifference_:function cP(e,t,n,r=Sn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","absoluteDifference"),s=C(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=C(n,"weights","absoluteDifference")),yn(a.shape,s.shape,"Error in absoluteDifference: ");let o=Dt(ce(a,s));return va(o,i,r)}}),gP=z({cosineDistance_:function mP(e,t,n,r,a=Sn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","cosineDistance"),i=C(t,"predictions","cosineDistance"),o=null;null!=r&&(o=C(r,"weights","cosineDistance")),yn(s.shape,i.shape,"Error in cosineDistance: ");let l=we(1),u=ce(l,ge(P(s,i),n,!0));return va(u,o,a)}}),bP=z({hingeLoss_:function yP(e,t,n,r=Sn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","hingeLoss"),s=C(t,"predictions","hingeLoss"),i=null;null!=n&&(i=C(n,"weights","hingeLoss")),yn(a.shape,s.shape,"Error in hingeLoss: ");let o=we(1);a=ce(P(we(2),a),o);let l=tt(ce(o,P(a,s)));return va(l,i,r)}}),vP=z({huberLoss_:function xP(e,t,n,r=1,a=Sn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","huberLoss"),i=C(t,"predictions","huberLoss"),o=null;null!=n&&(o=C(n,"weights","huberLoss")),yn(s.shape,i.shape,"Error in huberLoss: ");let l=we(r),u=Dt(ce(i,s)),p=Za(u,l),h=ce(u,p),d=ee(P(we(.5),it(p)),P(l,h));return va(d,o,a)}}),kP=z({logLoss_:function wP(e,t,n,r=1e-7,a=Sn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","logLoss"),i=C(t,"predictions","logLoss"),o=null;null!=n&&(o=C(n,"weights","logLoss")),yn(s.shape,i.shape,"Error in logLoss: ");let l=we(1),u=we(r),p=ft(P(s,qn(ee(i,u)))),h=P(ce(l,s),qn(ee(ce(l,i),u))),d=ce(p,h);return va(d,o,a)}}),SP=z({meanSquaredError_:function IP(e,t,n,r=Sn.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","meanSquaredError"),s=C(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=C(n,"weights","meanSquaredError")),yn(a.shape,s.shape,"Error in meanSquaredError: ");let o=nc(a,s);return va(o,i,r)}}),TP=z({sigmoidCrossEntropy_:function _P(e,t,n,r=0,a=Sn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"multiClassLabels","sigmoidCrossEntropy"),i=C(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=C(n,"weights","sigmoidCrossEntropy")),yn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let u=we(r),p=we(1),h=we(.5);s=ee(P(s,ce(p,u)),P(h,u))}let l=function NP(e,t){let n=C(e,"labels","sigmoidCrossEntropyWithLogits"),r=C(t,"logits","sigmoidCrossEntropyWithLogits");yn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=tt(r),s=P(r,n),i=jp(kn(ft(Dt(r))));return ee(ce(a,s),i)}(s,i);return va(l,o,a)}}),$P=z({softmaxCrossEntropy_:function EP(e,t,n,r=0,a=Sn.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"onehotLabels","softmaxCrossEntropy"),i=C(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=C(n,"weights","softmaxCrossEntropy")),yn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let u=we(r),p=we(1),h=we(s.shape[1]);s=ee(P(s,ce(p,u)),fe(u,h))}let l=function CP(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Jr((r,a,s)=>{let i=Uh(a,[n],!0),o=ce(le(a,"float32"),i);s([r,o]);let l=ft(P(o,r));return{value:ge(l,[n]),gradFunc:(u,p)=>{let[h,d]=p,c=uo(u.shape,[n]);return[P(B(u,c),ce(le(h,"float32"),kn(d))),P(B(u,c),ce(kn(d),le(h,"float32")))]}}})(e,t)}(s,i);return va(l,o,a)}}),FP=z({sparseFillEmptyRows_:function AP(e,t,n,r){let a=C(e,"indices","sparseFillEmptyRows","int32"),s=C(t,"values","sparseFillEmptyRows"),i=C(n,"denseShape","sparseFillEmptyRows","int32"),o=C(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u=L.runKernel(mp,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),DP=z({sparseReshape_:function RP(e,t,n){let r=C(e,"inputIndices","sparseReshape","int32"),a=C(t,"inputShape","sparseReshape","int32"),s=C(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let o=L.runKernel(Gl,{inputIndices:r,inputShape:a,newShape:s});return{outputIndices:o[0],outputShape:o[1]}}}),OP=z({sparseSegmentMean_:function MP(e,t,n){let r=C(e,"data","sparseSegmentMean"),a=C(t,"indices","sparseSegmentMean","int32"),s=C(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);return L.runKernel(gp,{data:r,indices:a,segmentIds:s})}}),zP=z({sparseSegmentSum_:function LP(e,t,n){let r=C(e,"data","sparseSegmentSum"),a=C(t,"indices","sparseSegmentSum","int32"),s=C(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);return L.runKernel(yp,{data:r,indices:a,segmentIds:s})}}),BP=z({stringNGrams_:function PP(e,t,n,r,a,s,i,o){let l=C(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=C(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d=L.runKernel(vp,{data:l,dataSplits:u},{separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:d[0],nGramsSplits:d[1]}}}),VP=z({stringSplit_:function WP(e,t,n=!0){let r=C(e,"input","stringSplit","string"),a=C(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let o=L.runKernel(wp,{input:r,delimiter:a},{skipEmpty:n});return{indices:o[0],values:o[1],shape:o[2]}}}),GP=z({stringToHashBucketFast_:function UP(e,t){let n=C(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return L.runKernel(kp,{input:n},r)}}),jP=z({staticRegexReplace_:function HP(e,t,n,r=!0){let a=C(e,"input","staticRegexReplace","string");return L.runKernel(xp,{x:a},{pattern:t,rewrite:n,replaceGlobal:r})}}),AS={fft:Yp,ifft:mu,rfft:Qp,irfft:tc},FS={hammingWindow:kz,hannWindow:kS,frame:IS,stft:_z},lr={flipLeftRight:$z,grayscaleToRGB:Fz,resizeNearestNeighbor:ES,resizeBilinear:CS,rotateWithOffset:Dz,cropAndResize:Cz,nonMaxSuppression:Oz,nonMaxSuppressionAsync:function Uz(e,t,n){return ly.apply(this,arguments)},nonMaxSuppressionWithScore:jz,nonMaxSuppressionWithScoreAsync:function qz(e,t,n){return uy.apply(this,arguments)},nonMaxSuppressionPadded:Xz,nonMaxSuppressionPaddedAsync:function Jz(e,t,n){return py.apply(this,arguments)},threshold:rP,transform:sP},dy={bandPart:oP,gramSchmidt:uP,qr:dP},RS={absoluteDifference:fP,computeWeightedLoss:va,cosineDistance:gP,hingeLoss:bP,huberLoss:vP,logLoss:kP,meanSquaredError:SP,sigmoidCrossEntropy:TP,softmaxCrossEntropy:$P},DS={sparseFillEmptyRows:FP,sparseReshape:DP,sparseSegmentMean:OP,sparseSegmentSum:zP},MS={stringNGrams:BP,stringSplit:VP,stringToHashBucketFast:GP,staticRegexReplace:jP},re={};_e(re,{Serializable:()=>OS,SerializationMap:()=>mo,registerClass:()=>LS});var OS=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},mo=class{constructor(){this.classNameMap={}}static getMap(){return null==mo.instance&&(mo.instance=new mo),mo.instance}static register(e){mo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function LS(e){$(null!=e.className,()=>"Class being registered does not have the static className property defined."),$("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),mo.register(e)}var wa=class extends OS{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let s=n.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return Ee(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return OI(e,t)}dispose(){null!=this.iterations_&&Ee(this.iterations_)}saveIterations(){var e=this;return(0,R.Z)(function*(){return null==e.iterations_&&(e.iterations_=0),{name:"iter",tensor:we(e.iterations_,"int32")}})()}getWeights(){return(0,R.Z)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(e){var t=this;return(0,R.Z)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${t.getClassName()}`)})()}extractIterations(e){var t=this;return(0,R.Z)(function*(){return t.iterations_=(yield e[0].tensor.data())[0],e.slice(1)})()}};Object.defineProperty(wa,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var hy=class extends wa{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=L.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:W(()=>He(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:W(()=>He(r).variable(!1))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;W(()=>{let l=ee(P(i,this.rho),P(it(s),1-this.rho)),u=P(fe(rn(ee(o,this.epsilon)),rn(ee(i,this.epsilon))),s),p=ee(P(o,this.rho),P(it(u),1-this.rho));i.assign(l),o.assign(p);let h=ee(P(u,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}getWeights(){var e=this;return(0,R.Z)(function*(){let t=[...e.accumulatedGrads,...e.accumulatedUpdates];return[yield e.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))})()}setWeights(e){var t=this;return(0,R.Z)(function*(){let n=(e=yield t.extractIterations(e)).length/2;t.accumulatedGrads=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),t.accumulatedUpdates=e.slice(n,2*n).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},cy=class extends wa{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:W(()=>Gn(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;W(()=>{let i=ee(s,it(a));s.assign(i);let o=ee(P(fe(a,rn(ee(i,L.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ee(this.accumulatedGrads.map(e=>e.variable))}getWeights(){var e=this;return(0,R.Z)(function*(){return[yield e.saveIterations()].concat(e.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})()}setWeights(e){var t=this;return(0,R.Z)(function*(){e=yield t.extractIterations(e),t.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},fy=class extends wa{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=we(t).variable(),this.accBeta2=we(n).variable()}),null==r&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=ce(1,this.accBeta1),r=ce(1,this.accBeta2);t.forEach((a,s)=>{let i=L.registeredVariables[a];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:W(()=>He(i).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:W(()=>He(i).variable(!1))});let l=Array.isArray(e)?e[s].tensor:e[a];if(null==l)return;let u=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,h=ee(P(u,this.beta1),P(l,1-this.beta1)),d=ee(P(p,this.beta2),P(it(l),1-this.beta2)),c=fe(h,n),f=fe(d,r);u.assign(h),p.assign(d);let m=ee(P(fe(c,ee(rn(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(P(this.accBeta1,this.beta1)),this.accBeta2.assign(P(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}getWeights(){var e=this;return(0,R.Z)(function*(){let t=[...e.accumulatedFirstMoment,...e.accumulatedSecondMoment];return[yield e.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))})()}setWeights(e){var t=this;return(0,R.Z)(function*(){e=yield t.extractIterations(e),W(()=>{t.accBeta1.assign(ba(t.beta1,t.iterations_+1)),t.accBeta2.assign(ba(t.beta2,t.iterations_+1))});let n=e.length/2;t.accumulatedFirstMoment=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),t.accumulatedSecondMoment=e.slice(n,2*n).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},my=class extends wa{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=we(0).variable(),this.accBeta1=we(t).variable()}),null==r&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=ce(1,this.accBeta1),r=fe(-this.learningRate,ee(P(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=L.registeredVariables[a];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:He(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:He(i).variable(!1)});let l=Array.isArray(e)?e[s].tensor:e[a];if(null==l)return;let u=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,h=ee(P(u,this.beta1),P(l,1-this.beta1)),d=P(p,this.beta2),c=Dt(l),f=Yr(d,c);u.assign(h),p.assign(f);let m=ee(P(fe(r,n),fe(h,ee(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(ee(this.iteration,1)),this.accBeta1.assign(P(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}getWeights(){return(0,R.Z)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(e){return(0,R.Z)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},cc=class extends wa{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=L.registeredVariables[t];W(()=>{let s=ee(P(this.c,r),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Bt(we(-e))}dispose(){this.c.dispose()}getWeights(){var e=this;return(0,R.Z)(function*(){return[yield e.saveIterations()]})()}setWeights(e){var t=this;return(0,R.Z)(function*(){if(0!==(e=yield t.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},gy=class extends cc{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=we(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:W(()=>He(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&W(()=>{let i,o=ee(P(this.m,a),s);i=ee(P(this.c,this.useNesterov?ee(s,P(o,this.m)):o),r),a.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}getWeights(){var e=this;return(0,R.Z)(function*(){return[yield e.saveIterations()].concat(e.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})()}setWeights(e){var t=this;return(0,R.Z)(function*(){e=yield t.extractIterations(e),t.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},yy=class extends wa{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=L.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=L.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:W(()=>He(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:W(()=>He(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:W(()=>He(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;W(()=>{let l=ee(P(i,this.decay),P(it(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[n].variable,p=ee(P(u,this.decay),P(s,1-this.decay)),h=fe(P(s,this.learningRate),rn(ce(l,ee(it(p),this.epsilon)))),d=ee(P(o,this.momentum),h);i.assign(l),u.assign(p),o.assign(d);let c=ce(r,d);r.assign(c)}else{let u=ee(P(i,this.decay),P(it(s),1-this.decay)),p=ee(P(o,this.momentum),fe(P(s,this.learningRate),rn(ee(u,this.epsilon))));i.assign(u),o.assign(p);let h=ce(r,p);r.assign(h)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Ee(this.accumulatedMoments.map(e=>e.variable))}getWeights(){var e=this;return(0,R.Z)(function*(){let t=[...e.accumulatedMeanSquares,...e.accumulatedMoments];return e.centered&&t.push(...e.accumulatedMeanGrads),[yield e.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))})()}setWeights(e){var t=this;return(0,R.Z)(function*(){e=yield t.extractIterations(e);let n=t.centered?e.length/3:e.length/2,r=!1;t.accumulatedMeanSquares=e.slice(0,n).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})),t.accumulatedMoments=e.slice(n,2*n).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})),t.centered&&(t.accumulatedMeanGrads=e.slice(2*n,3*n).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},qP=[hy,cy,fy,my,gy,yy,cc],sn={};function zS(e){return new Promise(t=>setTimeout(t)).then(e)}_e(sn,{CompositeArrayBuffer:()=>Kr,browserFiles:()=>tB,browserHTTPRequest:()=>iB,concatenateArrayBuffers:()=>_D,copyModel:()=>KD,decodeWeights:()=>sI,encodeWeights:()=>kD,fromMemory:()=>lB,fromMemorySync:()=>GS,getLoadHandlers:()=>DD,getModelArtifactsForJSON:()=>Lm,getModelArtifactsForJSONSync:()=>uI,getModelArtifactsInfoForJSON:()=>Op,getSaveHandlers:()=>RD,getWeightSpecs:()=>pI,http:()=>ky,isHTTPScheme:()=>wy,listModels:()=>jD,loadWeights:()=>nB,moveModel:()=>ZD,registerLoadRouter:()=>FD,registerSaveRouter:()=>AD,removeModel:()=>qD,weightsLoaderFactory:()=>WS,withSaveHandler:()=>uB,withSaveHandlerSync:()=>pB});var bu=class{constructor(e){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(bu.URL_SCHEME)&&(e=e.slice(bu.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}save(e){var t=this;return(0,R.Z)(function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let n=Kr.join(e.weightData),r=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let s=lI(e,[{paths:["./"+t.weightDataFileName],weights:e.weightSpecs}]),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),o=null==t.modelJsonAnchor?document.createElement("a"):t.modelJsonAnchor;if(o.download=t.modelJsonFileName,o.href=i,yield zS(()=>o.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let l=null==t.weightDataAnchor?document.createElement("a"):t.weightDataAnchor;l.download=t.weightDataFileName,l.href=r,yield zS(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Op(e)}}})()}};bu.URL_SCHEME="downloads://";var YP=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}load(){var e=this;return(0,R.Z)(function*(){return new Promise((t,n)=>{let r=new FileReader;r.onload=a=>{let s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void n(new Error(`modelTopology field is missing from file ${e.jsonFile.name}`));if(null==s.weightsManifest)return void n(new Error(`weightManifest field is missing from file ${e.jsonFile.name}`));if(0===e.weightsFiles.length)return void t({modelTopology:i});let o=Lm(s,l=>e.loadWeights(l));t(o)},r.onerror=a=>n(`Failed to read model topology and weights manifest JSON from file '${e.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(e.jsonFile)})})()}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(a).then(s=>[t,s])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=s=>{n(s.target.result)},a.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(a=>oI(a.name)),r={};for(let a of e)a.paths.forEach(s=>{let i=oI(s);if(-1!==t.indexOf(i))throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),-1===n.indexOf(i))throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}};function tB(e){return new YP(e)}function PS(e,t,n,r){(function i(l){$(null!=l&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")})(e),function o(l,u){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),$(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}(n=n??0,r=r??1);let a=0;return Promise.all(e.map(l=>(l.then(u=>{let p=n+ ++a/e.length*(r-n);return t(p),u}),l)))}function BS(e,t){return by.apply(this,arguments)}function by(){return by=(0,R.Z)(function*(e,t){null==t&&(t={});let n=null==t.fetchFunc?H().platform.fetch:t.fetchFunc,r=e.map(u=>n(u,t.requestInit,{isBinary:!0})),i=(null==t.onProgress?yield Promise.all(r):yield PS(r,t.onProgress,0,.5)).map(u=>u.arrayBuffer());return null==t.onProgress?yield Promise.all(i):yield PS(i,t.onProgress,.5,1)}),by.apply(this,arguments)}function nB(e){return xy.apply(this,arguments)}function xy(){return xy=(0,R.Z)(function*(e,t="",n,r){return WS(a=>BS(a,{requestInit:r}))(e,t,n)}),xy.apply(this,arguments)}function WS(e){return function(){var t=(0,R.Z)(function*(n,r="",a){let s=n.map(()=>!1),i={},o=null!=a?a.map(()=>!1):[],l=[];if(n.forEach((f,m)=>{let g=0;f.weights.forEach(y=>{let x=Dm["quantization"in y?y.quantization.dtype:y.dtype]*ht(y.shape),v=()=>{s[m]=!0,null==i[m]&&(i[m]=[]),i[m].push({manifestEntry:y,groupOffset:g,sizeBytes:x})};null!=a?a.forEach((I,_)=>{I===y.name&&(v(),o[_]=!0)}):v(),l.push(y.name),g+=x})}),!o.every(f=>f)){let f=a.filter((m,g)=>!o[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. \nManifest JSON has weights with names: ${l.join(", ")}.`)}let u=s.reduce((f,m,g)=>(m&&f.push(g),f),[]),p=[];u.forEach(f=>{n[f].paths.forEach(m=>{let g=r+(r.endsWith("/")?"":"/")+m;p.push(g)})});let h=yield e(p),d={},c=0;return u.forEach(f=>{let m=n[f].paths.length,g=new Kr(h.slice(c,c+m));i[f].forEach(y=>{let x=sI(g.slice(y.groupOffset,y.groupOffset+y.sizeBytes),[y.manifestEntry]);for(let v in x)d[v]=x[v]}),c+=m}),d});return function(n){return t.apply(this,arguments)}}()}Et.registerSaveRouter(e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(bu.URL_SCHEME)?function eB(e="model"){return new bu(e)}(e.slice(bu.URL_SCHEME.length)):null);var vy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?($("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,$(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}save(e){var t=this;return(0,R.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let n=Object.assign({method:t.DEFAULT_METHOD},t.requestInit);n.body=new FormData;let a=lI(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(n.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){let i=Kr.join(e.weightData);n.body.append("model.weights.bin",new Blob([i],{type:"application/octet-stream"}),"model.weights.bin")}let s=yield t.fetch(t.path,n);if(s.ok)return{modelArtifactsInfo:Op(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})()}load(){var e=this;return(0,R.Z)(function*(){let n,t=yield e.fetch(e.path,e.requestInit);if(!t.ok)throw new Error(`Request to ${e.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{n=yield t.json()}catch{let i=`Failed to parse model JSON of response from ${e.path}.`;throw e.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}if(null==n.modelTopology&&null==n.weightsManifest)throw new Error(`The JSON from HTTP path ${e.path} contains neither model topology or manifest for weights.`);return Lm(n,s=>e.loadWeights(s))})()}loadWeights(e){var t=this;return(0,R.Z)(function*(){let n=Array.isArray(t.path)?t.path[1]:t.path,[r,a]=function sB(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(n),s=t.weightPathPrefix||r,i=pI(e),o=[],l=[];for(let p of e)for(let h of p.paths)null!=t.weightUrlConverter?l.push(t.weightUrlConverter(h)):o.push(s+h+a);return t.weightUrlConverter&&o.push(...yield Promise.all(l)),[i,yield BS(o,{requestInit:t.requestInit,fetchFunc:t.fetch,onProgress:t.onProgress})]})()}};function wy(e){return null!=e.match(vy.URL_SCHEME_REGEX)}vy.URL_SCHEME_REGEX=/^https?:\/\//;var VS=(e,t)=>{if(typeof fetch>"u"&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(r=>wy(r)):wy(e),n)return ky(e,t)}return null};function ky(e,t){return new vy(e,t)}function iB(e,t){return ky(e,t)}Et.registerSaveRouter(VS),Et.registerLoadRouter(VS);var Iy=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},US=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},oB=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function lB(e,t,n,r){return new oB(GS(...arguments))}function GS(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Iy(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Iy({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Iy({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function uB(e){return new US(e)}function pB(e){return new US(e)}var HS={};_e(HS,{confusionMatrix:()=>hB});var hB=z({confusionMatrix_:function dB(e,t,n){let r=C(e,"labels","confusionMatrix"),a=C(t,"predictions","confusionMatrix");$(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),$(1===a.rank,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),$(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=pu(le(r,"int32"),n),i=pu(le(a,"int32"),n),o=Le(s),l=Oe(o,i);return le(l,"int32")}}),ed={};_e(ed,{draw:()=>vB,fromPixels:()=>wB,fromPixelsAsync:()=>yB,toPixels:()=>xB});var go,jS=!1;function qS(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=kh(wh,L.backendName))return L.runKernel(wh,{pixels:e},{numChannels:t});let p,h,[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)p=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)p=e.data;else if(s||a||o){if(null==go)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");go=new OffscreenCanvas(1,1).getContext("2d")}else go=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});go.canvas.width=l,go.canvas.height=u,go.drawImage(e,0,0,l,u),p=go.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(p);else{let d=l*u;h=new Int32Array(d*t);for(let c=0;c<d;c++)for(let f=0;f<t;++f)h[c*t+f]=p[4*c+f]}return rc(h,[u,l,t],"int32")}function yB(e){return Sy.apply(this,arguments)}function Sy(){return Sy=(0,R.Z)(function*(e,t=3){let n=null;if(H().getBool("WRAP_TO_IMAGEBITMAP")&&function gB(e){return function fB(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}()&&!(e instanceof ImageBitmap)&&function mB(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function cB(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let r;try{r=yield createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}n=null!=r&&r.width===e.width&&r.height===e.height?r:e}else n=e;return qS(n,t)}),Sy.apply(this,arguments)}function KS(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function xB(e,t){return Ny.apply(this,arguments)}function Ny(){return Ny=(0,R.Z)(function*(e,t){let n=C(e,"img","toPixels");if(!(e instanceof $e)){let u=n;n=le(u,"int32"),u.dispose()}KS(n);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=yield n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let p=[0,0,0,255];for(let d=0;d<s;d++){let c=i[u*s+d];if("float32"===n.dtype){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if("int32"===n.dtype&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);1===s?(p[0]=c*o,p[1]=c*o,p[2]=c*o):p[d]=c*o}let h=4*u;l[h+0]=Math.round(p[0]),l[h+1]=Math.round(p[1]),l[h+2]=Math.round(p[2]),l[h+3]=Math.round(p[3])}if(null!=t){jS||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),jS=!0),t.width=a,t.height=r;let u=t.getContext("2d"),p=new ImageData(l,a,r);u.putImageData(p,0,0)}return n!==e&&n.dispose(),l}),Ny.apply(this,arguments)}function vB(e,t,n){let r=C(e,"img","draw");if(!(e instanceof $e)){let i=r;r=le(i,"int32"),i.dispose()}KS(r),function bB(e){let t=e?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(n?.imageOptions),L.runKernel(vm,{image:r},{canvas:t,options:n})}var wB=z({fromPixels_:qS}),_y={};function ZS(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ht(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let u=1;for(let h=s;h<n;++h)u*=o[h],l.push(o[h]);let p=[...jo(e.shape).map(h=>h/u),1].slice(0,s);return[l,i,u,p]}_e(_y,{prepareAndValidate:()=>ZS});var Vt={};_e(Vt,{assertParamsValid:()=>IB,computeFlatOffset:()=>CB,computeOutShape:()=>NB,getNormalizedAxes:()=>_B,isSliceContinous:()=>TB,maskToAxes:()=>SB,parseSliceParams:()=>aN,sliceInfo:()=>EB,startForAxis:()=>nN,startIndicesWithElidedDims:()=>QS,stopForAxis:()=>rN,stopIndicesWithElidedDims:()=>eN,stridesForAxis:()=>tN,stridesWithElidedDims:()=>XS});var Ty=-2,kB=-1;function IB(e,t,n){let r=e.shape.length;$(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),$(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)$(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function SB(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function NB(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function XS(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function JS(e,t,n){return n<=e?n:n-(t-1)}function YS(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function _B(e,t,n,r,a,s,i,o,l){let u=e.length,p=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){let c=t[0],f=n+1;p=QS(i,c,f,r,e),h=eN(o,c,f,a,e),d=XS(s,c,f,e)}else for(let c=0;c<u;c++)p[c]=nN(i,r,s,e,c,l),h[c]=rN(o,a,s,e,c,l),d[c]=tN(s,c,l);return{begin:p,end:h,strides:d}}function QS(e,t,n,r,a){let s=[...a],i=YS(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=JS(t,n,o),u=r[l];e&1<<l&&(u=0),s[o]=u}return s}function eN(e,t,n,r,a){let s=[...a],i=YS(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=JS(t,n,o),u=r[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++)s[o]<0&&(s[o]+=a[o]),s[o]=tp(0,s[o],a[o]);return s}function tN(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function nN(e,t,n,r,a,s){let i=t[a];(e&1<<a||s&1<<a||null==i)&&(i=(n[a]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=tp(0,i,l-1),i}function rN(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?tp(0,i,l):tp(-1,i,l-1),i}function TB(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function CB(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function aN(e,t,n){let r,s,a=e.shape.length;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(i=>{$(-1!==i,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((i,o)=>i>=0?i:($(-1===i,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function EB(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)p&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&i&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function $B(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ty),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(kB),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);let x=!!(d.shrinkAxisMask&1<<b),v=e[b];if(-1===v){g.push(x?1:-1);continue}let I=[d.beginMask&1<<b,d.endMask&1<<b],_=[d.strides[b]>0?0:-1,d.strides[b]>0?v:v-1];if(x&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];let T=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(x){let F=d.begin[b]<0?v+d.begin[b]:d.begin[b];if(d.begin[b]=F,d.end[b]=d.begin[b]+1,F<0||F>=v)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=sN(d.begin[b],0,d.strides[b],v,I,_),d.end[b]=sN(d.end[b],1,d.strides[b],v,I,_);let D=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===v;c=c&&D,f=f&&(0===b&&1===d.strides[b]||D)}else c=c&&1===d.strides[b]&&T,f=f&&(0===b&&1===d.strides[b]||T);let E,A=!1;if(d.beginValid&&d.endValid?(E=d.end[b]-d.begin[b],A=!0):x?(E=1,A=!0):T&&v>=0&&(E=d.strides[b]<0?-v:v,A=!0),A){let D;D=0===E||E<0!=d.strides[b]<0?0:Math.trunc(E/d.strides[b])+(E%d.strides[b]!=0?1:0),g.push(D)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){let x=d.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===Ty&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>d.finalShapeGatherIndices[x]!==Ty),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function sN(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var AB="4.7.0",iN=class{static sgd(e){return new cc(e)}static momentum(e,t,n=!1){return new gy(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new yy(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new fy(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new hy(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new my(e,t,n,r,a)}static adagrad(e,t=.1){return new cy(e,t)}},yo=iN,FB=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function Cy(){return new Promise(e=>FB(()=>e()))}var ea,N={};function RB(e,t){let n=e[0].length;e.forEach((a,s)=>{$(a.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((a,s)=>{for(let i=0;i<n;i++)$(i===t||a[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function DB(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function MB(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function OB(e){let t={FIRST_DIM_SIZE:ea.FIRST_DIM_SIZE,VALUE_ROWIDS:ea.VALUE_ROWIDS,ROW_LENGTHS:ea.ROW_LENGTHS,ROW_SPLITS:ea.ROW_SPLITS,ROW_LIMITS:ea.ROW_LIMITS,ROW_STARTS:ea.ROW_STARTS},n=[];for(let r of e){if(!(r in t))break;n.push(t[r])}return n}function LB(e){return 0===e.length?0:e[0]===ea.FIRST_DIM_SIZE?e.length-1:e.length}function zB(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&1!==s&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}_e(N,{ERF_A1:()=>qB,ERF_A2:()=>KB,ERF_A3:()=>ZB,ERF_A4:()=>XB,ERF_A5:()=>JB,ERF_P:()=>jB,PARALLELIZE_THRESHOLD:()=>Ey,RowPartitionType:()=>ea,SELU_SCALE:()=>lN,SELU_SCALEALPHA:()=>oN,applyActivation:()=>dc,assertAndGetBroadcastShape:()=>st,assertAxesAreInnerMostDims:()=>DO,assertParamsConsistent:()=>RB,assignToTypedArray:()=>rW,axesAreInnerMostDims:()=>Sg,calculateShapes:()=>pS,checkEinsumDimSizes:()=>uW,checkPadOnDimRoundingMode:()=>vn,combineLocations:()=>AI,combineRaggedTensorToTensorShapes:()=>MB,complexWithEvenIndex:()=>eW,complexWithOddIndex:()=>tW,computeConv2DInfo:()=>zp,computeConv3DInfo:()=>wI,computeDefaultPad:()=>ag,computeDilation2DInfo:()=>FM,computeOptimalWindowSize:()=>PB,computeOutAndReduceShapes:()=>FI,computeOutShape:()=>DB,computePool2DInfo:()=>vI,computePool3DInfo:()=>RM,convertConv2DDataFormat:()=>kI,decodeEinsumEquation:()=>oW,eitherStridesOrDilationsAreOne:()=>Xr,expandShapeToKeepDim:()=>uo,exponent:()=>sW,exponents:()=>aW,fromStringArrayToUint8:()=>$W,fromUint8ToStringArray:()=>EW,getAxesPermutation:()=>RI,getBroadcastDims:()=>CI,getComplexWithIndex:()=>nW,getEinsumComputePath:()=>pW,getEinsumPermutation:()=>lW,getFusedBiasGradient:()=>pc,getFusedDyActivation:()=>uc,getImageCenter:()=>BB,getInnerMostAxes:()=>MO,getPermuted:()=>VB,getRaggedRank:()=>LB,getReductionAxes:()=>Mt,getReshaped:()=>WB,getReshapedPermuted:()=>UB,getRowPartitionTypesHelper:()=>OB,getSliceBeginCoords:()=>GB,getSliceSize:()=>HB,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>fW,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>mW,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>gW,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>xW,getSparseReshapeInputOutputMismatchErrorMessage:()=>wW,getSparseReshapeInputOutputMultipleErrorMessage:()=>vW,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>yW,getSparseReshapeNegativeOutputDimErrorMessage:()=>bW,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>NW,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>kW,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>IW,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>SW,getUndoAxesPermutation:()=>Ng,isIdentityPermutation:()=>dW,log:()=>UR,mergeRealAndImagArrays:()=>YB,prepareAndValidate:()=>ZS,prepareSplitSize:()=>cW,segment_util:()=>dN,shouldFuse:()=>hc,slice_util:()=>Vt,splitRealAndImagArrays:()=>QB,stridesOrDilationsArePositive:()=>ao,tupleValuesAreOne:()=>qa,upcastType:()=>sr,validateDefaultValueShape:()=>zB,validateInput:()=>sc,validateUpdateShape:()=>Xg,warn:()=>Va}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(ea||(ea={}));var Ey=30;function PB(e){return e<=Ey?e:ih(e,Math.floor(Math.sqrt(e)))}function BB(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function WB(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function VB(e,t,n=!0){let r=[];if(n){r.push(t);for(let a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=2*t+1||i%2==1?s.push(i):a.push(i);r.push(...a),r.push(0),r.push(...s)}return r}function UB(e,t,n,r=!0){let a=[];a.push(r?e[0]/n:e[0]*n);for(let s=1;s<e.length;++s)a.push(s<=t.length?r?t[s-1]*e[s]:e[s]/t[s-1]:e[s]);return a}function GB(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function HB(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var oN=1.7580993408473768,lN=1.0507009873554805,jB=.3275911,qB=.254829592,KB=-.284496736,ZB=1.421413741,XB=-1.453152027,JB=1.061405429;function YB(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function QB(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function eW(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function tW(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function nW(e,t){return{real:e[2*t],imag:e[2*t+1]}}function rW(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function aW(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function sW(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var $y="->",iW=/->/g,uN=",",pN="...";function oW(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(iW,"").length)/$y.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${$y}").`);let[r,a]=e.split($y);$(-1===r.indexOf(pN),()=>`The ellipsis notation ("${pN}") is not supported yet.`);let s=r.split(uN),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<a.length;++d){let c=a[d];if(!s.some(f=>-1!==f.indexOf(c)))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);-1===o.indexOf(c)&&o.push(c)}for(let d=0;d<r.length;++d){let c=r[d];-1===o.indexOf(c)&&c!==uN&&o.push(c)}let l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let c=0;c<s[d].length;++c)l[d].push(o.indexOf(s[d][c]))}let u=o.length,h=[];for(let d=a.length;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function lW(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(a=>-1!==a),{permutationIndices:n,expandDims:r}}function uW(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let s=n[a].shape;for(let i=0;i<t[a].length;++i)void 0===r[t[a][i]]?r[t[a][i]]=s[i]:$(r[t[a][i]]===s[i],()=>`Expected dimension ${r[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function pW(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let l=hW(t,n[i]);for(let u of l)-1===s.indexOf(u)&&(r[i].push(u),s.push(u))}return{path:n,steps:r}}function dW(e){return e.every((t,n)=>t===n)}function hW(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function cW(e,t,n=0){let r=[];if("number"==typeof t)$(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{$(t.reduce((i,o)=>(-1===o&&(i+=1),i),0)<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(-1!==s){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function fW(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function mW(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function gW(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function yW(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function bW(e,t){return`size ${e} must be non-negative, not ${t}`}function xW(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function vW(e,t){return`Input to reshape is a SparseTensor with ${ht(e)}\n  dense values, but the requested shape requires a multiple of ${ht(t)}. inputShape=${e} outputShape= ${t}`}function wW(e,t){return`Input to reshape is a tensor with ${ht(e)} dense values, but the requested shape has ${ht(t)}. inputShape=${e} outputShape=${t}`}function kW(){return"segment ids must be >= 0"}function IW(){return"segment ids are not increasing"}function SW(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function NW(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var dN={};function _W(e,t){let r,n=!1;for(e<=Ey?(r=e,n=!0):r=ih(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=ih(e,r+1);return r}function TW(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)r.push(s!==t?e[s]:n);return r}function CW(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],l=1,u=1,p=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),p*=e.shape[h];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function EW(e){try{return e.map(t=>_h(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function $W(e){return e.map(t=>Ep(t))}_e(dN,{collectGatherOpShapeInfo:()=>CW,computeOutShape:()=>TW,segOpComputeOptimalWindowSize:()=>_W});var ta={};_e(ta,{nonMaxSuppressionV3Impl:()=>SS,nonMaxSuppressionV4Impl:()=>NS,nonMaxSuppressionV5Impl:()=>_S,whereImpl:()=>cS}),function KP(){for(let e of qP)LS(e)}();var hN={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,fo(le(n,"float32"),-1))}}},AW={kernelName:$s,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=it(le(n,"float32")),a=rn(ce(we(1),r));return ft(fe(e,a))}}}},FW={kernelName:As,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=rn(ce(it(le(n,"float32")),1));return fe(e,r)}}}},RW={kernelName:za,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=e,i=Mt(n.shape,a);return i.length>0&&(s=ge(s,i)),B(s,n.shape)},b:()=>{let s=e,i=Mt(r.shape,a);return i.length>0&&(s=ge(s,i)),B(s,r.shape)}}}},DW={kernelName:Fs,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,a)=>{n[a]=()=>e.clone()}),n}},MW={kernelName:Jo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},OW={kernelName:Yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},LW={kernelName:Rs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,rn(ce(we(1),it(le(n,"float32")))))}}},zW={kernelName:Ds,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=rn(ee(we(1),it(le(n,"float32"))));return fe(e,r)}}}},PW={kernelName:Ls,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=ee(it(n),it(r)),i=P(e,fe(r,s)),o=Mt(n.shape,a);return o.length>0&&(i=ge(i,o)),B(i,n.shape)},b:()=>{let s=ee(it(n),it(r)),i=ft(P(e,fe(n,s))),o=Mt(r.shape,a);return o.length>0&&(i=ge(i,o)),B(i,r.shape)}}}},BW={kernelName:Ms,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ee(it(le(n,"float32")),1))}}},WW={kernelName:Os,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ce(we(1),it(le(n,"float32"))))}}},UW=z({avgPool3dGrad_:function VW(e,t,n,r,a,s){let i=C(e,"dy","avgPool3dGrad"),o=C(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;4===o.rank&&(p=!0,l=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=B(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),vn("avgPool3dGrad",a,s);let c=L.runKernel(sp,{dy:l,input:u},{filterSize:n,strides:r,pad:a,dimRoundingMode:s});return p?B(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),GW={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>UW(e,r,a,s,i,o)}}},jW=z({avgPoolGrad_:function HW(e,t,n,r,a){let s=C(e,"dy","avgPoolGrad"),i=C(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=B(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=B(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let d=L.runKernel(ap,{dy:l,input:o},{filterSize:n,strides:r,pad:a});return u?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),qW={kernelName:zs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>jW(e,r,a,s,i)}}},KW={kernelName:Ps,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Oe(e,a,!1,!1),b:()=>Oe(e,r,!0,!1)}:s&&!i?{a:()=>Oe(a,e,!1,!0),b:()=>Oe(r,e,!1,!1)}:{a:()=>Oe(a,e,!0,!0),b:()=>Oe(e,r,!0,!0)}:{a:()=>Oe(e,a,!1,!0),b:()=>Oe(r,e,!0,!1)}}},ZW={kernelName:el,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Zp(e,r,a)}}},XW={kernelName:Pk,gradFunc:(e,t,n)=>{let a=n.inputShape,s=n.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(1!==a[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>ge(e,o,!0)}}},JW={kernelName:Bs,gradFunc:e=>({x:()=>e.clone()})},YW={kernelName:Ws,gradFunc:e=>({x:()=>He(e)})},QW={kernelName:Pa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Xt(Ir(xa(r,a),Ka(r,s)),e,He(e))}}},e4={kernelName:op,inputsToSave:["x"],gradFunc:hN.gradFunc},t4={kernelName:rl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(o=>o.shape),{axis:a}=n,s=vr(a,t[0].shape)[0],i=r.map(o=>o[s]);return Fn(e,i,s).map(o=>()=>o)}},n4={kernelName:Vs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return $(qa(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>gg(r.shape,e,a,i,o,l),filter:()=>iy(r,e,a.shape,i,o,l)}}},r4={kernelName:Us,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>wn(e,a,s,i,o,1,l),filter:()=>iy(e,r,a.shape,s,i,o,l)}}},s4=z({conv3DBackpropFilter_:function a4(e,t,n,r,a){let s=e;4===e.rank&&(s=B(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`),L.runKernel(al,{x:s,dy:i},{strides:r,pad:a,filterShape:n})}}),i4={kernelName:Gs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;$(qa(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>_I(i.shape,e,o,a,s),filter:()=>s4(i,e,o.shape,a,s)}}},o4={kernelName:Hs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(ft(Yh(le(n,"float32"))),e)}}},l4={kernelName:js,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(Qh(le(n,"float32")),e)}}},u4={kernelName:qs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let o=RI([a],r.rank),l=zh(e,a,s,!i);return null!=o&&(l=Le(l,o)),l}}}},p4={kernelName:Ks,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=r??[1,1];$(qa(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return $(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),$(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),$(Xr(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),vn("depthwiseConv2d",s,i),{x:()=>wS(l.shape,e,u,a,s,o,i),filter:()=>vS(l,e,u.shape,a,s,o,i)}}},d4={kernelName:Zs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>L.runKernel(ul,s,n),filter:()=>L.runKernel(pl,i,n)}}},h4={kernelName:Js,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>L.runKernel(dl,r)}}},c4={kernelName:Ys,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=P(kn(ft(it(n))),2/Math.sqrt(Math.PI));return{x:()=>P(e,r)}}},f4={kernelName:Qs,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,n)}}},m4={kernelName:cl,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>B(e,n.shape)}}},g4={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,kn(n))}}},y4={kernelName:ti,gradFunc:e=>({x:()=>He(e)})},b4={kernelName:ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=fe(e,le(r,"float32")),i=Mt(n.shape,a);return i.length>0?B(ge(s,i),n.shape):s},b:()=>{let s=P(e,le(n,"float32")),i=Mt(r.shape,a);i.length>0&&(s=B(ge(s,i),r.shape));let o=it(r);return ft(fe(s,le(o,"float32")))}}}},x4={kernelName:ri,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=o??we(1),u=Mt(s.shape,a.shape),p=[];if(1===s.rank){for(let m=0;m<a.shape.length-1;++m)p.push(a.shape[m]);p.push(1)}let h=ce(a,s),d=P(e,l),c=Xh(ee(i,we(r))),f=P(P(P(c,c),c),we(-.5));return{x:()=>B(P(P(e,1===s.rank?jn(B(c,[1,1,1,s.shape[0]]),p):c),l),a.shape),mean:()=>{let m=P(P(c,we(-1)),d);return 1===s.rank&&(m=ge(m,u)),B(m,s.shape)},variance:()=>{let m=P(P(f,h),d);return 1===s.rank&&(m=ge(m,u)),B(m,s.shape)},scale:()=>{let m=P(h,c),g=P(e,m);return 1===s.rank&&(g=ge(g,u)),B(g,s.shape)},offset:()=>{let m=e;return 1===s.rank&&(m=ge(m,u)),B(m,s.shape)}}}},v4={kernelName:ml,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=vr(s,r.shape)[0];return{x:()=>{let o=r.shape,l=a.size,u=o.slice(0,i),p=u.length,h=o.slice(s,o.length).slice(1),d=h.length,c=cN(0,p),f=cN(p+1,p+1+d),m=fN([u,[l],h]),g=B(e,m),y=B(a,[l]),b=fN([[p],c,f]),x=Le(g,b),v=oc(x,y,r.shape[i]),I=Ng(b);return v=Le(v,I),v},indices:()=>a}}};function cN(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function fN(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var w4={kernelName:ai,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>He(n),b:()=>He(r)}}},k4={kernelName:si,gradFunc:e=>({x:()=>le(e,"float32")})},I4={kernelName:ii,gradFunc:e=>({x:()=>He(e)})},S4={kernelName:oi,gradFunc:e=>({x:()=>He(e)})},N4={kernelName:li,gradFunc:e=>({x:()=>He(e)})},_4={kernelName:ui,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=In(r,0);return{x:()=>Xt(s,e,P(e,a))}}},T4={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ee(n,1))}}},C4={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,le(n,"float32"))}}},E4={kernelName:Wk,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let s=kn(r);return ce(e,P(ge(e,a,!0),s))}}}},A4=z({localResponseNormalizationBackprop_:function $4(e,t,n,r=5,a=1,s=1,i=.5){return L.runKernel(Sl,{x:e,y:t,dy:n},{depthRadius:r,bias:a,alpha:s,beta:i})}}),F4={kernelName:hi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>A4(r,a,e,s,i,o,l)}}};function mN(e,t,n,r){return t.rank<n.rank&&(t=B(t,uo(t.shape,r))),e.rank<n.rank&&(e=B(e,uo(e.shape,r))),{x:()=>P(e,le(Hn(n,t),e.dtype))}}var gN={kernelName:ci,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],l=mN(e,t[1],s,vr(a,s.shape));return{x:()=>l.x()}}},R4={kernelName:fi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>P(e,le(xa(n,r),"float32")),b:()=>P(e,le(uu(n,r),"float32"))}}},M4=z({maxPool3dGrad_:function D4(e,t,n,r,a,s,i){let o=C(e,"dy","maxPool3dGrad"),l=C(t,"input","maxPool3dGrad"),u=C(n,"output","maxPool3dGrad"),p=o,h=l,d=u,c=!1;4===l.rank&&(c=!0,p=B(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=B(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=B(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),$(5===p.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),$(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),$(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),vn("maxPool3dGrad",s,i);let g=L.runKernel(hp,{dy:p,input:h,output:d},{filterSize:r,strides:a,pad:s,dimRoundingMode:i});return c?B(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),O4={kernelName:Nl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>M4(e,r,a,s,i,o,l)}}},z4=z({maxPoolGrad_:function L4(e,t,n,r,a,s,i){let o=C(e,"dy","maxPoolGrad"),l=C(t,"input","maxPoolGrad"),u=C(n,"output","maxPoolGrad");return $(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),$(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),vn("maxPoolGrad",s,i),L.runKernel(dp,{dy:o,input:l,output:u},{filterSize:r,strides:a,pad:s,dimRoundingMode:i})}}),P4={kernelName:mi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>z4(e,r,a,s,i,o)}}},B4={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=vr(a,r.shape),o=ht(FI(r.shape,s)[1]);return{x:()=>{let l=r.shape.slice();s.forEach(p=>{l[p]=1});let u=B(e,l);return fe(P(u,Kn(r.shape,"float32")),o)}}}},W4={kernelName:yi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,l=mN(e,i,s,vr(a,s.shape));return{x:()=>l.x()}}},V4={kernelName:bi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>P(e,le(Ka(n,r),"float32")),b:()=>P(e,le(In(n,r),"float32"))}}},U4={kernelName:xi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ve(e,s,r.shape)}}},G4={kernelName:vi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=Mt(n.shape,a);return s.length>0?B(ge(e,s),n.shape):e},b:()=>{let s=P(e,ft(ou(fe(n,r)))),i=Mt(r.shape,a);return i.length>0?B(ge(s,i),r.shape):s}}}},H4={kernelName:wi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=P(e,le(r,"float32")),i=Mt(n.shape,a);return i.length>0?B(ge(s,i),n.shape):s},b:()=>{let s=P(e,le(n,"float32")),i=Mt(r.shape,a);return i.length>0?B(ge(s,i),r.shape):s}}}},j4={kernelName:Tl,gradFunc:e=>({x:()=>ft(e)})},K4={kernelName:Fl,gradFunc:e=>({x:()=>He(e)})},Z4={kernelName:Rl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return $t(e,r).map(a=>()=>a)}},yN={kernelName:Ii,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ve(e,s,r.shape)}}},X4={kernelName:Si,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=st(s.shape,i.shape);return{a:()=>{let l=le(i,"float32"),u=P(e,P(l,ba(s,ce(l,we(1))))),p=Mt(s.shape,o);return p.length>0&&(u=ge(u,p)),B(u,s.shape)},b:()=>{let l=In(s,0),u=Xt(l,qn(s),He(s)),p=P(e,P(a,u)),h=Mt(i.shape,o);return h.length>0&&(p=ge(p,h)),B(p,i.shape)}}}},J4={kernelName:Ni,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=In(n,0);return{x:()=>Xt(a,e,P(e,r)),alpha:()=>{let s=Xt(a,He(e),P(e,n)),i=Mt(r.shape,e.shape);return i.length>0&&(s=ge(s,i)),B(s,r.shape)}}}};var eV={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map((i,o)=>o):"number"==typeof a?[a]:a,{x:()=>function Q4(e,t,n){let r=e.shape.length,a=r-n.length,s=N.getAxesPermutation(n,r),i=e;null!=s&&(i=Le(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((h,d)=>h*d,1);o.push(l);let p=function Y4(e,t,n){let r=e.shape.slice();r[n]=1;let a=B(t,r),s=Up(e,n,!0,!1),i=Up(e,n,!0,!0),o=P(s,i);return P(a,o)}(i.reshape(o),t,a);if(p=p.reshape(i.shape),null!=s){let h=N.getUndoAxesPermutation(s);p=Le(p,h)}return p}(r,e,s)}}},tV={kernelName:Xs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=fe(e,le(r,"float32")),i=Mt(n.shape,a);return i.length>0?B(ge(s,i),n.shape):s},b:()=>{let s=P(e,le(n,"float32")),i=Mt(r.shape,a);i.length>0&&(s=B(ge(s,i),r.shape));let o=it(r);return ft(fe(s,le(o,"float32")))}}}},nV={kernelName:Ti,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ft(it(n)))}}},rV={kernelName:Ai,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=P(Ka(n,6),fo(n));return{x:()=>P(e,le(r,"float32"))}}},aV={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,le(fo(n),"float32"))}}},sV={kernelName:Dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,n.shape)}}},iV={kernelName:$i,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>L.runKernel(Ol,a,n)}}},oV={kernelName:Ei,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>L.runKernel(Ml,a,n)}}},lV={kernelName:Fi,gradFunc:(e,t,n)=>{let{dims:r}=n,a=vr(r,e.shape);return{x:()=>or(e,a)}}},uV={kernelName:Ri,gradFunc:e=>({x:()=>He(e)})},pV={kernelName:Di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ft(fe(e,P(ba(n,1.5),2)))}}},dV={kernelName:Bl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>le(He(n),"float32"),t:()=>P(e,le(n,e.dtype)),e:()=>P(e,le(qp(n),e.dtype))}}},hV={kernelName:Mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=In(n,we(0)),a=we(oN),s=we(lN),i=P(e,s),o=P(P(e,a),kn(le(n,"float32")));return Xt(r,i,o)}}}},cV={kernelName:Pi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,P(n,ce(we(1),n)))}}},fV={kernelName:zi,gradFunc:e=>({x:()=>He(e)})},mV={kernelName:Oi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(Vp(le(n,"float32")),e)}}},gV={kernelName:Li,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(Lh(le(n,"float32")),e)}}},yV={kernelName:Wl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=aN(r,a,s),u=[];for(let p=0;p<e.rank;p++)u.push([o[p],i[p]-o[p]-l[p]]);return{x:()=>Or(e,u)}}},bV={kernelName:Ui,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,i=P(e,r);return{logits:()=>ce(i,P(ge(i,[a],!0),r))}}},xV={kernelName:Bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,kr(n))}}},bN={kernelName:Vl,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Wp(e,r,a)}}},xN={kernelName:Ul,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>at(e,r)}}},vV={kernelName:Wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,P(rn(le(n,"float32")),2))}}},wV={kernelName:bp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,P(le(n,"float32"),2))}}},kV={kernelName:Gi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=we(2);return{a:()=>P(e,P(a,ce(n,r))),b:()=>P(e,P(a,ce(r,n)))}}},IV={kernelName:Wa,gradFunc:e=>({x:()=>He(e)})},SV={kernelName:Hi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=e,i=Mt(n.shape,a);return i.length>0&&(s=ge(s,i)),B(s,n.shape)},b:()=>{let s=e,i=Mt(r.shape,a);return i.length>0&&(s=ge(s,i)),B(ft(s),r.shape)}}}},NV={kernelName:Vi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;vr(s,r.shape).forEach(l=>{a[l]=1});let i=B(e,a),o=P(i,Kn(r.shape,"float32"));return{x:()=>o}}},_V={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,it(Vp(n)))}}},TV={kernelName:qi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(ce(we(1),it(n)),e)}}},CV={kernelName:Ba,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let s=He(r);if(1===r.rank)for(let i=0;i<a[0];++i)s=ee(s,Ve(e,[i*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=ee(s,Ve(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)s=ee(s,Ve(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)for(let u=0;u<a[3];++u)s=ee(s,Ve(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return s}}}},EV={kernelName:fa,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Ng(a);return{x:()=>Le(e,s)}}},$V={kernelName:Zl,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Wt(e,a)}}},AV={kernelName:Sp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function FV(e,t){let n=Yr(t,He(t)),r=lu(e,n),a=xa(t,we(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=an(a,o+1);a=Ir(a,Kn(r.shape,"bool"));let i=He(r);return Xt(a,r,i)}(e,n)}}},RV={kernelName:Xl,gradFunc:e=>({x:()=>He(e)})},DV=[hN,AW,FW,RW,DW,MW,OW,LW,zW,PW,BW,WW,GW,qW,KW,ZW,XW,JW,YW,QW,e4,t4,r4,n4,i4,o4,l4,u4,p4,d4,tV,h4,c4,f4,m4,g4,b4,y4,x4,v4,w4,k4,I4,S4,N4,_4,T4,C4,E4,F4,gN,gN,R4,O4,P4,B4,W4,V4,U4,G4,H4,j4,{kernelName:ki,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>_t(n.shape,"float32")}}},K4,Z4,yN,yN,X4,J4,eV,nV,rV,aV,sV,iV,oV,lV,uV,pV,dV,hV,cV,fV,mV,gV,yV,bV,xV,bN,bN,xN,xN,vV,kV,wV,IV,SV,NV,_V,TV,CV,EV,$V,AV,RV];for(let e of DV)Vk(e);Q().prototype.abs=function(){return this.throwIfDisposed(),Dt(this)},Q().prototype.acos=function(){return this.throwIfDisposed(),Xm(this)},Q().prototype.acosh=function(){return this.throwIfDisposed(),Jm(this)},Q().prototype.add=function(e){return this.throwIfDisposed(),ee(this,e)},Q().prototype.all=function(e,t){return this.throwIfDisposed(),Dh(this,e,t)},Q().prototype.any=function(e,t){return this.throwIfDisposed(),Lp(this,e,t)},Q().prototype.argMax=function(e){return this.throwIfDisposed(),ro(this,e)},Q().prototype.argMin=function(e){return this.throwIfDisposed(),Ym(this,e)},Q().prototype.asScalar=function(){return this.throwIfDisposed(),$(1===this.size,()=>"The array must have only 1 element."),B(this,[])},Q().prototype.asType=function(e){return this.throwIfDisposed(),le(this,e)},Q().prototype.as1D=function(){return this.throwIfDisposed(),B(this,[this.size])},Q().prototype.as2D=function(e,t){return this.throwIfDisposed(),B(this,[e,t])},Q().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),B(this,[e,t,n])},Q().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),B(this,[e,t,n,r])},Q().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),B(this,[e,t,n,r,a])},Q().prototype.asin=function(){return this.throwIfDisposed(),Qm(this)},Q().prototype.asinh=function(){return this.throwIfDisposed(),eg(this)},Q().prototype.atan=function(){return this.throwIfDisposed(),tg(this)},Q().prototype.atan2=function(e){return this.throwIfDisposed(),ng(this,e)},Q().prototype.atanh=function(){return this.throwIfDisposed(),rg(this)},Q().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ya(this,e,t,n,r)},Q().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Wp(this,e,t)},Q().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),io(this,e,t,n,r,a)},Q().prototype.broadcastTo=function(e){return this.throwIfDisposed(),oo(this,e)},Q().prototype.cast=function(e){return this.throwIfDisposed(),le(this,e)},Q().prototype.ceil=function(){return this.throwIfDisposed(),dg(this)},Q().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),hn(this,e,t)},Q().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof $e&&(e=[e]),at([this,...e],t)},Q().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Mh(this,e,t,n,r,a,s)},Q().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Oh(this,e,t,n,r,a)},Q().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),wn(this,e,t,n,r,a,s)},Q().prototype.cos=function(){return this.throwIfDisposed(),Vp(this)},Q().prototype.cosh=function(){return this.throwIfDisposed(),Lh(this)},Q().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Up(this,e,t,n)},Q().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),zh(this,e,t,n)},Q().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),xg(this,e,t)},Q().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),lo(this,e,t,n,r,a,s)},Q().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),vg(this,e,t,n,r,a)},Q().prototype.divNoNan=function(e){return this.throwIfDisposed(),wg(this,e)},Q().prototype.div=function(e){return this.throwIfDisposed(),fe(this,e)},Q().prototype.dot=function(e){return this.throwIfDisposed(),kg(this,e)},Q().prototype.elu=function(){return this.throwIfDisposed(),au(this)},Q().prototype.equal=function(e){return this.throwIfDisposed(),Hn(this,e)},Q().prototype.erf=function(){return this.throwIfDisposed(),Ig(this)},Q().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),_g(this,e,t)},Q().prototype.exp=function(){return this.throwIfDisposed(),kn(this)},Q().prototype.expandDims=function(e){return this.throwIfDisposed(),an(this,e)},Q().prototype.expm1=function(){return this.throwIfDisposed(),Tg(this)},Q().prototype.fft=function(){return this.throwIfDisposed(),Yp(this)},Q().prototype.flatten=function(){return this.throwIfDisposed(),B(this,[this.size])},Q().prototype.floor=function(){return this.throwIfDisposed(),ou(this)},Q().prototype.floorDiv=function(e){return this.throwIfDisposed(),Rh(this,e)},Q().prototype.gather=function(e,t,n){return this.throwIfDisposed(),lu(this,e,t,n)},Q().prototype.greaterEqual=function(e){return this.throwIfDisposed(),xa(this,e)},Q().prototype.greater=function(e){return this.throwIfDisposed(),In(this,e)},Q().prototype.ifft=function(){return this.throwIfDisposed(),mu(this)},Q().prototype.irfft=function(){return this.throwIfDisposed(),tc(this)},Q().prototype.isFinite=function(){return this.throwIfDisposed(),Cg(this)},Q().prototype.isInf=function(){return this.throwIfDisposed(),Eg(this)},Q().prototype.isNaN=function(){return this.throwIfDisposed(),$g(this)},Q().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Hp(this,e)},Q().prototype.lessEqual=function(e){return this.throwIfDisposed(),Ka(this,e)},Q().prototype.less=function(e){return this.throwIfDisposed(),uu(this,e)},Q().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ag(this,e,t,n,r)},Q().prototype.logSigmoid=function(){return this.throwIfDisposed(),Fg(this)},Q().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Vh(this,e)},Q().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Uh(this,e,t)},Q().prototype.log=function(){return this.throwIfDisposed(),qn(this)},Q().prototype.log1p=function(){return this.throwIfDisposed(),jp(this)},Q().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ir(this,e)},Q().prototype.logicalNot=function(){return this.throwIfDisposed(),qp(this)},Q().prototype.logicalOr=function(e){return this.throwIfDisposed(),Gh(this,e)},Q().prototype.logicalXor=function(e){return this.throwIfDisposed(),Rg(this,e)},Q().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Oe(this,e,t,n)},Q().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Jt(this,e,t,n,r)},Q().prototype.max=function(e,t){return this.throwIfDisposed(),ir(this,e,t)},Q().prototype.maximum=function(e){return this.throwIfDisposed(),Yr(this,e)},Q().prototype.mean=function(e,t){return this.throwIfDisposed(),Nt(this,e,t)},Q().prototype.min=function(e,t){return this.throwIfDisposed(),su(this,e,t)},Q().prototype.minimum=function(e){return this.throwIfDisposed(),Za(this,e)},Q().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Mg(this,e,t)},Q().prototype.mod=function(e){return this.throwIfDisposed(),Og(this,e)},Q().prototype.mul=function(e){return this.throwIfDisposed(),P(this,e)},Q().prototype.neg=function(){return this.throwIfDisposed(),ft(this)},Q().prototype.norm=function(e,t,n){return this.throwIfDisposed(),iu(this,e,t,n)},Q().prototype.notEqual=function(e){return this.throwIfDisposed(),ho(this,e)},Q().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),pu(this,e,t,n)},Q().prototype.onesLike=function(){return this.throwIfDisposed(),Zn(this)},Q().prototype.pad=function(e,t){return this.throwIfDisposed(),Or(this,e,t)},Q().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Lg(this,e,t,n,r,a,s)},Q().prototype.pow=function(e){return this.throwIfDisposed(),ba(this,e)},Q().prototype.prelu=function(e){return this.throwIfDisposed(),Xp(this,e)},Q().prototype.prod=function(e,t){return this.throwIfDisposed(),zg(this,e,t)},Q().prototype.reciprocal=function(){return this.throwIfDisposed(),Hg(this)},Q().prototype.relu=function(){return this.throwIfDisposed(),tt(this)},Q().prototype.relu6=function(){return this.throwIfDisposed(),Kh(this)},Q().prototype.reshapeAs=function(e){return this.throwIfDisposed(),B(this,e.shape)},Q().prototype.reshape=function(e){return this.throwIfDisposed(),B(this,e)},Q().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),CS(this,e,t,n)},Q().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),ES(this,e,t,n)},Q().prototype.reverse=function(e){return this.throwIfDisposed(),or(this,e)},Q().prototype.rfft=function(){return this.throwIfDisposed(),Qp(this)},Q().prototype.round=function(){return this.throwIfDisposed(),Zh(this)},Q().prototype.rsqrt=function(){return this.throwIfDisposed(),Xh(this)},Q().prototype.selu=function(){return this.throwIfDisposed(),Jh(this)},Q().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),hu(this,e,t,n,r,a,s)},Q().prototype.sigmoid=function(){return this.throwIfDisposed(),kr(this)},Q().prototype.sign=function(){return this.throwIfDisposed(),qg(this)},Q().prototype.sin=function(){return this.throwIfDisposed(),Yh(this)},Q().prototype.sinh=function(){return this.throwIfDisposed(),Qh(this)},Q().prototype.slice=function(e,t){return this.throwIfDisposed(),Ve(this,e,t)},Q().prototype.softmax=function(e){return this.throwIfDisposed(),Ja(this,e)},Q().prototype.softplus=function(){return this.throwIfDisposed(),po(this)},Q().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Zp(this,e,t)},Q().prototype.split=function(e,t){return this.throwIfDisposed(),Fn(this,e,t)},Q().prototype.sqrt=function(){return this.throwIfDisposed(),rn(this)},Q().prototype.square=function(){return this.throwIfDisposed(),it(this)},Q().prototype.squaredDifference=function(e){return this.throwIfDisposed(),nc(this,e)},Q().prototype.squeeze=function(e){return this.throwIfDisposed(),Ya(this,e)},Q().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof $e?[this,e]:[this,...e];return Wt(n,t)},Q().prototype.step=function(e){return this.throwIfDisposed(),fo(this,e)},Q().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Kg(this,e,t,n,r,a,s,i,o)},Q().prototype.sub=function(e){return this.throwIfDisposed(),ce(this,e)},Q().prototype.sum=function(e,t){return this.throwIfDisposed(),ge(this,e,t)},Q().prototype.tan=function(){return this.throwIfDisposed(),Zg(this)},Q().prototype.tanh=function(){return this.throwIfDisposed(),so(this)},Q().prototype.tile=function(e){return this.throwIfDisposed(),jn(this,e)},Q().prototype.toBool=function(){return this.throwIfDisposed(),le(this,"bool")},Q().prototype.toFloat=function(){return this.throwIfDisposed(),le(this,"float32")},Q().prototype.toInt=function(){return this.throwIfDisposed(),le(this,"int32")},Q().prototype.topk=function(e,t){return this.throwIfDisposed(),Jg(this,e,t)},Q().prototype.transpose=function(e){return this.throwIfDisposed(),Le(this,e)},Q().prototype.unique=function(e){return this.throwIfDisposed(),Yg(this,e)},Q().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),oc(this,e,t)},Q().prototype.unstack=function(e){return this.throwIfDisposed(),$t(this,e)},Q().prototype.where=function(e,t){return this.throwIfDisposed(),Xt(e,this,t)},Q().prototype.zerosLike=function(){return this.throwIfDisposed(),He(this)};var ka=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ka.prototype)}},Lr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lr.prototype)}},V=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,V.prototype)}},ze=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ze.prototype)}},vN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vN.prototype)}},wN=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function bo(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function na(e,t){if(!e)throw new vN(t)}function kN(e,t){let n=0;for(let r of e)r===t&&n++;return n}function Rn(e){return 1===e.length?e[0]:e}function bt(e){return Array.isArray(e)?e:[e]}function Ia(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function xo(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Sr={};function Ay(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Fy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(t=>Fy(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];null!=r&&"object"==typeof r&&(Array.isArray(r)||"ndarray"!==r.type||"number"!=typeof r.value?Fy(r):e[n]=r.value)}}}function td(e,t={},n={},r="object",a=!1){if("string"==typeof e){let i;if(e in n)i=n[e];else if(e in Sr)i=Sr[e];else if(i=t[e],null==i)throw new V(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{let s=e;if(null==s.className||null==s.config)throw new V(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let o,l,i=s.className;if(i in n?[o,l]=n[i]:i in Sr?[o,l]=Sr.className:i in t&&([o,l]=t[i]),null==o)throw new V(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){let u={};for(let c of Object.keys(Sr))u[c]=Sr[c];for(let c of Object.keys(n))u[c]=n[c];s.config.customObjects=u;let h=Object.assign({},Sr);for(let c of Object.keys(n))Sr[c]=n[c];Fy(s.config);let d=l(o,s.config,n,a);return Sr=Object.assign({},h),d}{let u=Object.assign({},Sr);for(let h of Object.keys(n))Sr[h]=n[h];let p=new o(s.config);return Sr=Object.assign({},u),p}}}function fc(e,t){return-1*function MV(e,t){return e<t?-1:e>t?1:0}(e,t)}function es(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function OV(e){if(null==e)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function vo(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new V(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ry(e,t,n=0,r=1/0){return na(n>=0),na(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(a=>typeof a===t)}function Yt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>Yt(n,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${IN(e)}.`)}function IN(e){return null===e?"null":Array.isArray(e)?"["+e.map(t=>IN(t)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function SN(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var zV=0;function NN(){return zV++}var mc={};function gc(e=""){return e in mc||(mc[e]=0),mc[e]+=1,e+mc[e].toString()}var PV=["channelsFirst","channelsLast"],BV=["nearest","bilinear"],WV=["valid","same","causal"],VV=["max","avg"],UV=["sum","mul","concat","ave"],xu=new Map;function At(e){vo(PV,"DataFormat",e)}function ur(e){vo(WV,"PaddingMode",e)}function _N(e){vo(VV,"PoolMode",e)}var nd=[];function wo(e,t){nd.push(e);try{let n=t();return nd.pop(),n}catch(n){throw nd.pop(),n}}function CN(e){if(!$N(e))throw new Error("Not a valid tensor name: '"+e+"'");return function HV(){return 0===nd.length?"":nd.join("/")+"/"}()+e}function EN(e){if(!$N(e))throw new Error("Not a valid tensor name: '"+e+"'");xu.has(e)||xu.set(e,0);let t=xu.get(e);if(xu.set(e,xu.get(e)+1),t>0){let n=`${e}_${t}`;return xu.set(n,1),n}return e}var Dy,jV=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function $N(e){return!!e.match(jV)}function qV(e){return e===parseInt(e.toString(),10)}function ts(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function vu(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function ns(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function zr(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ut(){return null==Dy&&(Dy=bI().epsilon()),Dy}function Sa(e,t){return le(e,t)}function rd(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),B(e,n)}function ko(e,t,n){return W(()=>{switch(e.rank){case 1:return Jp(e,t,n);case 2:return ec(e,[t,0],[n,e.shape[1]]);case 3:return cu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return fu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ve(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ve(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function My(e,t,n){return W(()=>{switch(e.rank){case 1:return Jp(e,t,n);case 2:return ec(e,[0,t],[e.shape[0],n]);case 3:return cu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return fu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function yc(e,t,n,r){return W(()=>{switch(e.rank){case 1:return Jp(e,t,n);case 2:switch(r){case 1:return ko(e,t,n);case 2:return My(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ko(e,t,n);case 2:return cu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return My(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ko(e,t,n);case 2:return fu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return fu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return My(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Oy(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),at(e,t)}function AN(e,t){switch(e.rank){case 1:return hg([e,t]);case 2:return cg([e,t],0);case 3:return fg([e,t],0);case 4:return mg([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ly(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return jn(e,t)}function bc(e,t=0,n=1,r,a){return qh(e,t,n,r,a)}function ra(e,t,n,r){if(e.rank<2||t.rank<2)throw new ze(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ze(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return gu.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?zy(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=B(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],p=Array.from({length:t.rank},(f,m)=>0===m?t.rank-2:m<=t.rank-2?m-1:m);t=B(Le(t,p),[l,-1]);let h=[...a,...u];return B(gu.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?zy(e.rank,r,"channelsLast"):null,activation:n}),h)}}function FN(e,t,n){return W(()=>(t=Array.isArray(t)?nt(t,"int32"):le(t,"int32"),lu(e,t,n)))}function ad(e){return P(e,e)}function zy(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return B(t,1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return B(t,1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return B(t,1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return B(t,1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return B(t,1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return B(t,1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function Br(e,t,n){return W(()=>(null==n&&(n="channelsLast"),At(n),ee(e,zy(e.rank,t,n))))}function RN(e,t,n,r){return W(()=>ry(e,t,n,r))}function sd(e,t,n=!1){return n?e():t()}var eU=["fanIn","fanOut","fanAvg"],tU=["normal","uniform","truncatedNormal"],Nr=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Py=class extends Nr{apply(e,t){return _t(e,t)}};Py.className="Zeros",re.registerClass(Py);var xc=class extends Nr{apply(e,t){return Kn(e,t)}};xc.className="Ones",re.registerClass(xc);var By=class extends Nr{constructor(e){if(super(),"object"!=typeof e)throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return W(()=>P(we(this.value),Kn(e,t)))}getConfig(){return{value:this.value}}};By.className="Constant",re.registerClass(By);var Wy=class extends Nr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Xa(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Wy.className="RandomUniform",re.registerClass(Wy);var Vy=class extends Nr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ze(`randomNormal does not support dType ${t}.`);return bc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Vy.className="RandomNormal",re.registerClass(Vy);var Uy=class extends Nr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ze(`truncatedNormal does not support dType ${t}.`);return ic(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Uy.className="TruncatedNormal",re.registerClass(Uy);var Gy=class extends Nr{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return W(()=>{if(2!==e.length||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return P(this.gain,Bh(e[0]))})}getConfig(){return{gain:this.gain}}};Gy.className="Identity",re.registerClass(Gy);var Dn=class extends Nr{constructor(e){if(super(),e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function nU(e){vo(eU,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function rU(e){vo(tU,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function aU(e,t="channelsLast"){let n,r;if(At(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let a=ts(e,2);n=e[1]*a,r=e[0]*a}else if("channelsLast"===t){let a=ts(e,0,e.length-2);n=e[e.length-2]*a,r=e[e.length-1]*a}}else{let a=ts(e);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if(s/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,a):Math.max(1,(r+a)/2),"normal"===this.distribution){let i=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ze(`${this.getClassName()} does not support dType ${t}.`);return ic(e,0,i,t,this.seed)}{let i=Math.sqrt(3*s);return Xa(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Dn.className="VarianceScaling",re.registerClass(Dn);var vc=class extends Dn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Dn.className}};vc.className="GlorotUniform",re.registerClass(vc);var wc=class extends Dn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Dn.className}};wc.className="GlorotNormal",re.registerClass(wc);var kc=class extends Dn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Dn.className}};kc.className="HeNormal",re.registerClass(kc);var Ic=class extends Dn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Dn.className}};Ic.className="HeUniform",re.registerClass(Ic);var Sc=class extends Dn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Dn.className}};Sc.className="LeCunNormal",re.registerClass(Sc);var Nc=class extends Dn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Dn.className}};Nc.className="LeCunUniform",re.registerClass(Nc);var Hy=class extends Nr{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return W(()=>{if(e.length<2)throw new ze("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);let n=w.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let i=bc([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),o=dy.qr(i,!1),l=o[0],u=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return l=P(l,u.sign()),n<r&&(l=l.transpose()),P(we(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};Hy.className="Orthogonal",re.registerClass(Hy);var DN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function MN(e,t={}){return td(e,re.SerializationMap.getMap().classNameMap,t,"initializer")}function Tt(e){return Ay(e)}function xt(e){if("string"==typeof e){let t=e in DN?DN[e]:e;if("GlorotNormal"===t)return new wc;if("GlorotUniform"===t)return new vc;if("HeNormal"===t)return new kc;if("HeUniform"===t)return new Ic;if("LeCunNormal"===t)return new Sc;if("LeCunUniform"===t)return new Nc;{let n={};return n.className=t,n.config={},MN(n)}}return e instanceof Nr?e:MN(e)}function jy(e){return Array.isArray(e)&&Array.isArray(e[0])}function _c(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ce(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ze(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Tc(e){let t=0;for(let n of e)t+=0===n.shape.length?1:n.shape.reduce((r,a)=>r*a);return t}var ON="Variable",LN=class{constructor(e,t="float32",n=ON,r=!0,a=null){this.dtype=t??"float32",this.shape=e.shape,this.id=NN(),this.originalName=CN(n=n??ON),this.name=EN(this.originalName),this.trainable_=r,this.constraint=a,this.val=Qg(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function sU(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function qy(e){return e.map(t=>t.read())}function Ky(e){e.forEach(t=>{t[0].write(t[1])})}var Ot=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Wr=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=NN(),null!=s&&(this.originalName=CN(s),this.name=EN(this.originalName)),this.rank=t.length}},iU=0,Cc=class{constructor(e,t){this.callArgs=t,this.id=iU++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},oU=0,Be=class extends re.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=oU++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Ia(n)+"_"+gc(n)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let n;if(null!=e.batchInputShape)n=e.batchInputShape;else if(null!=e.inputShape){let a=null;null!=e.batchSize&&(a=e.batchSize),n=[a].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;null==r&&(r=e.inputDType),null==r&&(r="float32"),this.dtype=r}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Lr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Rn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Rn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ka(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ka(`Layer ${this.name} is not connected, no input to return.`);return Rn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ka(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ka(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Rn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=bt(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=bt(this.inputSpec);if(e.length!==t.length)throw new V(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new V(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let i=r.shape;for(let o in a.axes){let l=Number(o),u=a.axes[o];if(null!=u&&-1===[u,null].indexOf(l>=0?i[l]:i[i.length+l]))throw new V(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${i}.`)}}if(null!=a.shape)for(let i=0;i<a.shape.length;++i){let o=a.shape[i],l=r.shape[i];if(null!=o&&null!=l&&o!==l)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=bt(e),r=!0;for(let s of n)if(!(s instanceof Wr)){r=!1;break}let a=!0;for(let s of n)if(s instanceof Wr){a=!1;break}if(r===a)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return wo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of bt(e))s.push(i.shape);this.build(Rn(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t),i=bt(s),o=[];for(let l of i)-1!==n.indexOf(l)&&(l=l.clone()),o.push(l);if(s=Rn(o),null!=this.activityRegularizer)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{let o,s=function lU(e){e=bt(e);let t=[];for(let n of e)t.push(n.shape);return Rn(t)}(e),i=this.computeOutputShape(s),l="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),o=null!=i&&i.length>0&&Array.isArray(i[0])?i.map((u,p)=>new Wr(l,u,this,bt(e),t,this.name,p)):new Wr(l,i,this,bt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,null!=this.activityRegularizer)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ka(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new ka(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Lr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Tc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return qy(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=qy(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!w.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ky(n)})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():xt("zeros"));let l=r.apply(t,n),u=new LN(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=bt(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(n=>{if(null!=n)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=bt(e);t=bt(t),n=bt(n),r=bt(r),a=_c(a),s=_c(s);let l=[],u=[],p=[];for(let h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),p.push(h.tensorIndex);new Cc({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function zN(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let r=t.inboundNodes[n];if(0===r.inboundLayers.length)return r.inputTensors;{let a=[];for(let s=0;s<r.inboundLayers.length;s++){let u=zN(r.inputTensors[s],r.inboundLayers[s],r.nodeIndices[s]);for(let p of u)-1===a.indexOf(p)&&a.push(p)}return a}}}var wu=class extends Be{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:gc("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Wr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Cc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function PN(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new wu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}wu.className="InputLayer",re.registerClass(wu);var Io=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Io)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new V(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function pU(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return le(t,e.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Wr){if(null==this.id2Value[e.id])throw new V(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Wr){if(null==this.id2Value[e.id])throw new V(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ee(this.id2Mask)}},Ec=new wN,$c=new wN;function id(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(f=>f.name),l=[],u=t.names();for(let f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d,p=o.join(",")+"|"+t.names().sort().join(","),h=Ec.get(p);if(null==h){let f=function hU(e,t){w.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){let a=BN(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=BN(s,t);for(let l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(let l in o)null==r[l]&&(r[l]=new Set),o[l].forEach(u=>r[l].add(u))}}return{sorted:n,recipientCounts:cU(r)}}(i,t);h=f.sorted,d=f.recipientCounts,Ec.put(p,h),$c.put(p,d)}d={},a||Object.assign(d,$c.get(p));let c=new Io(t);for(let f=0;f<h.length;++f){if(null!=r){let A=Ah().numTensors;A>r.maxNumTensors&&(r.maxNumTensors=A),A<r.minNumTensors&&(r.minNumTensors=A)}let m=h[f],g=m.sourceLayer;if(g instanceof wu)continue;let y=[],b=[],x=[],v=!1;for(let A of m.inputs){let D=c.getValue(A),F=c.getMask(A);y.push(D),b.push(F),null!=F&&(v=!0),a||(d[A.name]--,0===d[A.name]&&!t.hasKey(A)&&-1===o.indexOf(A.name)&&!D.isDisposed&&!0!==A.sourceLayer.stateful&&x.push(D))}v&&((n=n||{}).mask=b[0]);let I=bt(g.apply(y,n)),_=null;g.supportsMasking&&(_=g.computeMask(y,b));let T=fU(m),E=Array.isArray(T)?T:[T];for(let A=0;A<E.length;++A){c.hasKey(E[A])||c.add(E[A],I[A],Array.isArray(_)?_[0]:_);let D=o.indexOf(E[A].name);-1!==D&&(l[D]=I[A])}a||Ee(x)}return c.disposeMasks(),s?l:l[0]}function cU(e){let t={};for(let n in e)t[n]=e[n].size;return t}function BN(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(0===o.inputs.length||l)s.pop(),r.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let u of o.inputs)null==a[u.name]&&(a[u.name]=new Set),a[u.name].add(o.name),!n.has(u.name)&&s.push(u)}}return{sorted:r,recipientMap:a}}function fU(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let a of e.sourceLayer.inboundNodes[r].outputTensors)if(a.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}H().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function dU(e){Ec?.setMaxEntries(e),$c?.setMaxEntries(e)});var WN={};function Zy(e,t){return W(()=>rn(ge(P(e,e),t,!0)))}_e(WN,{maxNorm:()=>gU,minMaxNorm:()=>xU,nonNeg:()=>bU,unitNorm:()=>yU});var od=class extends re.Serializable{getConfig(){return{}}},Xy=class extends od{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=Zy(e,this.axis),n=hn(t,0,this.maxValue);return P(e,fe(n,ee(Ut(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Xy.className="MaxNorm",re.registerClass(Xy);var Jy=class extends od{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return W(()=>fe(e,ee(Ut(),Zy(e,this.axis))))}getConfig(){return{axis:this.axis}}};Jy.className="UnitNorm",re.registerClass(Jy);var Yy=class extends od{apply(e){return tt(e)}};Yy.className="NonNeg",re.registerClass(Yy);var Qy=class extends od{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=Zy(e,this.axis),n=ee(P(this.rate,hn(t,this.minValue,this.maxValue)),P(1-this.rate,t));return P(e,fe(n,ee(Ut(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Qy.className="MinMaxNorm",re.registerClass(Qy);var VN={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Gt(e){return Ay(e)}function UN(e,t={}){return td(e,re.SerializationMap.getMap().classNameMap,t,"constraint")}function Ht(e){return null==e?null:"string"==typeof e?UN({className:e in VN?VN[e]:e,config:{}}):e instanceof od?e:UN(e)}function gU(e){return new Xy(e)}function yU(e){return new Jy(e)}function bU(){return new Yy}function xU(e){return new Qy(e)}var GN={};function vU(){return new Py}function wU(){return new xc}function kU(e){return new By(e)}function IU(e){return new Wy(e)}function SU(e){return new Vy(e)}function NU(e){return new Uy(e)}function _U(e){return new Gy(e)}function TU(e){return new Dn(e)}function CU(e){return new vc(e)}function EU(e){return new wc(e)}function $U(e){return new kc(e)}function AU(e){return new Ic(e)}function FU(e){return new Sc(e)}function RU(e){return new Nc(e)}function DU(e){return new Hy(e)}_e(GN,{constant:()=>kU,glorotNormal:()=>EU,glorotUniform:()=>CU,heNormal:()=>$U,heUniform:()=>AU,identity:()=>_U,leCunNormal:()=>FU,leCunUniform:()=>RU,ones:()=>wU,orthogonal:()=>DU,randomNormal:()=>SU,randomUniform:()=>IU,truncatedNormal:()=>NU,varianceScaling:()=>TU,zeros:()=>vU});var qN,HN={};function rs(e){return eb.apply(this,arguments)}function eb(){return eb=(0,R.Z)(function*(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let i=s;t.push(i.data()),n.push(a),r.push(i)}}if(t.length>0){let a=yield Promise.all(t);for(let s=0;s<a.length;++s)e[n[s]]=a[s][0];Ee(r)}}),eb.apply(this,arguments)}function jN(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}_e(HN,{Layer:()=>Be,RNN:()=>ia,RNNCell:()=>md,activation:()=>lH,add:()=>yH,alphaDropout:()=>e6,average:()=>bH,averagePooling1d:()=>Nx,averagePooling2d:()=>_x,averagePooling3d:()=>Tx,avgPool1d:()=>TH,avgPool2d:()=>EH,avgPool3d:()=>AH,avgPooling1d:()=>CH,avgPooling2d:()=>$H,avgPooling3d:()=>FH,batchNormalization:()=>SH,bidirectional:()=>jH,categoryEncoding:()=>s6,centerCrop:()=>r6,concatenate:()=>xH,conv1d:()=>QG,conv2d:()=>eH,conv2dTranspose:()=>tH,conv3d:()=>nH,conv3dTranspose:()=>rH,convLstm2d:()=>VH,convLstm2dCell:()=>UH,cropping2D:()=>sH,dense:()=>uH,depthwiseConv2d:()=>oH,dot:()=>IH,dropout:()=>pH,elu:()=>qG,embedding:()=>gH,flatten:()=>hH,gaussianDropout:()=>QH,gaussianNoise:()=>YH,globalAveragePooling1d:()=>RH,globalAveragePooling2d:()=>DH,globalMaxPool1d:()=>KH,globalMaxPool2d:()=>ZH,globalMaxPooling1d:()=>X2,globalMaxPooling2d:()=>J2,gru:()=>OH,gruCell:()=>LH,input:()=>g2,inputLayer:()=>jG,layerNormalization:()=>NH,leakyReLU:()=>ZG,lstm:()=>zH,lstmCell:()=>PH,masking:()=>t6,maxPool1d:()=>XH,maxPool2d:()=>JH,maxPooling1d:()=>Y2,maxPooling2d:()=>Q2,maxPooling3d:()=>MH,maximum:()=>vH,minimum:()=>wH,multiply:()=>kH,permute:()=>mH,prelu:()=>XG,randomWidth:()=>i6,reLU:()=>KG,repeatVector:()=>cH,rescaling:()=>n6,reshape:()=>fH,resizing:()=>a6,rnn:()=>GH,separableConv2d:()=>aH,simpleRNN:()=>BH,simpleRNNCell:()=>WH,softmax:()=>JG,spatialDropout1d:()=>dH,stackedRNNCells:()=>HH,thresholdedReLU:()=>YG,timeDistributed:()=>qH,upSampling2d:()=>iH,zeroPadding2d:()=>_H}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(qN||(qN={}));var ku=class{constructor(){this.validationData=null}setParams(e){this.params=e}onEpochBegin(e,t){return(0,R.Z)(function*(){})()}onEpochEnd(e,t){return(0,R.Z)(function*(){})()}onBatchBegin(e,t){return(0,R.Z)(function*(){})()}onBatchEnd(e,t){return(0,R.Z)(function*(){})()}onTrainBegin(e){return(0,R.Z)(function*(){})()}onTrainEnd(e){return(0,R.Z)(function*(){})()}setModel(e){}},KN=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}onEpochBegin(e,t){var n=this;return(0,R.Z)(function*(){null==t&&(t={});for(let r of n.callbacks)yield r.onEpochBegin(e,t)})()}onEpochEnd(e,t){var n=this;return(0,R.Z)(function*(){null==t&&(t={});for(let r of n.callbacks)yield r.onEpochEnd(e,t)})()}onBatchBegin(e,t){var n=this;return(0,R.Z)(function*(){null==t&&(t={});for(let r of n.callbacks)yield r.onBatchBegin(e,t)})()}onBatchEnd(e,t){var n=this;return(0,R.Z)(function*(){null==t&&(t={});for(let r of n.callbacks)yield r.onBatchEnd(e,t)})()}onTrainBegin(e){var t=this;return(0,R.Z)(function*(){null==e&&(e={});for(let n of t.callbacks)yield n.onTrainBegin(e)})()}onTrainEnd(e){var t=this;return(0,R.Z)(function*(){null==e&&(e={});for(let n of t.callbacks)yield n.onTrainEnd(e)})()}},OU=class extends ku{constructor(){super()}onEpochBegin(e){var t=this;return(0,R.Z)(function*(){t.seen=0,t.totals={}})()}onBatchEnd(e,t){var n=this;return(0,R.Z)(function*(){null==t&&(t={});let r=null==t.size?0:t.size;n.seen+=r;for(let a in t){let s=t[a];if("number"==typeof s)n.totals.hasOwnProperty(a)||(n.totals[a]=0),n.totals[a]=n.totals[a]+s*r;else{let i;a in n.totals?i=n.totals[a]:n.totals[a]=0;let o=W(()=>ee(n.totals[a],P(s,r)));n.totals[a]=o,i?.dispose()}}})()}onEpochEnd(e,t){var n=this;return(0,R.Z)(function*(){if(null!=t)for(let r of n.params.metrics)null!=n.totals[r]&&("number"==typeof n.totals[r]?t[r]=n.totals[r]/n.seen:W(()=>{let a=P(fe(1,n.seen),n.totals[r]);t[r]=a,n.totals[r].dispose(),Bt(t[r])}))})()}},ZN=class extends ku{onTrainBegin(e){var t=this;return(0,R.Z)(function*(){t.epoch=[],t.history={}})()}onEpochEnd(e,t){var n=this;return(0,R.Z)(function*(){null==t&&(t={}),n.epoch.push(e);for(let r in t)null==n.history[r]&&(n.history[r]=[]),n.history[r].push(t[r])})()}syncData(){var e=this;return(0,R.Z)(function*(){let t=[],n=[],r=[];for(let s in e.history){let i=e.history[s];for(let o=0;o<i.length;++o)"number"!=typeof i[o]&&(t.push(i[o].data()),n.push(s),r.push(o))}let a=yield Promise.all(t);for(let s=0;s<a.length;++s)e.history[n[s]][r[s]].dispose(),e.history[n[s]][r[s]]=a[s][0]})()}},XN=class extends ku{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Cy,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=function LV(e,t,n){let a,r=null!=n?n():w.now();return(...s)=>{let i=null!=n?n():w.now();return i-r<t||(r=i,a=e(...s)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}maybeWait(e,t,n){var r=this;return(0,R.Z)(function*(){let a=[];null!=r.yield&&(yield rs(n),a.push(r.yield(e,t,n))),a.push(r.nextFrameFunc()),yield Promise.all(a)})()}onEpochBegin(e,t){var n=this;return(0,R.Z)(function*(){n.currentEpoch=e,null!=n.epochBegin&&(yield rs(t),yield n.epochBegin(e,t))})()}onEpochEnd(e,t){var n=this;return(0,R.Z)(function*(){let r=[];null!=n.epochEnd&&(yield rs(t),r.push(n.epochEnd(e,t))),"epoch"===n.yieldEvery&&r.push(n.nextFrameFunc()),yield Promise.all(r)})()}onBatchBegin(e,t){var n=this;return(0,R.Z)(function*(){null!=n.batchBegin&&(yield rs(t),yield n.batchBegin(e,t))})()}onBatchEnd(e,t){var n=this;return(0,R.Z)(function*(){let r=[];null!=n.batchEnd&&(yield rs(t),r.push(n.batchEnd(e,t))),"batch"===n.yieldEvery?r.push(n.nextFrameFunc()):w.isNumber(n.yieldEvery)&&r.push(n.maybeWait(n.currentEpoch,e,t)),yield Promise.all(r)})()}onTrainBegin(e){var t=this;return(0,R.Z)(function*(){null!=t.trainBegin&&(yield rs(e),yield t.trainBegin(e))})()}onTrainEnd(e){var t=this;return(0,R.Z)(function*(){null!=t.trainEnd&&(yield rs(e),yield t.trainEnd(e))})()}};function JN(e,t){return null==e&&(e={}),e instanceof ku?[e]:Array.isArray(e)&&e[0]instanceof ku?e:bt(e).map(n=>new XN(n,t))}var _r=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),_r.checkForDuplicate(t),null==_r.constructors[e]&&(_r.constructors[e]=[]),_r.constructors[e].push(t)}static checkForDuplicate(e){for(let t in _r.constructors)_r.constructors[+t].forEach(n=>{if(n===e)throw new V("Duplicate callback constructor.")})}static clear(){_r.constructors={}}static createCallbacks(e){let t=[];for(let n in _r.constructors){let r=+n;e>=r&&t.push(..._r.constructors[r])}return t.map(n=>new n)}};function YN(e,t,n,r,a,s,i,o,l){let u=new ZN,p=[new OU,..._r.createCallbacks(t)];null!=e&&p.push(...e),p.push(u);let h=new KN(p);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Vr(e,t={},n=!1){return td(e,re.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ac(e,t){return W(()=>{"float32"!==e.dtype&&(e=le(e,"float32"));let n=ge(ad(e),t,!0),r=Gn(n.shape,Ut()),a=rn(Yr(n,r));return fe(e,a)})}function So(e,t){return W(()=>Nt(ad(ce(t,e)),-1))}function Fc(e,t){return W(()=>Nt(Dt(ce(t,e)),-1))}function Iu(e,t){return W(()=>{let n=ce(e,t),r=hn(Dt(e),Ut(),Number.MAX_VALUE),a=Dt(fe(n,r));return P(100,Nt(a,-1))})}function ld(e,t,n=!1){return W(()=>{if(n)t=Ja(t);else{let r=ge(t,t.shape.length-1,!0);t=fe(t,r)}return t=hn(t,Ut(),1-Ut()),ft(ge(P(le(e,"float32"),qn(t)),t.shape.length-1))})}function Rc(e,t,n=!1){return W(()=>{let r=le(ou(function ZV(e){let t=[ts(e.shape)];return B(e,t)}(e)),"int32"),a=(t=hn(t,Ut(),1-Ut())).shape;return ld(B(pu(r,a[a.length-1]),a),t,n)})}function Dc(e,t){return W(()=>{let n;return n=hn(t,Ut(),1-Ut()),n=qn(fe(n,ce(1,n))),Nt(function VU(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{let n=tt(t),r=ft(Dt(t));return ee(ce(n,P(t,e)),jp(kn(r)))})}(e,n),-1)})}function tb(e,t){return W(()=>{let n=Ac(e,-1),r=Ac(t,-1),a=P(n,r);return ft(ge(a,-1))})}_r.constructors={};var Mc={meanSquaredError:So,meanAbsoluteError:Fc,meanAbsolutePercentageError:Iu,meanSquaredLogarithmicError:function LU(e,t){return W(()=>{let n=hn(t,Ut(),Number.MAX_VALUE),r=qn(ee(1,n)),a=hn(e,Ut(),Number.MAX_VALUE),s=qn(ee(1,a));return Nt(ad(ce(r,s)),-1)})},squaredHinge:function zU(e,t){return W(()=>{let n=Yr(0,ce(1,P(e,t)));return Nt(ad(n),-1)})},hinge:function PU(e,t){return W(()=>{let n=Yr(0,ce(1,P(e,t)));return Nt(n,-1)})},categoricalHinge:function BU(e,t){return W(()=>{let n=ge(P(e,t),-1),r=ir(P(ce(1,e),t),-1);return Yr(0,ee(1,ce(r,n)))})},logcosh:function WU(e,t){return W(()=>{let n=Math.log(2),r=ce(t,e),a=ce(ee(r,po(P(-2,r))),n);return Nt(a,-1)})},categoricalCrossentropy:ld,sparseCategoricalCrossentropy:Rc,binaryCrossentropy:Dc,kullbackLeiblerDivergence:function UU(e,t){return W(()=>{let n=hn(e,Ut(),1),r=hn(t,Ut(),1);return ge(P(e,qn(fe(n,r))),-1)})},poisson:function GU(e,t){return W(()=>{let n=qn(ee(Ut(),t));return Nt(ce(t,P(e,n)),-1)})},cosineProximity:tb};function nb(e){if("string"==typeof e){if(e in Mc)return Mc[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}return e}function rb(e,t){return W(()=>{let n=P(.5,Zn(t)),r=Sa(In(t,n),e.dtype);return Nt(Hn(e,r),-1)})}function ab(e,t){return W(()=>Sa(Hn(ro(e,-1),ro(t,-1)),"float32"))}function QN(e,t){return W(()=>le(ge(Ir(Hn(e,1),Hn(t,1))),"float32"))}function e2(e,t){return W(()=>{let n=QN(e,t),r=function jU(e,t){return W(()=>le(ge(Ir(Hn(e,0),Hn(t,1))),"float32"))}(e,t),a=ee(n,r);return le(Xt(In(a,0),fe(n,a),0),"float32")})}function t2(e,t){return Dc(e,t)}function n2(e,t){return e.rank===t.rank&&(e=Ya(e,[e.rank-1])),(t=ro(t,-1)).dtype!==e.dtype&&(t=le(t,e.dtype)),le(Hn(e,t),"float32")}var sb=ld,r2=Rc,Oc={binaryAccuracy:rb,categoricalAccuracy:ab,precision:e2,categoricalCrossentropy:sb,sparseCategoricalCrossentropy:r2,mse:So,MSE:So,mae:Fc,MAE:Fc,mape:Iu,MAPE:Iu,cosine:tb};function tG(e){if("string"==typeof e&&e in Oc)return Oc[e];if("string"!=typeof e&&null!=e)return e;throw new V(`Unknown metric ${e}`)}function Lc(e){if(na(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(Mc))if(Mc[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(Oc))if(Oc[n]===e){t=n;break}return void 0!==t?t:e.name}}function a2(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!ib(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function ib(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!ib(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!ib(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function zc(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function iG(e,t,n){let r,a;try{a=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}zc([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function oG(e,t,n,r){let a,s;try{s=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let d=0;d<h.inboundLayers.length;++d)i.push(`${h.inboundLayers[d].name}[${h.nodeIndices[d]}][${h.tensorIndices[d]}]`);let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];zc([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let h=1;h<i.length;++h)zc(["","","","",i[h]],t,r)}function s2(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function ud(e,t){if(null===e)return null;if("string"==typeof e)return xo(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];s2(t,a,s)?n.push(s):n.push(ud(s,t))}return n}{let n={};for(let r of Object.keys(e)){let a=e[r];if("name"===r&&"string"==typeof a)n[r]=a;else{let s=xo(r);n[s]=ud(a,s)}}return n}}function ob(e,t){if(null==e)return null;if("string"==typeof e)return Ia(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];s2(t,a,s)?n.push(s):n.push(ob(s,t))}return n}{let n={};for(let r of Object.keys(e)){let a=e[r];n[Ia(r)]="name"!==r&&"className"!==r||"string"!=typeof a?ob(a,r):a}return n}}var lb="4.7.0",aa=class extends Be{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let y=this.getClassName().toLowerCase();this.name=gc(y)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],es(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);es(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.nodeIndex,v=y.tensorIndex;this.outputLayers.push(y.sourceLayer),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(v)}for(let y of this.inputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;na(0===x,"input layer has >1 nodes"),na(0===v,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let b=this.inputLayers[y];if(!(b instanceof wu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},r={},a={},s={},i=[],o=(y,b,x,v,I,_)=>{(null==v||null==I||null==_)&&(v=y.sourceLayer,I=y.nodeIndex,_=y.tensorIndex);let T=v.inboundNodes[I];if(-1!==x.indexOf(T))throw new Lr(`The tensor ${y.name} at layer "${v.name}" is part of a cycle.`);if(-1!==b.indexOf(T))return;this.containerNodes.add(aa.nodeKey(v,I)),v.id in s||(s[v.id]=Object.keys(s).length),-1===x.indexOf(T)&&x.push(T);let E=T.inboundLayers.length;for(let A=0;A<E;A++)o(T.inputTensors[A],b,x,T.inboundLayers[A],T.nodeIndices[A],T.tensorIndices[A]);for(b.push(T);x.indexOf(T)>=0;)x.splice(x.indexOf(T),1);i.push(T)},l=[],u=[];for(let y of this.outputs)o(y,l,u);let p=i.slice().reverse();for(let y of p){n[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id];b=Math.max(b,null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id]),r[y.outboundLayer.id]=b,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let v=0;v<y.inboundLayers.length;v++){let T=y.inboundLayers[v].inboundNodes[y.nodeIndices[v]];t[T.id]=Math.max(b+1,null==t[T.id]?0:t[T.id]),n[T.id]=T}}let h={};for(let y in t){let b=t[y];b in h||(h[b]=[]),h[b].push(n[y])}let d={};for(let y in r){let b=r[y];b in d||(d[b]=[]),d[b].push(a[y])}let c=Object.keys(d).map(y=>parseInt(y,10)).sort(fc);this.layers=[];for(let y of c){let b=d[y];b.sort((x,v)=>{let I=s[x.id],_=s[v.id];return I<_?-1:I>_?1:0});for(let x of b)x instanceof aa&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=d,c=Object.keys(h).map(y=>parseInt(y,10)).sort(fc);let f=this.inputs.slice(),m=[];for(let y of c)for(let b of h[y]){let x=b.outboundLayer;if(null!=x){for(let v of b.inputTensors)if(-1===f.indexOf(v))throw new Lr(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${x.name}". The following previous layers were accessed without issue: ${m}`);for(let v of b.outputTensors)f.push(v);m.push(x.name)}}this.nodesByDepth=h;let g=this.layers.map(y=>y.name);for(let y of g){let b=g.filter(x=>x===y).length;if(1!==b)throw new Lr(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Cc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let s of this.layers)for(let i of s.weights){if(null!=n[i.originalName])throw new V(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,r++}let a=[];for(let s in e){let i=s;if(null==n[s]){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(null!=n[i])a.push([n[i],e[s]]);else if(t)throw new V(`Provided weight data has no target variable: ${s}`);delete n[i]}if(t){let s=[];for(let i in n)s.push(i);if(s.length>0)throw new V(`${s.length} of ${r} weights are not set: ${s}`)}Ky(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${lb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=ob(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return W(()=>{e=bt(e);let n=new Io;for(let r=0;r<this.inputs.length;++r)n.add(this.inputs[r],e[r]);return id(this.outputs,n,t)})}computeMask(e,t){return W(()=>{let n;return e=bt(e),n=null==t?bo(null,e.length):bt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=_c(e);if(t.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++)n[this.inputLayers[i].name+"_0_0"]=t[i];let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(fc);if(r.length>1)for(let i of r){let o=this.nodesByDepth[i];for(let l of o){let u=l.outboundLayer;if(-1!==this.inputLayers.map(f=>f.id).indexOf(u.id))continue;let p=[];for(let f=0;f<l.inboundLayers.length;f++)p.push(n[`${l.inboundLayers[f].name}_${l.nodeIndices[f]}_${l.tensorIndices[f]}`]);let d=_c(u.computeOutputShape(Rn(p))),c=u.inboundNodes.indexOf(l);for(let f=0;f<d.length;f++)n[`${u.name}_${c}_${f}`]=d[f]}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++)s.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<s.length;i++){let o=s[i];na(o in n),a.push(n[o])}return Rn(a)}runInternalGraph(e,t){null==t&&(t=bo(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[e[o],t[o]];let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(fc);for(let o of r){let l=this.nodesByDepth[o];for(let u of l){let p=u.outboundLayer,h=u.inputTensors,d=u.outputTensors,c=new Array;for(let f of h)f.id in n&&c.push(n[f.id]);if(c.length===h.length){let m,g,y,b,f={};if(null!=u.callArgs&&(f=u.callArgs),1===c.length){let[x,v]=c[0];null==f.mask&&(f.mask=v),y=bt(p.call(x,f)),b=bt(p.computeMask(x,v)),m=[x],g=[v]}else m=c.map(x=>x[0]),g=c.map(x=>x[1]),null==f.mask&&(f.mask=g),y=bt(p.call(m,f)),b=bt(p.computeMask(m,g));if(p.activityRegularizer)throw new ze("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<d.length;++x)n[d[x].id]=[y[x],b[x]]}}}let a=[],s=[],i=[];for(let o of this.outputs){na(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[l,u]=n[o.id];i.push(l.shape),a.push(l),s.push(u)}return[a,s,i]}buildNodeConversionMap(e){let n,t={};for(let r of this.layers){n=r instanceof aa?1:0;for(let a=0;a<r.inboundNodes.length;a++){let s=aa.nodeKey(r,a);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new V("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let n of this.layers)if(n.name===e)return n;throw new V(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new V(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return W(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=aa.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let p=0;p<s.inboundNodes.length;p++){let h=s.inboundNodes[p],d=aa.nodeKey(s,p),c={};if(this.containerNodes.has(d)){if(h.callArgs)try{JSON.stringify(h.callArgs),c=h.callArgs}catch{console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),c={}}if(h.inboundLayers.length>0){let f=[];for(let m=0;m<h.inboundLayers.length;m++){let g=h.inboundLayers[m],b=h.tensorIndices[m],v=t[aa.nodeKey(g,h.nodeIndices[m])];null==v&&(v=0),f.push([g.name,v,b,c])}l.push(f)}}}let u={};u.name=s.name,u.className=i,u.config=o,u.inboundNodes=l,n.push(u)}e.layers=n;let r=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],l=aa.nodeKey(i,this.inputLayersNodeIndices[s]);if(!this.containerNodes.has(l))continue;let u=t[l];null==u&&(u=0),r.push([i.name,u,this.inputLayersTensorIndices[s]])}e.inputLayers=r;let a=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],l=aa.nodeKey(i,this.outputLayersNodeIndices[s]);if(!this.containerNodes.has(l))continue;let u=t[l];null==u&&(u=0),a.push([i.name,u,this.outputLayersTensorIndices[s]])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(m,g){m.name in s?s[m.name].push(g):s[m.name]=[g]}function o(m,g){let b,y=[];for(let x of g){let v=x[0],I=x[1],_=x[2];if(b=null==x[3]?{}:x[3],!(v in a))return void i(m,g);let T=a[v];if(T.inboundNodes.length<=I)return void i(m,g);y.push(T.inboundNodes[I].outputTensors[_])}y.length>0&&m.apply(Rn(y),b)}function l(m){let g=m.name,y=Vr(m,null!=t.customObjects?t.customObjects:{});y.setFastWeightInitDuringBuild(r),a[g]=y,m.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}let u=t.name,p=t.layers;for(let m of p)l(m);for(;!OV(s);)for(let m of p){let g=a[m.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let b of y)o(g,b)}}let h=[],d=[],c=t.inputLayers;for(let m of c){let g=m[0],y=m[1],b=m[2];na(g in a),h.push(a[g].inboundNodes[y].outputTensors[b])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],b=m[2];na(g in a),d.push(a[g].inboundNodes[y].outputTensors[b])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function i2(e,t){return function lG(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(a=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let a=[];return t.forEach(s=>{a.push(s in e?e[s]:null)}),a}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}function o2(e,t,n,r){return ub.apply(this,arguments)}function ub(){return ub=(0,R.Z)(function*(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let a=W(()=>{if(1===e.shape.length)return Zr(e);if(2===e.shape.length){if(e.shape[1]>1)return ro(e,1);if(1===e.shape[1])return B(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(yield a.data());Ee(a);let i=[];return s.forEach(o=>{if(null==n[o])throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),nt(i,"float32")}return null}),ub.apply(this,arguments)}function uG(e,t){return P(e,t)}function l2(e,t){let n,r;n=t.xs,r=t.ys,w.assert(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=u2("input",e.inputNames,n),i=u2("output",e.outputNames,r),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)w.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)w.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function u2(e,t,n){if(n instanceof $e)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(null==n[a])throw new V(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function pb(){return pb=(0,R.Z)(function*(e,t,n){let r=null!=n.batchesPerEpoch;if(w.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let s,i,a=null!=n.validationData;if(a)if(p2(n.validationData))w.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=function dG(e){if(3===e.length)throw new ze("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=g.xs,i=g.ys}let u,o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();u=a?l.slice().concat(l.map(g=>"val_"+g)):l.slice();let p=JN(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=YN(p,h,n.epochs,null,null,function cG(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,u);d.setModel(e),e.history=c,yield d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=yield t.iterator();for(;f<n.epochs;){let g={};yield d.onEpochBegin(f);let y=0,b=0;for(r||(m=yield t.iterator());!r||y<n.batchesPerEpoch;){let x=yield m.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=x.value){let{xs:v,ys:I}=l2(e,x.value),_={};_.batch=b,_.size=v[0].shape[0],yield d.onBatchBegin(b,_);let T=[];if(null!=n.classWeight){let D=i2(n.classWeight,e.outputNames);for(let F=0;F<D.length;++F)T.push(yield o2(I[F],null,D[F]))}let E=v.concat(I).concat(T),A=o(E);Ee(E);for(let D=0;D<l.length;++D){let S=A[D];_[l[D]]=S,Bt(S)}yield d.onBatchEnd(b,_),jN(_),b++,y++}if(r?y>=n.batchesPerEpoch:x.done){if(a){let v;v=p2(n.validationData)?bt(yield e.evaluateDataset(n.validationData,{batches:n.validationBatches})):bt(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=v[I]}break}if(e.stopTraining_)break}if(yield d.onEpochEnd(f,g),f++,e.stopTraining_)break}return yield d.onTrainEnd(),yield e.history.syncData(),e.history}finally{e.isTraining=!1}}),pb.apply(this,arguments)}function p2(e){return"function"==typeof e.iterator}function db(){return db=(0,R.Z)(function*(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new ze("Verbose mode is not implemented yet.");w.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=function fG(e){return"function"==typeof e.next}(t)?t:yield t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let u=yield i.next();if(s=W(()=>{if(u.value){let{xs:p,ys:h}=l2(e,u.value),d=p.concat(h),c=W(()=>a(d));if(Ee(d),0===l)for(let m=0;m<c.length;++m)s.push(we(0));let f=d[0].shape[0];for(let m=0;m<c.length;++m){let g=c[m],y=s[m];s[m]=W(()=>ee(s[m],P(f,g))),l>0&&Ee(y)}Ee(c),o+=f,++l}return s}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let p=s[u];s[u]=fe(s[u],o),Ee(p)}return Rn(s)}),db.apply(this,arguments)}function hb(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function pd(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(r=>ko(r,t,n-t)):ko(e,t,n-t)}function cb(e,t){return W(()=>null==e?null:Array.isArray(e)?e.map(n=>cb(n,t)):FN(e,"int32"===t.dtype?t:le(t,"int32")))}function fb(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function d2(e){let t=[];e instanceof $e&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(rd(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Ur(e,t){if(null==e)return;let n=[];if(t instanceof $e)n.push(t.id);else if(Array.isArray(t))t.forEach(a=>n.push(a.id));else if(null!=t)for(let a in t)n.push(t[a].id);let r=[];if(e instanceof $e)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(a=>{-1===n.indexOf(a.id)&&r.push(a)});else if(null!=e)for(let a in e){let s=e[a];-1===n.indexOf(s.id)&&r.push(s)}r.forEach(a=>{a.isDisposed||a.dispose()})}function mb(e){return Array.isArray(e)}function h2(e){return!function gG(e){return e instanceof $e}(e)&&!mb(e)}function c2(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let i=!1;if(mb(e)&&e.length>0)i=!0;else if(h2(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(i=>null);let s;if(h2(e)){s=[];for(let i of t){if(null==e[i])throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(mb(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new V(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=d2(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(0===l&&!r)continue;let p=n[i][l];if(null!=p&&p>=0&&o.shape[l]!==p)throw new V(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function f2(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(0===l&&!r)continue;let p=n[i][l];if(null!=p&&p!==o.shape[l])throw new V(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}var Na=class extends aa{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function rG(e,t,n,r=console.log){let i,a=function sG(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(-1!==r.indexOf(i)){if(s){t=!1;break}s=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(p=>Math.floor(t*p))),!a){s.push("Receives inputs"),i=[];for(let p in e.nodesByDepth)i.push(...e.nodesByDepth[p])}r("_".repeat(t)),zc(s,n,r),r("=".repeat(t));let o=e.layers;for(let p=0;p<o.length;++p)a?iG(o[p],n,r):oG(o[p],n,i,r),r((p===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function aG(e){let t;return t=Tc(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights),t}(e),u=Tc(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function nG(e){let t={Adagrad:()=>yo.adagrad(.01),Adadelta:()=>yo.adadelta(1,.95,Ut()),Adam:()=>yo.adam(.001,.9,.999,Ut()),Adamax:()=>yo.adamax(.002,.9,.999,Ut(),0),RMSProp:()=>yo.rmsprop(.001,.9,0,Ut()),SGD:()=>yo.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof wa))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>nb(s))}else{let s=nb(e.loss);this.outputs.forEach(i=>{t.push(s)})}else{e.loss=e.loss;for(let s in e.loss)if(-1===this.outputNames.indexOf(s))throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)null==e.loss[s]&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(nb(e.loss[s]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s];this.feedOutputNames.push(this.outputNames[s]),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wo("loss",()=>{for(let s=0;s<this.outputs.length;++s)-1===n.indexOf(s)&&this.outputs.length>1&&(this.metricsTensors.push([this.lossFunctions[s],s]),this.metricsNames.push(this.outputNames[s]+"_loss"))});let r=function xG(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(r=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let a of t){let s=n.hasOwnProperty(a)?n[a]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};wo("metric",()=>{for(let s=0;s<this.outputs.length;++s)-1===n.indexOf(s)&&(o=>{let u,p,h;for(let d of o){if("string"==typeof d&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(d)){let m,f=this.internalOutputShapes[s];1===f[f.length-1]||this.lossFunctions[s]===Dc?-1!==["accuracy","acc"].indexOf(d)?p=rb:-1!==["crossentropy","ce"].indexOf(d)&&(p=t2):this.lossFunctions[s]===Rc?-1!==["accuracy","acc"].indexOf(d)?p=n2:-1!==["crossentropy","ce"].indexOf(d)&&(p=r2):-1!==["accuracy","acc"].indexOf(d)?p=ab:-1!==["crossentropy","ce"].indexOf(d)&&(p=sb),-1!==["accuracy","acc"].indexOf(d)?m="acc":-1!==["crossentropy","ce"].indexOf(d)&&(m="ce"),h=p,u=""+m}else h=tG(d),u=""+Lc(d);let c;wo(u,()=>{c=h}),a(s,u,c)}})(r[s])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;hb(r);let s=this.standardizeUserDataXY(e,t,!0,r);try{let i=s[0].concat(s[1]);return this.makeTestFunction(),Rn(this.testLoop(this.testFunction,i,r,n.verbose,n.steps))}finally{Ur(s[0],e),Ur(s[1],t)}}evaluateDataset(e,t){var n=this;return(0,R.Z)(function*(){return n.makeTestFunction(),function mG(e,t,n){return db.apply(this,arguments)}(n,e,t)})()}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new V("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),a=this.retrieveSymbolicTensors(n?t:[t]),s=new Io;if(e instanceof $e&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(null==l)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=id(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=bo(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(-1!==o&&(t[i]=a[o],n--),0===n)break}if(0===n)break}if(n>0){let r=[];throw t.forEach((a,s)=>{null==a&&r.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return W(()=>{let r=this.checkNumSamples(e);if(n)throw new ze("Verbose predictLoop() is not implemented yet.");let a=fb(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)W(()=>{let u=pd(e,a[i][0],a[i][1]),p=[];if(Array.isArray(u))for(let d=0;d<u.length;++d)p.push({key:this.inputs[d],value:u[d]});else p.push({key:this.inputs[0],value:u});let h=new Io(p);return id(this.outputs,h)}).forEach((o,l)=>s[l].push(o));return Rn(s.map(i=>at(i,0)))})}predict(e,t={}){let n=d2(e);f2(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return hb(r),this.predictLoop(n,r)}finally{Ur(n,e)}}predictOnBatch(e){f2(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Lr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];a.push(this.feedLossFns[s]===Rc?i.slice(0,i.length-1).concat([1]):i)}if(function yG(e,t,n){let r=es(e.map(s=>s.shape[0]));r.sort();let a=es(t.map(s=>s.shape[0]));if(a.sort(),r.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&a.length>0&&!w.arraysEqual(r,a))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=c2(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=c2(t,this.feedOutputNames,a,!1,"target")),function bG(e,t,n){let r=[So,Dc,ld];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===ld&&1===s.shape[s.shape.length-1])throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let l=s.shape.slice(1),u=o.slice(1);for(let p=0;p<l.length;++p){let d=u[p];if(null!=d&&l[p]!==d)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}standardizeUserData(e,t,n,r,a=!0,s){var i=this;return(0,R.Z)(function*(){let[o,l]=i.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){let p=i2(r,i.outputNames);u=[];for(let h=0;h<p.length;++h)u.push(yield o2(l[h],null,p[h]))}return[o,l,u]})()}testLoop(e,t,n,r=0,a){return W(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ze("Verbose mode is not implemented yet.");if(null!=a)throw new ze("steps mode in testLoop() is not implemented yet");{let o=fb(s,n),l=nt(zr(0,s));for(let u=0;u<o.length;++u){let p=o[u][0],h=o[u][1],d=ko(l,p,h-p),c=cb(t,d),f=e(c);if(0===u)for(let m=0;m<f.length;++m)i.push(we(0));for(let m=0;m<f.length;++m)i[m]=ee(i[m],P(h-p,f[m]))}for(let u=0;u<i.length;++u)i[u]=fe(i[u],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;kN(e,r)>1&&(a+=`_${kN(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map(u=>u.read());return[this.optimizer_.minimize(()=>{let u=[];for(let c=0;c<this.inputs.length;++c)u.push({key:this.inputs[c],value:n[c]});let d,p=new Io(u),h=id(this.outputs,p,{training:!0});for(let c=0;c<this.lossFunctions.length;++c){let m=(0,this.lossFunctions[c])(r[c],h[c]);null!=a[c]&&(m=uG(m,a[c]));let g=Nt(m);t.push(g),d=0===c?m:ee(d,m)}for(let c=0;c<this.metricsTensors.length;++c){let f;if(this.outputs.length>1&&c<this.outputs.length)f=t[c];else{let g=this.metricsTensors[c][1];f=Nt((0,this.metricsTensors[c][0])(r[g],h[g]))}Bt(f),s.push(f)}return d=Nt(d),this.calculateLosses().forEach(c=>{d=ee(d,c)}),d},!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>W(()=>{let n,t=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new Io(s),o=id(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let p=Nt((0,this.lossFunctions[l])(a[l],o[l]));n=0===l?p:ee(n,p),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][1],h=Nt((0,this.metricsTensors[l][0])(a[p],o[p]));t.push(h)}return t})}fit(e,t,n={}){var r=this;return(0,R.Z)(function*(){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,p,h,d;r.isTraining=!0;try{let c=null==n.batchSize?32:n.batchSize;hb(c);let f=!1,m=yield r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,c);a=m[0],s=m[1],d=m[2];let y,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new ze("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);l=n.validationData[0],u=n.validationData[1];let E=!0,A=yield r.standardizeUserData(l,u,null,null,E,c);p=A[0],h=A[1],y=p.concat(h)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;let E=Math.floor(a[0].shape[0]*(1-n.validationSplit)),A=a[0].shape[0];p=pd(a,E,A),i=a,a=pd(a,0,E),h=pd(s,E,A),o=s,s=pd(s,0,E),y=p.concat(h)}else null!=n.validationSteps&&(g=!0);let b=a.concat(s).concat(d);r.checkTrainableWeightsConsistency();let I,_,x=r.makeTrainFunction(),v=r.getDedupedMetricsNames();g?(r.makeTestFunction(),I=r.testFunction,_=v.slice().concat(v.map(E=>"val_"+E))):(I=null,y=[],_=v.slice());let T=JN(n.callbacks,n.yieldEvery);return yield r.fitLoop(x,b,v,c,n.epochs,n.verbose,T,I,y,n.shuffle,_,n.initialEpoch,null,null)}finally{r.isTraining=!1,Ur(a,e),Ur(s,t),Ur(i,e),Ur(o,t),Ur(p,l),Ur(h,u),null!=d&&Ee(d)}})()}fitLoop(e,t,n,r,a,s,i,o,l,u,p,h,d,c){var f=this;return(0,R.Z)(function*(){null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==h&&(h=0);let m=!1;if(null!=o&&null!=l&&(m=!0),null!=c&&(m=!0,null==d))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let y,g=f.checkNumSamples(t,r,d,"steps_per_epoch");null!=g&&(y=zr(0,g)),null==s&&(s=1);let{callbackList:b,history:x}=YN(i,s,a,h,g,d,r,m,p);b.setModel(f),f.history=x,yield b.onTrainBegin(),f.stopTraining_=!1;for(let v=h;v<a;++v){yield b.onEpochBegin(v);let I={};if(null!=d)throw new ze("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new ze("batch shuffling is not implemneted yet");u&&w.shuffle(y);let _=nt(y),T=fb(g,r);for(let E=0;E<T.length;++E){let A={};if(yield b.onBatchBegin(E,A),W(()=>{let D=T[E][0],F=T[E][1],S=ko(_,D,F-D);A.batch=E,A.size=F-D;let O=cb(t,S),U=e(O);for(let G=0;G<n.length;++G){let K=U[G];A[n[G]]=K,Bt(K)}if(E===T.length-1&&m){let G=f.testLoop(o,l,r);for(let j=0;j<n.length;++j){let K=n[j],Z=G[j];Bt(Z),I["val_"+K]=Z}}}),yield b.onBatchEnd(E,A),jN(A),f.stopTraining_)break}_.dispose()}if(yield b.onEpochEnd(v,I),f.stopTraining_)break}return yield b.onTrainEnd(),yield f.history.syncData(),f.history})()}fitDataset(e,t){var n=this;return(0,R.Z)(function*(){return function hG(e,t,n){return pb.apply(this,arguments)}(n,e,t)})()}trainOnBatch(e,t){var n=this;return(0,R.Z)(function*(){let r=yield n.standardizeUserData(e,t),a=r[0],s=r[1],i=n.makeTrainFunction()(a.concat(s)),o=[];for(let l of i){let u=yield l.data();o.push(u[0])}return Ee(i),Ur(r[0],e),Ur(r[1],t),Rn(o)})()}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Ah().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ah().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ia(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ia(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Ia(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ia(Lc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ia(Lc(e)));{let e={};for(let t in this.metrics)e[t]=Ia(Lc(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let r,a,n=Vr(ud(e.optimizer_config));if("string"==typeof e.loss)r=xo(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>xo(s));else if(null!=e.loss){r={};for(let s in e.loss)r[s]=xo(e.loss[s])}if(Array.isArray(e.metrics))a=e.metrics.map(s=>xo(s));else if(null!=e.metrics){a={};for(let s in e.metrics)a[s]=xo(e.metrics[s])}this.compile({loss:r,metrics:a,optimizer:n})}save(e,t){var n=this;return(0,R.Z)(function*(){if("string"==typeof e){let o=sn.getSaveHandlers(e);if(0===o.length)throw new V(`Cannot find any save handlers for URL '${e}'`);if(o.length>1)throw new V(`Found more than one (${o.length}) save handlers for URL '${e}'`);e=o[0]}if(null==e.save)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let r=yield sn.encodeWeights(n.getNamedWeights(t)),i={modelTopology:n.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${lb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=n.optimizer){i.trainingConfig=n.getTrainingConfig();let o="optimizer",{data:l,specs:u}=yield sn.encodeWeights(yield n.optimizer.getWeights(),o);r.specs.push(...u),r.data=sn.concatenateArrayBuffers([r.data,l])}return null!=n.userDefinedMetadata&&(a2(n.userDefinedMetadata,n.name,!0),i.userDefinedMetadata=n.userDefinedMetadata),i.weightData=r.data,i.weightSpecs=r.specs,e.save(i)})()}setUserDefinedMetadata(e){a2(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Na.className="Model",re.registerClass(Na);var m2=class extends Na{};function wG(e,t){return gb.apply(this,arguments)}function gb(){return gb=(0,R.Z)(function*(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let a=Vr(ud(n),t);if(null!=e.weightsManifest){let s=yield sn.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),Ee(s)}return a}),gb.apply(this,arguments)}function kG(e,t){return yb.apply(this,arguments)}function yb(){return yb=(0,R.Z)(function*(e,t){if(null==t&&(t={}),"string"==typeof e){let n=sn.getLoadHandlers(e,t);if(0===n.length)n.push(sn.browserHTTPRequest(e,t));else if(n.length>1)throw new V(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return function IG(e,t,n){return bb.apply(this,arguments)}(e,void 0,t)}),yb.apply(this,arguments)}function bb(){return bb=(0,R.Z)(function*(e,t,n){if(null==n&&(n={}),null==e.load)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=yield e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Vr(ud(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:p}=function SG(e,t){let n=sn.decodeWeights(e,t),r={},a=[];return t.forEach(s=>{"optimizer"===s.group?a.push({name:s.name,tensor:n[s.name]}):r[s.name]=n[s.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(u,s),null!=o.optimizer&&p.length>0&&(yield o.optimizer.setWeights(p)),Ee(u),Ee(p.map(h=>h.tensor))}return o}),bb.apply(this,arguments)}m2.className="Functional",re.registerClass(m2);var Su=class extends Na{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:gc("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new V(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let n,t=e instanceof Su||e instanceof Na;if(t){if(n=e,1!==n.outputs.length)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=PN({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=zN(this.outputs[0])}this.inboundNodes=[],new Cc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:bo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ze(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Na({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}evaluateDataset(e,t){var n=this;return(0,R.Z)(function*(){if(!n.built)throw new Lr("The model needs to be compiled before being used.");return n.model.evaluateDataset(e,t)})()}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(e,t,n={}){var r=this;return(0,R.Z)(function*(){if(!r.built)throw new Lr("The model needs to be compiled before being used.");return r.model.fit(e,t,n)})()}fitDataset(e,t){var n=this;return(0,R.Z)(function*(){if(!n.built)throw new Lr("The model needs to be compiled before being used.");return n.model.fitDataset(e,t)})()}trainOnBatch(e,t){var n=this;return(0,R.Z)(function*(){return n.model.trainOnBatch(e,t)})()}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new V("Legacy serialization format not supported yet.");a=t}else w.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Su))throw new ze(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of a){let l=Vr(o,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(null==this.model)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function NG(e){return new Na(e)}function _G(e){return new Su(e)}function g2(e){return PN(e)}function TG(e,t){_r.registerCallbackConstructor(e,t)}Su.className="Sequential",re.registerClass(Su);var Mn=class extends re.Serializable{getConfig(){return{}}},y2=class extends Mn{apply(e,t=1){return function JV(e,t=1){if(1!==t)throw new ze(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return au(e)}(e,t)}};y2.className="elu",re.registerClass(y2);var b2=class extends Mn{apply(e){return Jh(e)}};b2.className="selu",re.registerClass(b2);var x2=class extends Mn{apply(e){return tt(e)}};x2.className="relu",re.registerClass(x2);var v2=class extends Mn{apply(e){return W(()=>Za(6,tt(e)))}};v2.className="relu6",re.registerClass(v2);var w2=class extends Mn{apply(e){return e}};w2.className="linear",re.registerClass(w2);var k2=class extends Mn{apply(e){return kr(e)}};k2.className="sigmoid",re.registerClass(k2);var I2=class extends Mn{apply(e){return function QV(e){return W(()=>{let t=ee(.5,P(.2,e));return hn(t,0,1)})}(e)}};I2.className="hardSigmoid",re.registerClass(I2);var S2=class extends Mn{apply(e){return po(e)}};S2.className="softplus",re.registerClass(S2);var N2=class extends Mn{apply(e){return function YV(e){return W(()=>fe(e,ee(Dt(e),1)))}(e)}};N2.className="softsign",re.registerClass(N2);var _2=class extends Mn{apply(e){return so(e)}};_2.className="tanh",re.registerClass(_2);var xb=class extends Mn{apply(e,t=-1){return Ja(e,t)}};xb.className="softmax",re.registerClass(xb);var T2=class extends Mn{apply(e,t=-1){return Vh(e,t)}};T2.className="logSoftmax",re.registerClass(T2);var C2=class extends Mn{apply(e,t=1){return W(()=>P(kr(P(e,t)),e))}};C2.className="swish",re.registerClass(C2);var E2=class extends Mn{apply(e){return W(()=>P(e,so(po(e))))}};function as(e){return e.getClassName()}function vb(e,t={}){return td(e,re.SerializationMap.getMap().classNameMap,t,"activation")}function ss(e){if(null==e){return vb({className:"linear",config:{}})}if("string"==typeof e){let t={};return t.className=e,t.config={},vb(t)}return e instanceof Mn?e:vb(e)}function wb(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}E2.className="mish",re.registerClass(E2);var $2=class extends re.Serializable{},dd=class extends $2{constructor(e){super(),wb(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return W(()=>{let t=_t([1]);return this.hasL1&&(t=ee(t,ge(P(this.l1,Dt(e))))),this.hasL2&&(t=ee(t,ge(P(this.l2,ad(e))))),B(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};dd.className="L1L2",re.registerClass(dd);var A2={l1l2:"L1L2"};function ut(e){return Ay(e)}function F2(e,t={}){return td(e,re.SerializationMap.getMap().classNameMap,t,"regularizer")}function vt(e){return null==e?null:"string"==typeof e?F2({className:e in A2?A2[e]:e,config:{}}):e instanceof $2?e:F2(e)}var kb=class extends Be{constructor(e){super(e??{}),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ce(e);let n=tt(e);return null!=this.maxValue&&(n=hn(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};kb.className="ReLU",re.registerClass(kb);var Ib=class extends Be{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ce(e);return Hp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Ib.className="LeakyReLU",re.registerClass(Ib);var Sb=class extends Be{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=xt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vt(e.alphaRegularizer),this.alphaConstraint=Ht(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=Ze(e)).slice(1);if(null!=this.sharedAxes)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Ot({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ce(e),Xp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Tt(this.alphaInitializer),alphaRegularizer:ut(this.alphaRegularizer),alphaConstraint:Gt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Sb.className="PReLU",re.registerClass(Sb);var Nb=class extends Be{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ze(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ce(e);return au(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Nb.className="ELU",re.registerClass(Nb);var _b=class extends Be{constructor(e){super(e??{}),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ce(e);return P(n,le(In(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};_b.className="ThresholdedReLU",re.registerClass(_b);var Tb=class extends Be{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new xb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ce(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Nu(e,t,n){if("number"==typeof e)return bo(e,t);if(e.length!==t)throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!qV(a))throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Gr(e,t,n,r,a=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((i+r-1)/r)}function sa(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ns([n-t,0]);else{if("same"!==r)throw new V(`Unsupport padding mode: ${r}.`);e*=t}return e}function Cb(e,t){return W(()=>(At(t),"channelsFirst"===t?Le(e,[0,2,3,1]):e))}function R2(e,t){return W(()=>(At(t),"channelsFirst"===t?Le(e,[0,2,3,4,1]):e))}function D2(e,t,n,r=[1,1],a="valid",s,i,o=null){return W(()=>{if(null==s&&(s="channelsLast"),At(s),3!==e.rank&&4!==e.rank)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Cb(e,s);if("causal"===a)throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=gu.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Le(l,[0,3,1,2])),l})}Tb.className="Softmax",re.registerClass(Tb);var Eb=class extends Be{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Eb.verifyArgs(t),this.rank=e,Yt(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ze(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Nu(t.kernelSize,e,"kernelSize"),this.strides=Nu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,ur(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,At(this.dataFormat),this.activation=ss(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=xt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ht(t.biasConstraint),this.biasRegularizer=vt(t.biasRegularizer),this.activityRegularizer=vt(t.activityRegularizer),this.dilationRate=Nu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(na("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ry(e.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:as(this.activation),useBias:this.useBias,biasInitializer:Tt(this.biasInitializer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),biasConstraint:Gt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},hd=class extends Eb{constructor(e,t){super(e,t),this.kernel=null,hd.verifyArgs(t),this.filters=t.filters,Yt(this.filters,"filters"),this.kernelInitializer=xt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ht(t.kernelConstraint),this.kernelRegularizer=vt(t.kernelRegularizer)}build(e){e=Ze(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new V(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return W(()=>{e=Ce(e);let n,r=null==this.bias?null:this.bias.read(),a=SN(this.activation.getClassName());if(null!=a&&2===this.rank)n=D2(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)n=function $G(e,t,n,r=1,a="valid",s,i=1){return W(()=>{if(null==s&&(s="channelsLast"),At(s),3!==e.shape.length)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Le(e,[0,2,1])),"causal"===a)throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Mh(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Br(o,n)),o})}(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)n=D2(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ze("convolutions greater than 3D are not implemented yet.");n=function AG(e,t,n,r=[1,1,1],a="valid",s,i){return W(()=>{if(null==s&&(s="channelsLast"),At(s),4!==e.rank&&5!==e.rank)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=R2(e,s);if("causal"===a)throw new ze("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=yg(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Br(o,n)),"channelsFirst"===s&&(o=Le(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=Ze(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){let s=Gr(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(s)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Tt(this.kernelInitializer),kernelRegularizer:ut(this.kernelRegularizer),kernelConstraint:Gt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},cd=class extends hd{constructor(e){super(2,e),cd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ry(e.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};cd.className="Conv2D",re.registerClass(cd);var fd=class extends hd{constructor(e){super(3,e),fd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};fd.className="Conv3D",re.registerClass(fd);var $b=class extends cd{constructor(e){if(super(e),this.inputSpec=[new Ot({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ze(e)).length)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ot({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ce(e);if(4!==n.shape.length)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s,i,r=n.shape;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);let l=r[i],p=this.kernelSize[1],d=this.strides[1],m=[r[0],sa(r[s],this.strides[0],this.kernelSize[0],this.padding),sa(l,d,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(n=Le(n,[0,2,3,1]));let g=Oh(n,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(g=Le(g,[0,3,1,2])),null!=this.bias&&(g=Br(g,this.bias.read(),this.dataFormat)),null!=this.activation&&(g=this.activation.apply(g)),g})}computeOutputShape(e){let n,r,a,t=(e=Ze(e)).slice();"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=sa(t[r],o,s,this.padding),t[a]=sa(t[a],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};$b.className="Conv2DTranspose",re.registerClass($b);var Ab=class extends fd{constructor(e){if(super(e),this.inputSpec=[new Ot({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ze(e)).length)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ot({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ce(e);if(5!==n.shape.length)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s,i,o,r=n.shape;"channelsFirst"===this.dataFormat?(o=2,s=3,i=4):(o=1,s=2,i=3);let u=r[s],p=r[i],d=this.kernelSize[1],c=this.kernelSize[2],m=this.strides[1],g=this.strides[2],v=[r[0],sa(r[o],this.strides[0],this.kernelSize[0],this.padding),sa(u,m,d,this.padding),sa(p,g,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(n=Le(n,[0,2,3,4,1]));let I=bg(n,this.kernel.read(),v,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(I=Le(I,[0,4,1,2,3])),null!==this.bias&&(I=Br(I,this.bias.read(),this.dataFormat)),null!==this.activation&&(I=this.activation.apply(I)),I})}computeOutputShape(e){let n,r,a,s,t=(e=Ze(e)).slice();"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=sa(t[r],u,i,this.padding),t[a]=sa(t[a],p,o,this.padding),t[s]=sa(t[s],h,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ab.className="Conv3DTranspose",re.registerClass(Ab);var M2=class extends hd{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vt(t.depthwiseRegularizer),this.depthwiseConstraint=Ht(t.depthwiseConstraint),this.pointwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vt(t.pointwiseRegularizer),this.pointwiseConstraint=Ht(t.pointwiseConstraint)}build(e){if((e=Ze(e)).length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):null,this.inputSpec=[new Ot({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n;if(e=Ce(e),1===this.rank)throw new ze("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Le(e,[0,2,3,1])),n=hu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Br(n,this.bias.read(),this.dataFormat)),null!=this.activation&&(n=this.activation.apply(n)),"channelsFirst"===this.dataFormat&&(n=Le(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.pointwiseInitializer=Tt(this.pointwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.pointwiseRegularizer=ut(this.pointwiseRegularizer),e.depthwiseConstraint=Gt(this.depthwiseConstraint),e.pointwiseConstraint=Gt(this.pointwiseConstraint),e}};M2.className="SeparableConv";var Fb=class extends M2{constructor(e){super(2,e)}};Fb.className="SeparableConv2D",re.registerClass(Fb);var Pc=class extends hd{constructor(e){super(1,e),Pc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ry(e.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Pc.className="Conv1D",re.registerClass(Pc);var Rb=class extends Be{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return W(()=>{if(e=Ce(e),"channelsLast"===this.dataFormat){let n=yc(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return yc(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let n=yc(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return yc(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Rb.className="Cropping2D",re.registerClass(Rb);var Db=class extends Be{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,At(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function GV(e){vo(BV,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return W(()=>{let n=Ce(e),r=n.shape;if("channelsFirst"===this.dataFormat){n=Le(n,[0,2,3,1]);let a=this.size[0]*r[2],s=this.size[1]*r[3],i="nearest"===this.interpolation?lr.resizeNearestNeighbor(n,[a,s]):lr.resizeBilinear(n,[a,s]);return Le(i,[0,3,1,2])}{let a=this.size[0]*r[1],s=this.size[1]*r[2];return"nearest"===this.interpolation?lr.resizeNearestNeighbor(n,[a,s]):lr.resizeBilinear(n,[a,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};Db.className="UpSampling2D",re.registerClass(Db);var Mb=class extends Eb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=xt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ht(e.depthwiseConstraint),this.depthwiseRegularizer=vt(e.depthwiseRegularizer)}build(e){if((e=Ze(e)).length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return W(()=>{let n=function FG(e,t,n=[1,1],r="valid",a,s){return W(()=>{null==a&&(a="channelsLast"),At(a);let i=Cb(e,a);if(4!==e.rank)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=lo(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Le(i,[0,3,1,2])),i})}(e=Ce(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Br(n,this.bias.read(),this.dataFormat)),null!=this.activation&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=Ze(e);let n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Gr("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),s=Gr(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.depthwiseConstraint=Gt(this.depthwiseRegularizer),e}};function O2(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new V("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return null==s||Array.isArray(s)?s:[s]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function L2(e,t,n,r=!1,a,s,i=!1,o=!1){return W(()=>{let l=t.shape.length;if(l<3)throw new V(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(zr(2,l));if(t=Le(t,u),null!=s)throw new ze("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=le(le(a,"bool"),"float32")).rank===l-1&&(a=an(a,-1)),a=Le(a,u)),r&&(t=or(t,0),null!=a&&(a=or(a,0)));let h,m,g,p=[],d=n,c=t.shape[0],f=$t(t);null!=a&&(m=$t(a));for(let y=0;y<c;++y){let b=f[y],x=W(()=>e(b,d));if(null==a)h=x[0],d=x[1];else{let v=W(()=>{let I=m[y],_=ce(Zn(I),I);return{output:ee(P(x[0],I),P(d[0],_)),newStates:d.map((A,D)=>ee(P(x[1][D],I),P(A,_)))}});h=v.output,d=v.newStates}o&&p.push(h)}return o&&(g=Wt(p,1)),[h,g,d]})}Mb.className="DepthwiseConv2D",re.registerClass(Mb);var ia=class extends Be{constructor(e){let t;if(super(e),null==e.cell)throw new V("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Vc({cells:e.cell}):e.cell,null==t.stateSize)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ot({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?zr(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){jy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let r,n=t[0];if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){let a=[];for(let s of t)a.push([e[0],s]);return[r].concat(a)}return r}computeMask(e,t){return W(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(a=>null);return[n].concat(r)}return n})}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ze("Constants support is not implemented in RNN yet.");jy(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ot({shape:[t,null,...n]});let a,r=[e[0]].concat(e.slice(2));if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!w.arraysEqual(this.stateSpec.map(s=>s.shape[s.shape.length-1]),a))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(s=>new Ot({shape:[null,s]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new ka("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>_t([n,r])):[_t([n,this.cell.stateSize])];else if(null==e)Ee(this.states_),null!=this.keptStates&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>_t([n,r])):this.states_[0]=_t([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let r=0;r<this.states_.length;++r){let a=e[r],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[n,s];if(!w.arraysEqual(a.shape,i))throw new V(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[r]=a}}this.states_=this.states_.map(r=>Bt(r.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=O2(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let o of n)this.stateSpec.push(new Ot({shape:o.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Wr){let o=[e].concat(s),l=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=l;let p=super.apply(o,t);return this.inputSpec=u,p}return super.apply(e,t)}call(e,t){return W(()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=Ce(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new V(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=L2((d,c)=>{let f=this.cell.call([d].concat(c),i);return[f[0],f.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],p=o[2];this.stateful&&this.resetStates(p,r);let h=this.returnSequences?u:l;return this.returnState?[h].concat(p):h})}getInitialState(e){return W(()=>{let t=_t(e.shape);return t=ge(t,[1,2]),t=rd(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Ly(t,[1,n]):t):this.cell.stateSize>1?[Ly(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===ia.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let a=Vr(t.cell,n);return new e(Object.assign(t,{cell:a}))}};ia.className="RNN",re.registerClass(ia);var md=class extends Be{},Bc=class extends md{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yt(this.units,"units"),this.activation=ss(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=vu([1,ns([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=vu([1,ns([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return W(()=>{if(2!==e.length)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=is({ones:()=>Zn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=is({ones:()=>Zn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=ra(null!=s?P(e,s):e,this.kernel.read()),null!=this.bias&&(a=Br(a,this.bias.read())),null!=i&&(n=P(n,i));let o=ee(a,ra(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:as(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Bc.className="SimpleRNNCell",re.registerClass(Bc);var Ob=class extends ia{constructor(e){e.cell=new Bc(e),super(e)}call(e,t){return W(()=>(null!=this.cell.dropoutMask&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}};Ob.className="SimpleRNN",re.registerClass(Ob);var Wc=class extends md{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Yt(this.units,"units"),this.activation=ss(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ss(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=vu([1,ns([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=vu([1,ns([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return W(()=>{if(2!==e.length)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=is({ones:()=>Zn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=is({ones:()=>Zn(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let i,o,l,s=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=P(e,this.dropoutMask[0]));let u=ra(e,this.kernel.read());this.useBias&&(u=Br(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=P(r,s[0]));let p=this.recurrentKernel.read(),[h,d]=Fn(p,[2*this.units,this.units],p.rank-1),c=ra(r,h),[f,m,g]=Fn(u,3,u.rank-1),[y,b]=Fn(c,2,c.rank-1);i=this.recurrentActivation.apply(ee(f,y)),o=this.recurrentActivation.apply(ee(m,b));let x=ra(P(o,r),d);l=this.activation.apply(ee(g,x));let v=ee(P(i,r),P(ee(1,ft(i)),l));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:as(this.activation),recurrentActivation:as(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};Wc.className="GRUCell",re.registerClass(Wc);var Lb=class extends ia{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Wc(e),super(e)}call(e,t){return W(()=>(null!=this.cell.dropoutMask&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Lb.className="GRU",re.registerClass(Lb);var gd=class extends md{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yt(this.units,"units"),this.activation=ss(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ss(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=vu([1,ns([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=vu([1,ns([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let r;if(e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,s=this.units;r=new((t=class extends Nr{apply(i,o){let l=a.apply([s]),u=(new xc).apply([s]),p=a.apply([2*s]);return AN(AN(l,u),p)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return W(()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=is({ones:()=>Zn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=is({ones:()=>Zn(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let o,l,u,p,i=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=P(e,this.dropoutMask[0]));let h=ra(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=P(r,i[0])),h=ee(h,ra(r,this.recurrentKernel.read())),this.useBias&&(h=Br(h,this.bias.read()));let[d,c,f,m]=Fn(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(c),u=ee(P(l,a),P(o,this.activation.apply(f))),p=this.recurrentActivation.apply(m);let g=P(p,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:as(this.activation),recurrentActivation:as(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};gd.className="LSTMCell",re.registerClass(gd);var zb=class extends ia{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gd(e),super(e)}call(e,t){return W(()=>(null!=this.cell.dropoutMask&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};zb.className="LSTM",re.registerClass(zb);var Vc=class extends md{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return W(()=>{let n=e.slice(1),r=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(n.splice(0,i.stateSize.length)):r.push(n.splice(0,1));r.reverse();let s,a=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(let i of a.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){let t;jy(e)&&(e=e[0]),this.cells.forEach((n,r)=>{wo(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),n={cells:this.cells.map(r=>({className:r.getClassName(),config:r.getConfig()}))};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(Vr(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return qy(e)}setWeights(e){let t=[];for(let n of this.cells){let a=e.splice(n.weights.length);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],a[s]])}Ky(t)}};function is(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):RN(t(),n),o=()=>sd(i,t,r);return!a||a<=1?Bt(o().clone()):Array(a).fill(void 0).map(o).map(l=>Bt(l.clone()))}Vc.className="StackedRNNCells",re.registerClass(Vc);var z2=class extends ia{constructor(e){if(e.unroll)throw new ze("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ze("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ot({ndim:5})]}call(e,t){return W(()=>{if(null!=this.cell.dropoutMask&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return W(()=>{let{stateSize:t}=this.cell,r=this.computeSingleOutputShape(e.shape),s=_t([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new ka("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>_t(a)):[_t(a)];else if(null==e)Ee(this.states_),null!=this.keptStates&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>_t(a)):this.states_[0]=_t(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!w.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Bt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?4:3],p=Gr(e[o?3:2],r[0],a,s[0],i[0]),h=Gr(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,p,h]:[p,h,n]]}};z2.className="ConvRNN2D";var Uc=class extends gd{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Yt(this.filters,"filters"),this.kernelSize=Nu(n,2,"kernelSize"),this.kernelSize.forEach(o=>Yt(o,"kernelSize")),this.strides=Nu(r||1,2,"strides"),this.strides.forEach(o=>Yt(o,"strides")),this.padding=a||"valid",ur(this.padding),this.dataFormat=s||"channelsLast",At(this.dataFormat),this.dilationRate=Nu(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Yt(o,"dilationRate"))}build(e){var t;e=Ze(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new V(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;o=new((t=class extends Nr{apply(p,h){return Oy([l.apply([u]),Kn([u]),l.apply([2*u])])}}).className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return W(()=>{if(3!==e.length)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=is({ones:()=>Zn(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(J,Y,te)=>Y&&Y[te]?P(Y[te],J):J,u=l(r,o,0),p=l(r,o,1),h=l(r,o,2),d=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=is({ones:()=>Zn(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(a,c,0),m=l(a,c,1),g=l(a,c,2),y=l(a,c,3),[x,v,I,_]=Fn(this.kernel.read(),4,3),[T,E,A,D]=this.useBias?Fn(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,x,T,this.padding),p=this.inputConv(p,v,E,this.padding),h=this.inputConv(h,I,A,this.padding),d=this.inputConv(d,_,D,this.padding);let[F,S,O,U]=Fn(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,F),m=this.recurrentConv(m,S),g=this.recurrentConv(g,O),y=this.recurrentConv(y,U);let G=this.recurrentActivation.apply(ee(u,f)),j=this.recurrentActivation.apply(ee(p,m)),K=ee(P(j,s),P(G,this.activation.apply(ee(h,g)))),Z=P(this.recurrentActivation.apply(ee(d,y)),this.activation.apply(K));return[Z,Z,K]})}getConfig(){let n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(super.getConfig(),["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=wn(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Br(a,n,this.dataFormat):a}recurrentConv(e,t){return wn(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Uc.className="ConvLSTM2DCell",re.registerClass(Uc);var Pb=class extends z2{constructor(e){let t=new Uc(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};Pb.className="ConvLSTM2D",re.registerClass(Pb);var Gc=class extends Be{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);if(0<this.rate&&this.rate<1){let r=null!=t.training&&t.training,a=this.getNoiseShape(n);return sd(()=>RN(n,this.rate,a,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Gc.className="Dropout",re.registerClass(Gc);var Bb=class extends Gc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Bb.className="SpatialDropout1D",re.registerClass(Bb);var Wb=class extends Be{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Yt(this.units,"units"),this.activation=ss(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ht(e.kernelConstraint),this.biasConstraint=Ht(e.biasConstraint),this.kernelRegularizer=vt(e.kernelRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=Ze(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=Ze(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let a,n=Ce(e),r=SN(this.activation.getClassName());return null!=r?a=ra(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=ra(n,this.kernel.read()),null!=this.bias&&(a=Br(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:as(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),biasConstraint:Gt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Wb.className="Dense",re.registerClass(Wb);var Vb=class extends Be{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ze(e);for(let t of e.slice(1))if(null==t)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ts(e,1)]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let r=[0];for(let a=2;a<n.rank;++a)r.push(a);r.push(1),n=Le(n,r)}return function XV(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],ts(e.shape,1)];return B(e,t)}(n)})}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Vb.className="Flatten",re.registerClass(Vb);var Ub=class extends Be{constructor(e){super(e),this.supportsMasking=!0,this.activation=ss(e.activation)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);return this.activation.apply(n)})}getConfig(){let e={activation:as(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Ub.className="Activation",re.registerClass(Ub);var Gb=class extends Be{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return W(()=>function KV(e,t){return W(()=>{if(2!==e.shape.length)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Ly(rd(e,1),[1,t,1])})}(e=Ce(e),this.n))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Gb.className="RepeatVector",re.registerClass(Gb);var Hb=class extends Be{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let l=r[o];if(this.isUnknown(l)){if(null!==s)throw new V("Can only specifiy one unknown dimension.");s=o}else a*=l}let i=ts(e);if(null!==s){if(0===a||i%a!=0)throw new V(n);r[s]=i/a}else if(i!==a)throw new V(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return B(n,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Hb.className="Reshape",re.registerClass(Hb);var jb=class extends Be{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=zr(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ot({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=Ze(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Le(Ce(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};jb.className="Permute",re.registerClass(jb);var qb=class extends Be{constructor(e){super(e??{}),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ce(e);return Lp(ho(n,this.maskValue),-1)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e),s=Lp(ho(n,this.maskValue),-1,!0);return P(n,le(s,n.dtype))})}};qb.className="Masking",re.registerClass(qb);var Kb=class extends Be{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(bt(e.inputLength))}this.inputDim=e.inputDim,Yt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Yt(this.outputDim,"outputDim"),this.embeddingsInitializer=xt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vt(e.embeddingsRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.embeddingsConstraint=Ht(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return W(()=>this.maskZero?(e=Ce(e),ho(e,He(e))):null)}computeOutputShape(e){if(e=Ze(e),null==this.inputLength)return[...e,this.outputDim];let t=bt(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);"int32"!==n.dtype&&(n=Sa(n,"int32"));let r=FN(this.embeddings.read(),B(n,[n.size]));return B(r,Ze(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Tt(this.embeddingsInitializer),embeddingsRegularizer:ut(this.embeddingsRegularizer),activityRegularizer:ut(this.activityRegularizer),embeddingsConstraint:Gt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Kb.className="Embedding",re.registerClass(Kb);var No=class extends Be{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ze}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ze(e)]),e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=es(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let r=e.map(a=>a.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==es(r).length}call(e,t){return W(()=>{if(this.reshapeRequired){let n=[],r=e.map(a=>a.rank);if(-1===r.indexOf(null)){let a=ns(r);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=rd(s,1);n.push(s)}return this.mergeFunction(n)}{let a=!1;for(let o of e){let l=o.rank;if(null==l){let u=o.shape,p=u[0],h=u.slice(1).concat([p]),d=B(o,[p].concat(ts(u.slice(1))));d=Le(d,[1,0]),d=B(d,h),n.push(d),a=!0}else if(l>1){let u=zr(1,l).concat([0]);n.push(Le(o,u)),a=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(a)if(null==i){let o=s.shape,u=o[o.length-1],p=[u].concat(o.slice(0,o.length-1));s=B(Le(B(s,[-1,u]),[1,0]),p)}else if(i>1){let o=[i-1].concat(zr(0,i-1));s=Le(s,o)}return s}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=es(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return W(()=>{if(null==t)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>null==r))return null;let n=(t=t.map(r=>null==r?r:an(r,0)))[0];for(let r=1;r<t.length-1;++r)n=Ir(n,t[r]);return n})}},Zb=class extends No{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ee(t,e[n]);return t})}};Zb.className="Add",re.registerClass(Zb);var Xb=class extends No{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=P(t,e[n]);return t})}};Xb.className="Multiply",re.registerClass(Xb);var Jb=class extends No{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ee(t,e[n]);return P(1/e.length,t)})}};Jb.className="Average",re.registerClass(Jb);var Yb=class extends No{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Yr(t,e[n]);return t})}};Yb.className="Maximum",re.registerClass(Yb);var Qb=class extends No{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Za(t,e[n]);return t})}};Qb.className="Minimum",re.registerClass(Qb);var ex=class extends No{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let r of e)if(null!=r){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let a=e[r].slice();a.splice(this.axis,1);let s=!1;for(let i of n)if(w.arraysEqual(i,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return W(()=>Oy(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new V("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return W(()=>{let n=!0;if(t.forEach(s=>{null==s||(n=!1)}),n)return null;let r=[];for(let s=0;s<e.length;++s)r.push(null==t[s]?le(Zn(e[s]),"bool"):t[s].rank<e[s].rank?an(t[s],-1):t[s]);let a=at(r,this.axis);return Dh(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function yd(e,t){for(;e<0;)e+=t;return e}ex.className="Concatenate",re.registerClass(ex);var tx=class extends No{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new V(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let r,t=e[0],n=e[1];return r=Array.isArray(this.axes)?this.axes.map((a,s)=>yd(a,e[s].shape.length)):[yd(this.axes,t.shape.length),yd(this.axes,n.shape.length)],this.normalize&&(t=Ac(t,r[0]),n=Ac(n,r[1])),function DG(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ze("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ze("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return W(()=>{let i,o;if(r>a){i=r-a;let l=[];for(let u=0;u<i;++u)l.push(1);t=B(t,t.shape.concat(l))}else if(a>r){i=a-r;let l=[];for(let u=0;u<i;++u)l.push(1);e=B(e,e.shape.concat(l))}else i=0;if(o=2===e.shape.length&&2===t.shape.length?s[0]===s[1]?ge(P(e,t),s[0]):ge(P(Le(e,[1,0]),t),s[1]):Oe(e,t,s[0]!==e.shape.length-1,s[1]===t.shape.length-1),i>0){let l;l=r>a?r+a-3:r-1;let u=[];for(let p=l;p<l+i;++p)u.push(p);o=Ya(o,u)}return 1===o.shape.length&&(o=an(o,1)),o})}(t,n,r)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[yd(this.axes,e.length),yd(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};tx.className="Dot",re.registerClass(tx);var nx=class extends Be{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);return sd(()=>ee(bc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};nx.className="GaussianNoise",re.registerClass(nx);var rx=class extends Be{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);return this.rate>0&&this.rate<1?sd(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return P(n,bc(n.shape,1,r))},()=>n,t.training||!1):n})}};rx.className="GaussianDropout",re.registerClass(rx);var ax=class extends Be{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ce(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return sd(()=>{let r=Ce(e),i=-1.7580993408473766,o=xa(Xa(n),this.rate);o=Sa(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-l*i*this.rate,p=ee(P(r,o),P(ee(o,-1),i));return ee(P(p,l),u)},()=>Ce(e),t.training||!1)}return e})}};function bd(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=og(e,t,n,r,a,s);else if(3===e.rank)i=lg(e,t,n,r,a,s);else{if(4!==e.rank)throw new ze(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=ug(e,t,n,r,a,s)}return i}ax.className="AlphaDropout",re.registerClass(ax);var sx=class extends Be{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.movingMeanInitializer=xt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ht(e.betaConstraint),this.gammaConstraint=Ht(e.gammaConstraint),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer)}build(e){e=Ze(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ot({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return W(()=>{let n=null!=t.training&&t.training,r=Ce(e),a=r.shape,s=a.length,i=zr(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=bo(1,s);l[o]=a[o];let u=i.slice();u.sort();let p=!w.arraysEqual(u,zr(0,s).slice(0,s-1));if(!n)return(()=>{if(p){let g=B(this.movingMean.read(),l),y=B(this.movingVariance.read(),l),b=this.center?B(this.beta.read(),l):null,x=this.scale?B(this.gamma.read(),l):null;return bd(r,g,y,b,x,this.epsilon)}return bd(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[d,c,f]=function LG(e,t,n,r,a=.001){return w.arraysEqual(r.slice().sort(),zr(0,e.rank-1))?function MG(e,t,n,r,a=.001){return W(()=>{let s=Kp(e,r),i=s.mean,o=s.variance;return[bd(e,i,o,n,t,a),i,o]})}(e,t,n,r,a):function OG(e,t,n,r,a=.001){return W(()=>{let s=Kp(e,r),i=s.mean,o=s.variance,l=[];for(let c of zr(0,e.rank))-1!==r.indexOf(c)?l.push(1):l.push(e.shape[c]);let u=B(i,l),p=B(o,l),h=null==t?null:B(t,l),d=null==n?null:B(n,l);return[bd(e,u,p,d,h,a),i,o]})}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(g,y,b)=>{W(()=>{let x=1-b,v=g.read(),I=P(ce(v,y),x);g.write(ce(v,I))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),movingMeanInitializer:Tt(this.movingMeanInitializer),movingVarianceInitializer:Tt(this.movingVarianceInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer),betaConstraint:Gt(this.betaConstraint),gammaConstraint:Gt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};sx.className="BatchNormalization",re.registerClass(sx);var ix=class extends Be{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=Ze(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==es(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(a=>e[a]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){let n=Ce(e),r=n.shape,a=r.length;return W(()=>{let{mean:s,variance:i}=Kp(n,this.axis,!0),o=bo(1,a);for(let c of this.axis)o[c]=r[c];let l=c=>null!=c&&c.shape.length!==a?B(c,o):c,u=this.scale?l(this.gamma.read()):null,p=this.center?l(this.beta.read()):null,h=[],d=[];for(let c=0;c<a;++c)-1!==this.axis.indexOf(c)?(h.push(r[c]),d.push(1)):(h.push(1),d.push(r[c]));return s=jn(s,h),i=jn(i,h),null!=u&&(u=jn(u,d)),null!=p&&(p=jn(p,d)),bd(n,s,i,p,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};ix.className="LayerNormalization",re.registerClass(ix);var ox=class extends Be{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ot({ndim:4})]}computeOutputShape(e){let t,n;return e=Ze(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return W(()=>function zG(e,t,n){return W(()=>{if(4!==e.rank)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new V(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Or(e,r)})}(Ce(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Hc(e,t,n,r,a,s){return W(()=>{At(a),_N(s),ur(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Cb(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Jt(e,t,n,o):ya(e,t,n,o),"channelsFirst"===a&&(i=Le(i,[0,3,1,2])),i})}function P2(e,t,n,r,a,s){return W(()=>{At(a),_N(s),ur(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=R2(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Dg(e,t,n,o):ig(e,t,n,o),"channelsFirst"===a&&(i=Le(i,[0,4,1,2,3])),i})}ox.className="ZeroPadding2D",re.registerClass(ox);var B2=class extends Be{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Yt(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Yt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,ur(this.padding),this.inputSpec=[new Ot({ndim:3})]}computeOutputShape(e){let t=Gr((e=Ze(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return W(()=>{this.invokeCallHook(e,t),e=rd(Ce(e),2);let n=this.poolingFunction(Ce(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ya(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},lx=class extends B2{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return At(a),ur(r),Hc(e,t,n,r,a,"max")}};lx.className="MaxPooling1D",re.registerClass(lx);var ux=class extends B2{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return At(a),ur(r),Hc(e,t,n,r,a,"avg")}};ux.className="AveragePooling1D",re.registerClass(ux);var W2=class extends Be{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Yt(this.poolSize,"poolSize"),Yt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,At(this.dataFormat),ur(this.padding),this.inputSpec=[new Ot({ndim:4})]}computeOutputShape(e){e=Ze(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Gr(t,this.poolSize[0],this.padding,this.strides[0]),n=Gr(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},px=class extends W2{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return At(a),ur(r),Hc(e,t,n,r,a,"max")}};px.className="MaxPooling2D",re.registerClass(px);var dx=class extends W2{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return At(a),ur(r),Hc(e,t,n,r,a,"avg")}};dx.className="AveragePooling2D",re.registerClass(dx);var V2=class extends Be{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Yt(this.poolSize,"poolSize"),Yt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,At(this.dataFormat),ur(this.padding),this.inputSpec=[new Ot({ndim:5})]}computeOutputShape(e){e=Ze(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Gr(t,this.poolSize[0],this.padding,this.strides[0]),n=Gr(n,this.poolSize[1],this.padding,this.strides[1]),r=Gr(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},hx=class extends V2{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return At(a),ur(r),P2(e,t,n,r,a,"max")}};hx.className="MaxPooling3D",re.registerClass(hx);var cx=class extends V2{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return At(a),ur(r),P2(e,t,n,r,a,"avg")}};cx.className="AveragePooling3D",re.registerClass(cx);var U2=class extends Be{constructor(e){super(e),this.inputSpec=[new Ot({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ze}},fx=class extends U2{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ce(e);return Nt(n,1)})}};fx.className="GlobalAveragePooling1D",re.registerClass(fx);var mx=class extends U2{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ce(e);return ir(n,1)})}};mx.className="GlobalMaxPooling1D",re.registerClass(mx);var G2=class extends Be{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,At(this.dataFormat),this.inputSpec=[new Ot({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ze}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},gx=class extends G2{call(e,t){return W(()=>{let n=Ce(e);return Nt(n,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}};gx.className="GlobalAveragePooling2D",re.registerClass(gx);var yx=class extends G2{call(e,t){return W(()=>{let n=Ce(e);return ir(n,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}};yx.className="GlobalMaxPooling2D",re.registerClass(yx);var H2=class extends Be{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let a=Vr(t.layer,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},bx=class extends H2{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ze(e)).length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=Ze(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return W(()=>L2((n,r)=>[Ce(this.layer.call(n,t)),[]],e=Ce(e),[],!1,null,null,!1,!0)[1])}};bx.className="TimeDistributed",re.registerClass(bx);var xx=class extends H2{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Vr(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Vr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function PG(e){vo(UV,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new ze("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let n=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let n,r,a,t=this.forwardLayer.computeOutputShape(e);return Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),this.returnState&&(a=t.slice(1)),n=t[0],"concat"===this.mergeMode?(n[n.length-1]*=2,r=[n]):r=null==this.mergeMode?[n,n.slice()]:[n],this.returnState?null==this.mergeMode?r.concat(a).concat(a.slice()):[n].concat(a).concat(a.slice()):Rn(r)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=O2(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let l=n.length;if(l%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let u=n.map(p=>new Ot({shape:p.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(null!=r)throw new ze("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Wr;for(let l of s)if(l instanceof Wr!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),u=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=u;let h=super.apply(l,t);return this.inputSpec=p,h}return super.apply(e,t)}call(e,t){return W(()=>{let r,a,s,i,n=t.initialState;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=or(a,1)),"concat"===this.mergeMode?i=Oy([r,a]):"sum"===this.mergeMode?i=ee(r,a):"ave"===this.mergeMode?i=P(.5,ee(r,a)):"mul"===this.mergeMode?i=P(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),wo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Vr(t.layer);if(delete t.layer,null!=t.numConstants)throw new ze("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};xx.className="Bidirectional",re.registerClass(xx);var vx=class extends Be{constructor(e){super(e),this.scale=e.scale,this.offset=e.offset?e.offset:0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>("float32"!==(e=Ce(e)).dtype&&(e=Sa(e,"float32")),ee(P(e,this.scale),this.offset)))}};vx.className="Rescaling",re.registerClass(vx);var{resizeBilinear:WG,cropAndResize:VG}=lr,wx=class extends Be{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return W(()=>{let l,u=!1,f=[t/s,n/i,(r+t)/s,(a+n)/i],m=[];3===e.rank?(u=!0,l=Wt([e])):l=e;for(let x=0;x<l.shape[0];x++)m.push(f);let g=xn(m,[m.length,4]),y=co(0,m.length,1,"int32"),b=VG(l,g,y,[r,a],"nearest");return Sa(u?Ce($t(b)):b,o)})}upsize(e,t,n,r){return W(()=>Sa(WG(e,[t,n]),r))}call(e,t){return W(()=>{let n=Ce(e),r=n.dtype,a=n.shape,s=a[a.length-3],i=a[a.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let l=0;return i!==this.width&&(l=Math.floor((i-this.width)/2),0===l&&(l=1)),o>=0&&l>=0?this.centerCrop(n,o,l,this.height,this.width,s,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){let n=(e=Ze(e)).length-2;return e[e.length-3]=this.height,e[n]=this.width,e}};wx.className="CenterCrop",re.registerClass(wx);var kx=class extends Be{constructor(e){super(e),this.numTokens=e.numTokens,this.outputMode=e.outputMode?e.outputMode:"multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Ze(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return W(()=>{let n;if("int32"!==(e=Ce(e)).dtype&&(e=Sa(e,"int32")),typeof t.countWeights<"u"){if("count"!==this.outputMode)throw new V(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Ce(t.countWeights)}let r=ir(e),a=su(e),s=In(this.numTokens,r).bufferSync().get(0),i=xa(a,0).bufferSync().get(0);if(!s||!i)throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function UG(e,t,n,r){let a=Ce(e);if("int32"!==a.dtype&&(a=Sa(a,"int32")),"int"===t)return a;let s=a.shape;if(0===a.rank&&(a=an(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=an(a,-1)),a.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let l,i=["multiHot","oneHot"].includes(t);if(l=Ph(a,typeof r<"u"&&"count"===t?r:[],n,i),"tfIdf"!==t)return l;if(r)return P(l,r);throw new V("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}};kx.className="CategoryEncoding",re.registerClass(kx);var j2=new Set(["bilinear","nearest"]),Ix=class extends Be{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!j2.has(e.interpolation))throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){return e=Ze(e),[this.height,this.width,e[2]]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>{let n=[this.height,this.width];if("bilinear"===this.interpolation)return lr.resizeBilinear(e,n,!this.cropToAspectRatio);if("nearest"===this.interpolation)return lr.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...j2]} are supported`)})}};Ix.className="Resizing",re.registerClass(Ix);var q2=class{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}};q2.className="RandomSeed";var K2=class extends Be{constructor(e){super(e),this.randomGenerator=new q2(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};K2.className="BaseRandomLayer";var Z2=new Set(["bilinear","nearest"]),Sx=class extends K2{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new V(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new V(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new V(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Z2.has(n))throw new V(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ze(e),[this.imgHeight,-1,e[2]]}call(e,t){return W(()=>{let n=Ce(e);this.imgHeight=n.shape[n.shape.length-3];let r=n.shape[n.shape.length-2];this.widthFactor=Xa([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*r;a=Math.round(a);let s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return lr.resizeBilinear(e,s);case"nearest":return lr.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Z2]} are supported`)}})}};function jG(e){return new wu(e)}function qG(e){return new Nb(e)}function KG(e){return new kb(e)}function ZG(e){return new Ib(e)}function XG(e){return new Sb(e)}function JG(e){return new Tb(e)}function YG(e){return new _b(e)}function QG(e){return new Pc(e)}function eH(e){return new cd(e)}function tH(e){return new $b(e)}function nH(e){return new fd(e)}function rH(e){return new Ab(e)}function aH(e){return new Fb(e)}function sH(e){return new Rb(e)}function iH(e){return new Db(e)}function oH(e){return new Mb(e)}function lH(e){return new Ub(e)}function uH(e){return new Wb(e)}function pH(e){return new Gc(e)}function dH(e){return new Bb(e)}function hH(e){return new Vb(e)}function cH(e){return new Gb(e)}function fH(e){return new Hb(e)}function mH(e){return new jb(e)}function gH(e){return new Kb(e)}function yH(e){return new Zb(e)}function bH(e){return new Jb(e)}function xH(e){return new ex(e)}function vH(e){return new Yb(e)}function wH(e){return new Qb(e)}function kH(e){return new Xb(e)}function IH(e){return new tx(e)}function SH(e){return new sx(e)}function NH(e){return new ix(e)}function _H(e){return new ox(e)}function Nx(e){return new ux(e)}function TH(e){return Nx(e)}function CH(e){return Nx(e)}function _x(e){return new dx(e)}function EH(e){return _x(e)}function $H(e){return _x(e)}function Tx(e){return new cx(e)}function AH(e){return Tx(e)}function FH(e){return Tx(e)}function RH(e){return new fx(e)}function DH(e){return new gx(e)}function X2(e){return new mx(e)}function J2(e){return new yx(e)}function Y2(e){return new lx(e)}function Q2(e){return new px(e)}function MH(e){return new hx(e)}function OH(e){return new Lb(e)}function LH(e){return new Wc(e)}function zH(e){return new zb(e)}function PH(e){return new gd(e)}function BH(e){return new Ob(e)}function WH(e){return new Bc(e)}function VH(e){return new Pb(e)}function UH(e){return new Uc(e)}function GH(e){return new ia(e)}function HH(e){return new Vc(e)}function jH(e){return new xx(e)}function qH(e){return new bx(e)}Sx.className="RandomWidth",re.registerClass(Sx);var KH=X2,ZH=J2,XH=Y2,JH=Q2;function YH(e){return new nx(e)}function QH(e){return new rx(e)}function e6(e){return new ax(e)}function t6(e){return new qb(e)}function n6(e){return new vx(e)}function r6(e){return new wx(e)}function a6(e){return new Ix(e)}function s6(e){return new kx(e)}function i6(e){return new Sx(e)}var e_={};function o6(e,t){return rb(e,t)}function l6(e,t){return t2(e,t)}function u6(e,t){return n2(e,t)}function p6(e,t){return ab(e,t)}function d6(e,t){return sb(e,t)}function h6(e,t){return e2(e,t)}function c6(e,t){return function qU(e,t){return W(()=>{let n=QN(e,t),r=function HU(e,t){return W(()=>le(ge(Ir(Hn(e,1),Hn(t,0))),"float32"))}(e,t),a=ee(n,r);return le(Xt(In(a,0),fe(n,a),0),"float32")})}(e,t)}function f6(e,t){return tb(e,t)}function m6(e,t){return Fc(e,t)}function g6(e,t){return Iu(e,t)}function y6(e,t){return Iu(e,t)}function b6(e,t){return Iu(e,t)}function x6(e,t){return So(e,t)}function v6(e,t){return So(e,t)}function w6(e,t){return So(e,t)}_e(e_,{MAPE:()=>y6,MSE:()=>v6,binaryAccuracy:()=>o6,binaryCrossentropy:()=>l6,categoricalAccuracy:()=>p6,categoricalCrossentropy:()=>d6,cosineProximity:()=>f6,mape:()=>b6,meanAbsoluteError:()=>m6,meanAbsolutePercentageError:()=>g6,meanSquaredError:()=>x6,mse:()=>w6,precision:()=>h6,recall:()=>c6,sparseCategoricalAccuracy:()=>u6});var t_={};_e(t_,{modelFromJSON:()=>wG});var n_={};function k6(e){return new dd(e)}function I6(e){return function CG(e){return wb(e),new dd({l1:null!=e?e.l1:null,l2:0})}(e)}function S6(e){return function EG(e){return wb(e),new dd({l2:null!=e?e.l2:null,l1:0})}(e)}_e(n_,{l1:()=>I6,l1l2:()=>k6,l2:()=>S6});var r_=class extends ku{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Na))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function jc(e,t){return e<t}function a_(e,t){return e>t}var Tr,i_,s_=class extends r_{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ze("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?jc:"max"===this.mode||-1!==this.monitor.indexOf("acc")?a_:jc,this.monitorFunc===jc&&(this.minDelta*=-1)}onTrainBegin(e){var t=this;return(0,R.Z)(function*(){t.wait=0,t.stoppedEpoch=0,t.best=null!=t.baseline?t.baseline:t.monitorFunc===jc?1/0:-1/0})()}onEpochEnd(e,t){var n=this;return(0,R.Z)(function*(){yield rs(t);let r=n.getMonitorValue(t);null!=r&&(n.monitorFunc(r-n.minDelta,n.best)?(n.best=r,n.wait=0):(n.wait++,n.wait>=n.patience&&(n.stoppedEpoch=e,n.model.stopTraining=!0)))})()}onTrainEnd(e){var t=this;return(0,R.Z)(function*(){t.stoppedEpoch>0&&t.verbose&&console.log(`Epoch ${t.stoppedEpoch}: early stopping.`)})()}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},_6={earlyStopping:function N6(e){return new s_(e)}};H().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Tr||(Tr={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(i_||(i_={}));var Cx={};function C6(e,t){Cx[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function o_(e){return Cx[e]}function E6(e){delete Cx[e]}function k(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let o=s.inputIndexStart,l=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?o+1:s.inputIndexEnd,u=o<0?t.inputNames.length+o:o;if("tensor"===s.type)return on(t.inputNames[u],n,r,a);if("tensors"===s.type){let d=t.inputs.slice(o,l);return t.inputNames.slice(o,l).filter((c,f)=>{var m;return"NoOp"!==(null===(m=d[f])||void 0===m?void 0:m.op)}).map(c=>on(c,n,r,a))}let p=on(t.inputNames[u],n,r,a),h=p.dataSync();return"number"===s.type?h[0]:w.toNestedArray(p.shape,h)}let i=t.attrParams[e];return i&&i.value}function on(e,t,n,r){let[a,s]=Xn(e,n);if(null!=r){let o=r.getHashTableHandleByName(a);if(null!=o)return o}let i=n.currentContextIds.find(o=>!!t[qc(a,o)]);return void 0!==i?t[qc(a,i)][s]:void 0}function l_(e,t,n){return t[qc(e,n.currentContextId)]}function _a(e,t){let[n,r,a]=Xn(e,t);return[qc(n,t&&t.currentContextId),r,a]}function qc(e,t){return t?`${e}-${t}`:e}function Xn(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let s=t.parseNodeNameCache.get(e);if(null!=s)return s}let a,r=e.split(":");if(1===r.length)a=[e,0,void 0];else{let i=3===r.length?r[1]:void 0;a=[r[0],Number(r[r.length-1]),i]}return n&&t.parseNodeNameCache.set(e,a),a}function Kc(e,t,n){let r=k("pad",e,t,n);if("explicit"===r){r=k("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=r[2*s],a[s][1]=r[2*s+1];return a}return r}function Ta(e){return e.kept?e:Zr(e)}var u_={};_e(u_,{json:()=>$6});var $6=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],p_={};_e(p_,{json:()=>A6});var A6=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],d_={};_e(d_,{json:()=>F6});var F6=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],h_={};_e(h_,{json:()=>R6});var R6=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],c_={};_e(c_,{json:()=>D6});var D6=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],f_={};_e(f_,{json:()=>M6});var M6=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],m_={};_e(m_,{json:()=>O6});var O6=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],g_={};_e(g_,{json:()=>L6});var L6=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],y_={};_e(y_,{json:()=>z6});var z6=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],b_={};_e(b_,{json:()=>P6});var P6=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],x_={};_e(x_,{json:()=>B6});var B6=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],v_={};_e(v_,{json:()=>W6});var W6=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],w_={};_e(w_,{json:()=>V6});var V6=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],k_={};_e(k_,{json:()=>U6});var U6=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],I_={};_e(I_,{json:()=>G6});var G6=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],S_={};_e(S_,{json:()=>H6});var H6=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],N_={};_e(N_,{json:()=>j6});var j6=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],__={};_e(__,{json:()=>q6});var q6=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],T_={};_e(T_,{json:()=>K6});var K6=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],C_=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[].concat(...[u_,p_,d_,h_,c_,f_,m_,g_,y_,b_,x_,v_,w_,k_,I_,S_,N_,__,T_].map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let r=[],a=[],s=[],i=e.node.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(f[m.name]):"Const"===m.op?a.push(f[m.name]):(null==m.input||0===m.input.length)&&s.push(f[m.name]),f),{}),o=[],l=[],u={},p={};null!=t&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(f=>{let m=i[f];m.inputNames.forEach((g,y)=>{let[b,,x]=_a(g),v=i[b];if(null!=v.outputs){let I=v.outputs.indexOf(x);-1!==I&&(m.inputNames[y]=`${b}:${I}`)}m.inputs.push(v),v.children.push(m)})}),0===Object.keys(p).length?h.forEach(f=>{let m=i[f];0===m.children.length&&l.push(m)}):Object.keys(p).forEach(f=>{let[m]=_a(f),g=i[m];null!=g&&(g.signatureKey=p[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=_a(f),g=i[m];g&&(g.signatureKey=u[f],o.push(g))}):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=o_(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((r,a)=>{let i,s=a.type;switch(a.type){case"string":i=Ex(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=Ex(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=Lx(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=Lx(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=Ax(e.attr,a.tfName,a.defaultValue||0),void 0===i&&a.tfDeprecatedName&&(i=Ax(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=Ox(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=Ox(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=$x(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=$x(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Px(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=Px(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=Mx(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=Mx(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=zx(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=zx(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=Rx(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=Rx(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Dx(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=Dx(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=$_(e.attr,a.tfName,a.defaultValue),void 0===i&&a.tfDeprecatedName&&(i=$_(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:s},r},{})),n}mapFunction(e){let t=e.nodeDef,r=[],a={};null!=t&&(a=t.reduce((u,p)=>(u[p.name]=this.mapNode(p),"Const"===p.op&&r.push(u[p.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[p]=_a(u.name),h={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Fx(u.type),type:"dtype"}},children:[]};h.signatureKey=u.name,s.push(h),a[p]=h}),Object.keys(a).forEach(u=>{let p=a[u];p.inputNames.forEach((h,d)=>{let[c,,f]=_a(h),m=a[c];if(null!=m.outputs){let g=m.outputs.indexOf(f);-1!==g&&(p.inputNames[d]=`${c}:${g}`)}p.inputs.push(m),m.children.push(p)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[p,h]=_a(o[u.name]),d=a[p];null!=d&&(d.defaultOutput=h,i.push(d))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:[],signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function E_(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function Z6(e){let t=H().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Ex(e,t,n,r=!1){let a=e[t];return null!=a?E_(a.s,r):n}function $x(e,t,n){let r=e[t];return r?r.b:n}function Ax(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Fx(e){switch("string"==typeof e&&(e=Tr[e]),e){case Tr.DT_FLOAT:case Tr.DT_HALF:return"float32";case Tr.DT_INT32:case Tr.DT_INT64:case Tr.DT_INT8:case Tr.DT_UINT8:return"int32";case Tr.DT_BOOL:return"bool";case Tr.DT_DOUBLE:return"float32";case Tr.DT_STRING:return"string";default:return null}}function $_(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function Rx(e,t,n){let r=e[t];return r&&r.type?Fx(r.type):n}function Dx(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(a=>Fx(a)):n}function A_(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function Mx(e,t,n){let r=e[t];return r&&r.shape?A_(r.shape):n}function Ox(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(a=>"number"==typeof a?a:parseInt(a,10)):n}function Lx(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>E_(s,r)):n}function zx(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(a=>A_(a)):n}function Px(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var Qt={};function Cr(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];w.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function F_(e){return!("number"==typeof e||e.some(t=>t<0))}function xd(e,t,n){let r=Bx(e,n),a=!F_(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(s=>{r=Bx(s.shape,r)}),!F_(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Bx(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}_e(Qt,{OP_SCOPE_SUFFIX:()=>Rm,abs:()=>Dt,acos:()=>Xm,acosh:()=>Jm,add:()=>ee,addN:()=>xI,all:()=>Dh,any:()=>Lp,argMax:()=>ro,argMin:()=>Ym,asin:()=>Qm,asinh:()=>eg,atan:()=>tg,atan2:()=>ng,atanh:()=>rg,avgPool:()=>ya,avgPool3d:()=>ig,basicLSTMCell:()=>II,batchNorm:()=>io,batchNorm2d:()=>og,batchNorm3d:()=>lg,batchNorm4d:()=>ug,batchToSpaceND:()=>Wp,bincount:()=>pg,bitwiseAnd:()=>SI,booleanMaskAsync:()=>fS,broadcastArgs:()=>NI,broadcastTo:()=>oo,buffer:()=>Me,cast:()=>le,ceil:()=>dg,clipByValue:()=>hn,clone:()=>Zr,complex:()=>ma,concat:()=>at,concat1d:()=>hg,concat2d:()=>cg,concat3d:()=>fg,concat4d:()=>mg,conv1d:()=>Mh,conv2d:()=>wn,conv2dTranspose:()=>Oh,conv3d:()=>yg,conv3dTranspose:()=>bg,cos:()=>Vp,cosh:()=>Lh,cosineWindow:()=>lc,cumprod:()=>Up,cumsum:()=>zh,denseBincount:()=>Ph,depthToSpace:()=>xg,depthwiseConv2d:()=>lo,diag:()=>TI,dilation2d:()=>vg,div:()=>fe,divNoNan:()=>wg,dot:()=>kg,dropout:()=>ry,einsum:()=>EI,elu:()=>au,enclosingPowerOfTwo:()=>ay,ensureShape:()=>$I,equal:()=>Hn,erf:()=>Ig,euclideanNorm:()=>_g,exp:()=>kn,expandDims:()=>an,expm1:()=>Tg,eye:()=>Bh,fft:()=>Yp,fill:()=>Gn,floor:()=>ou,floorDiv:()=>Rh,fused:()=>gu,gather:()=>lu,gatherND:()=>bS,greater:()=>In,greaterEqual:()=>xa,ifft:()=>mu,imag:()=>Gp,image:()=>lr,inTopKAsync:()=>xS,irfft:()=>tc,isFinite:()=>Cg,isInf:()=>Eg,isNaN:()=>$g,leakyRelu:()=>Hp,less:()=>uu,lessEqual:()=>Ka,linalg:()=>dy,linspace:()=>MI,localResponseNormalization:()=>Ag,log:()=>qn,log1p:()=>jp,logSigmoid:()=>Fg,logSoftmax:()=>Vh,logSumExp:()=>Uh,logicalAnd:()=>Ir,logicalNot:()=>qp,logicalOr:()=>Gh,logicalXor:()=>Rg,losses:()=>RS,lowerBound:()=>LI,matMul:()=>Oe,max:()=>ir,maxPool:()=>Jt,maxPool3d:()=>Dg,maxPoolWithArgmax:()=>zI,maximum:()=>Yr,mean:()=>Nt,meshgrid:()=>PI,min:()=>su,minimum:()=>Za,mirrorPad:()=>Mg,mod:()=>Og,moments:()=>Kp,movingAverage:()=>mS,mul:()=>P,multiRNNCell:()=>BI,multinomial:()=>WI,neg:()=>ft,norm:()=>iu,notEqual:()=>ho,oneHot:()=>pu,ones:()=>Kn,onesLike:()=>Zn,op:()=>z,outerProduct:()=>VI,pad:()=>Or,pad1d:()=>UI,pad2d:()=>GI,pad3d:()=>HI,pad4d:()=>jI,pool:()=>Lg,pow:()=>ba,prelu:()=>Xp,print:()=>Km,prod:()=>zg,raggedGather:()=>qI,raggedRange:()=>KI,raggedTensorToTensor:()=>ZI,rand:()=>XI,randomGamma:()=>eS,randomNormal:()=>qh,randomStandardNormal:()=>tS,randomUniform:()=>Xa,randomUniformInt:()=>nS,range:()=>co,real:()=>du,reciprocal:()=>Hg,relu:()=>tt,relu6:()=>Kh,reshape:()=>B,reverse:()=>or,reverse1d:()=>rS,reverse2d:()=>aS,reverse3d:()=>sS,reverse4d:()=>iS,rfft:()=>Qp,round:()=>Zh,rsqrt:()=>Xh,scalar:()=>we,scatterND:()=>gS,searchSorted:()=>jh,selu:()=>Jh,separableConv2d:()=>hu,setdiff1dAsync:()=>oS,sigmoid:()=>kr,sign:()=>qg,signal:()=>FS,sin:()=>Yh,sinh:()=>Qh,slice:()=>Ve,slice1d:()=>Jp,slice2d:()=>ec,slice3d:()=>cu,slice4d:()=>fu,softmax:()=>Ja,softplus:()=>po,spaceToBatchND:()=>Zp,sparse:()=>DS,sparseToDense:()=>yS,spectral:()=>AS,split:()=>Fn,sqrt:()=>rn,square:()=>it,squaredDifference:()=>nc,squeeze:()=>Ya,stack:()=>Wt,step:()=>fo,stridedSlice:()=>Kg,string:()=>MS,sub:()=>ce,sum:()=>ge,tan:()=>Zg,tanh:()=>so,tensor:()=>xn,tensor1d:()=>nt,tensor2d:()=>Qr,tensor3d:()=>rc,tensor4d:()=>Qa,tensor5d:()=>lS,tensor6d:()=>uS,tensorScatterUpdate:()=>dS,tile:()=>jn,topk:()=>Jg,transpose:()=>Le,truncatedNormal:()=>ic,unique:()=>Yg,unsortedSegmentSum:()=>oc,unstack:()=>$t,upperBound:()=>hS,variable:()=>Qg,where:()=>Xt,whereAsync:()=>ty,zeros:()=>_t,zerosLike:()=>He});var _u=class{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e?.forEach(a=>{if(n!==a.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${a.dtype}`);Cr(t,a.shape,"TensorList shape mismatch: "),Bt(a)}),this.idTensor=we(0),this.maxNumElements=r,Bt(this.idTensor)}copy(){return new _u([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Cr(e,this.elementShape,"TensorList shape mismatch: ");let r=xd(this.elementShape,this.tensors,e);return W(()=>{let a=this.tensors.map(s=>B(s,r));return Wt(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=xd(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Cr(r.shape,e,"TensorList shape mismatch: "),B(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Cr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Bt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new _u([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Cr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=xd(this.elementShape,this.tensors,t);return B(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Cr(this.elementShape,t.shape,"TensorList shape mismatch: "),Bt(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Cr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=xd(this.elementShape,this.tensors,n);return 0===e.length?xn([],[0].concat(r)):W(()=>{let a=e.map(s=>B(this.tensors[s],r));return Wt(a,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Cr(this.elementShape,t,"TensorList shape mismatch: ");let n=xd(this.elementShape,this.tensors,t);return 0===this.size()?xn([],[0].concat(n)):W(()=>{let r=this.tensors.map(a=>B(a,n));return at(r,0)})}},aj=function(){var e=(0,R.Z)(function*(t,n,r){switch(t.op){case"If":case"StatelessIf":{let a=k("thenBranch",t,n,r),s=k("elseBranch",t,n,r),i=k("cond",t,n,r),o=k("args",t,n,r);return(yield i.data())[0]?r.functionMap[a].executeFunctionAsync(o,r.tensorArrayMap,r.tensorListMap):r.functionMap[s].executeFunctionAsync(o,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{let a=k("body",t,n,r),s=k("cond",t,n,r),i=k("args",t,n,r),o=yield r.functionMap[s].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap),l=i.map(h=>h.id),u=yield o[0].data();o.forEach(h=>{!h.kept&&-1===l.indexOf(h.id)&&h.dispose()});let p=i;for(;u[0];){let h=p;p=yield r.functionMap[a].executeFunctionAsync(p,r.tensorArrayMap,r.tensorListMap);let d=p.map(f=>f.id);h.forEach(f=>{!f.kept&&-1===l.indexOf(f.id)&&-1===d.indexOf(f.id)&&f.dispose()});let c=yield r.functionMap[s].executeFunctionAsync(p,r.tensorArrayMap,r.tensorListMap);u=yield c[0].data(),c.forEach(f=>{!f.kept&&-1===l.indexOf(f.id)&&-1===d.indexOf(f.id)&&f.dispose()})}return p}case"LoopCond":return[Ta(k("pred",t,n,r))];case"Switch":{let a=k("pred",t,n,r),s=k("data",t,n,r);return s.kept||(s=Ta(s)),(yield a.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{let a=t.inputNames.find(s=>void 0!==on(s,n,r));return a?[Ta(on(a,n,r))]:void 0}case"Enter":{let a=k("frameName",t,n,r),s=k("tensor",t,n,r);return r.enterFrame(a),[Ta(s)]}case"Exit":{let a=k("tensor",t,n,r);return r.exitFrame(),[Ta(a)]}case"NextIteration":{let a=k("tensor",t,n,r);return r.nextIteration(),[Ta(a)]}case"TensorArrayV3":{let a=k("size",t,n,r),s=k("dtype",t,n,r),i=k("elementShape",t,n,r),o=k("dynamicSize",t,n,r),l=k("clearAfterRead",t,n,r),u=k("identicalElementShapes",t,n,r),p=k("name",t,n,r),h=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=we(0),Bt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),Cr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Bt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(0===e.length)return xn([],[0].concat(this.elementShape));let n=this.readMany(e);return Cr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Wt(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return xn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return Cr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),at(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,$t(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];W(()=>{t=B(t,[1,n,a]);for(let o=0;o<e.length;++o)s[o]=B(Ve(t,[0,0===o?0:r[o-1],0],[1,e[o],a]),this.elementShape);return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}}(p,s,a,i,u,o,l);return r.addTensorArray(h),[h.idTensor,we(1)]}case"TensorArrayWriteV3":{let a=k("tensorArrayId",t,n,r),s=k("index",t,n,r),i=k("tensor",t,n,r),o=r.getTensorArray(a.id);return o.write(s,i),[o.idTensor]}case"TensorArrayReadV3":{let a=k("tensorArrayId",t,n,r),s=k("index",t,n,r);return[r.getTensorArray(a.id).read(s)]}case"TensorArrayGatherV3":{let a=k("tensorArrayId",t,n,r),s=k("indices",t,n,r),i=k("dtype",t,n,r);return[r.getTensorArray(a.id).gather(s,i)]}case"TensorArrayScatterV3":{let a=k("tensorArrayId",t,n,r),s=k("indices",t,n,r),i=k("tensor",t,n,r),o=r.getTensorArray(a.id);return o.scatter(s,i),[o.idTensor]}case"TensorArrayConcatV3":{let a=k("tensorArrayId",t,n,r),s=r.getTensorArray(a.id),i=k("dtype",t,n,r);return[s.concat(i)]}case"TensorArraySplitV3":{let a=k("tensorArrayId",t,n,r),s=k("tensor",t,n,r),i=k("lengths",t,n,r),o=r.getTensorArray(a.id);return o.split(i,s),[o.idTensor]}case"TensorArraySizeV3":{let a=k("tensorArrayId",t,n,r);return[we(r.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{let a=k("tensorArrayId",t,n,r),s=r.getTensorArray(a.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{let a=k("tensorListId",t,n,r),s=k("index",t,n,r),i=k("tensor",t,n,r),o=r.getTensorList(a.id);return o.setItem(s,i),[o.idTensor]}case"TensorListGetItem":{let a=k("tensorListId",t,n,r),s=k("index",t,n,r),i=k("elementShape",t,n,r),o=k("elementDType",t,n,r);return[r.getTensorList(a.id).getItem(s,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{let a=k("indices",t,n,r),l=function nj(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new _u([],n,e.dtype,r),i=$t(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}(k("tensor",t,n,r),a,k("elementShape",t,n,r),k("numElements",t,n,r));return r.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let i,a=k("elementShape",t,n,r),s=k("elementDType",t,n,r);i="TensorListReserve"===t.op?"numElements":"maxNumElements";let o=k(i,t,n,r),u=function tj(e,t,n,r){return new _u([],e,t,r)}(a,s,0,"TensorListReserve"===t.op?-1:o);return r.addTensorList(u),[u.idTensor]}case"TensorListGather":{let a=k("tensorListId",t,n,r),s=k("indices",t,n,r),i=k("elementShape",t,n,r),o=k("elementDType",t,n,r);return[r.getTensorList(a.id).gather(s,o,i)]}case"TensorListStack":{let a=k("tensorListId",t,n,r),s=k("elementShape",t,n,r),i=k("elementDType",t,n,r),o=k("numElements",t,n,r);return[r.getTensorList(a.id).stack(s,i,o)]}case"TensorListFromTensor":{let o=function ej(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Cr(e.shape.slice(1),t,"TensorList shape mismatch: ");let s=$t(e);return new _u(s,t,r)}(k("tensor",t,n,r),k("elementShape",t,n,r),k("elementDType",t,n,r));return r.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let a=k("tensorListId",t,n,r),s=r.getTensorList(a.id),i=k("dtype",t,n,r),o=k("elementShape",t,n,r);return[s.concat(i,o)]}case"TensorListPushBack":{let a=k("tensorListId",t,n,r),s=k("tensor",t,n,r),i=r.getTensorList(a.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{let a=k("tensorListId",t,n,r),s=k("elementShape",t,n,r),i=k("elementDType",t,n,r);return[r.getTensorList(a.id).popBack(s,i)]}case"TensorListSplit":{let a=k("tensor",t,n,r),s=k("elementShape",t,n,r),o=function rj(e,t,n){let r=0,a=t.map(p=>(r+=p,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let i=Bx(e.shape.slice(1),n),o=0===r?0:e.size/r,l=W(()=>{let p=[];e=B(e,[1,r,o]);for(let h=0;h<t.length;++h)p[h]=B(Ve(e,[0,0===h?0:a[h-1],0],[1,t[h],o]),i);return e.dispose(),p}),u=new _u([],n,e.dtype,t.length);for(let p=0;p<l.length;p++)u.setItem(p,l[p]);return u}(a,k("lengths",t,n,r),s);return r.addTensorList(o),[o.idTensor]}case"TensorListLength":{let a=k("tensorListId",t,n,r);return[we(r.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{let a=k("tensorListId",t,n,r),s=k("size",t,n,r),i=r.getTensorList(a.id).resize(s);return r.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(n,r,a){return e.apply(this,arguments)}}();function R_(e,t,n){let[r,a]=k("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=k("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=k("strides",e,t,n),h=Kc(e,t,n),d=k("dataFormat",e,t,n).toUpperCase(),c=k("dilations",e,t,n),[f,m]=k("args",e,t,n);return i&&(m=f,f=void 0),{stride:p,pad:h,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:k("leakyreluAlpha",e,t,n)}}function Wx(e,t,n){return{boxes:k("boxes",e,t,n),scores:k("scores",e,t,n),maxOutputSize:k("maxOutputSize",e,t,n),iouThreshold:k("iouThreshold",e,t,n),scoreThreshold:k("scoreThreshold",e,t,n),softNmsSigma:k("softNmsSigma",e,t,n)}}var oj=function(){var e=(0,R.Z)(function*(t,n,r,a,s=Qt){switch(t.op){case"NonMaxSuppressionV5":{let{boxes:i,scores:o,maxOutputSize:l,iouThreshold:u,scoreThreshold:p,softNmsSigma:h}=Wx(t,n,r),d=yield s.image.nonMaxSuppressionWithScoreAsync(i,o,l,u,p,h);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:i,scores:o,maxOutputSize:l,iouThreshold:u,scoreThreshold:p}=Wx(t,n,r),h=k("padToMaxOutputSize",t,n,r),d=yield s.image.nonMaxSuppressionPaddedAsync(i,o,l,u,p,h);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:i,scores:o,maxOutputSize:l,iouThreshold:u,scoreThreshold:p}=Wx(t,n,r);return[yield s.image.nonMaxSuppressionAsync(i,o,l,u,p)]}case"Where":{let i=s.cast(k("condition",t,n,r),"bool"),o=[yield s.whereAsync(i)];return i.dispose(),o}case"ListDiff":return s.setdiff1dAsync(k("x",t,n,r),k("y",t,n,r));default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(n,r,a,s){return e.apply(this,arguments)}}(),dj=function(){var e=(0,R.Z)(function*(t,n,r,a){switch(t.op){case"HashTable":case"HashTableV2":{let s=a.getHashTableHandleByName(t.name);if(null!=s)return[s];{let i=k("keyDType",t,n,r),o=k("valueDType",t,n,r),l=new class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=we(0),this.tensorMap=new Map,Bt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}import(e,t){var n=this;return(0,R.Z)(function*(){n.checkKeyAndValueTensor(e,t);let r=yield e.data();return n.tensorMap.forEach(a=>a.dispose()),n.tensorMap.clear(),W(()=>{let a=$t(t),s=r.length,i=a.length;w.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let o=0;o<s;o++){let l=r[o],u=a[o];Bt(u),n.tensorMap.set(l,u)}return n.handle})})()}find(e,t){var n=this;return(0,R.Z)(function*(){n.checkKeyAndValueTensor(e,t);let r=yield e.data();return W(()=>{let a=[];for(let s=0;s<r.length;s++){let o=n.findWithDefault(r[s],t);a.push(o)}return Wt(a)})})()}findWithDefault(e,t){return this.tensorMap.get(e)??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(i,o);return a.addHashTable(t.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let s=k("tableHandle",t,n,r,a),i=k("keys",t,n,r),o=k("values",t,n,r);return[yield a.getHashTableById(s.id).import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{let s=k("tableHandle",t,n,r,a),i=k("keys",t,n,r),o=k("defaultValue",t,n,r);return[yield a.getHashTableById(s.id).find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let s=k("tableHandle",t,n,r,a);return[a.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}});return function(n,r,a,s){return e.apply(this,arguments)}}();function D_(e,t,n,r,a=W){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[r.addN(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[r.mul(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[r.div(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[r.divNoNan(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[r.floorDiv(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[r.sub(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[r.minimum(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[r.maximum(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[r.pow(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"basic_math":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(k("x",e,t,n))];case"Acos":return[r.acos(k("x",e,t,n))];case"Acosh":return[r.acosh(k("x",e,t,n))];case"Asin":return[r.asin(k("x",e,t,n))];case"Asinh":return[r.asinh(k("x",e,t,n))];case"Atan":return[r.atan(k("x",e,t,n))];case"Atan2":return[r.atan2(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[r.atanh(k("x",e,t,n))];case"Ceil":return[r.ceil(k("x",e,t,n))];case"Complex":return[r.complex(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[r.cos(k("x",e,t,n))];case"Cosh":return[r.cosh(k("x",e,t,n))];case"Elu":return[r.elu(k("x",e,t,n))];case"Erf":return[r.erf(k("x",e,t,n))];case"Exp":return[r.exp(k("x",e,t,n))];case"Expm1":return[r.expm1(k("x",e,t,n))];case"Floor":return[r.floor(k("x",e,t,n))];case"Log":return[r.log(k("x",e,t,n))];case"Log1p":return[r.log1p(k("x",e,t,n))];case"Imag":return[r.imag(k("x",e,t,n))];case"Neg":return[r.neg(k("x",e,t,n))];case"Reciprocal":return[r.reciprocal(k("x",e,t,n))];case"Real":return[r.real(k("x",e,t,n))];case"Relu":return[r.relu(k("x",e,t,n))];case"Round":return[r.round(k("x",e,t,n))];case"Selu":return[r.selu(k("x",e,t,n))];case"Sigmoid":return[r.sigmoid(k("x",e,t,n))];case"Sin":return[r.sin(k("x",e,t,n))];case"Sign":return[r.sign(k("x",e,t,n))];case"Sinh":return[r.sinh(k("x",e,t,n))];case"Softplus":return[r.softplus(k("x",e,t,n))];case"Sqrt":return[r.sqrt(k("x",e,t,n))];case"Square":return[r.square(k("x",e,t,n))];case"Tanh":return[r.tanh(k("x",e,t,n))];case"Tan":return[r.tan(k("x",e,t,n))];case"ClipByValue":return[r.clipByValue(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(k("x",e,t,n))];case"Rsqrt":return[r.rsqrt(on(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[r.prelu(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[r.isNaN(on(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(on(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(on(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"control":return aj(i,o,l);case"convolution":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[r.conv1d(k("x",e,t,n),k("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,n),s=Kc(e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv2d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=R_(e,t,n);return[r.fused.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=R_(e,t,n);return[r.fused.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,n),s=k("strides",e,t,n),i=Kc(e,t,n);return[r.conv2dTranspose(k("x",e,t,n),k("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,n),s=Kc(e,t,n),i=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(k("input",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv3d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dilations",e,t,n),o=a[1],l=a[2],u=i[1],p=i[2];return[r.dilation2d(k("x",e,t,n),k("filter",e,t,n),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"creation":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,n),s=k("dtype",e,t,n),i=k("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,n),s=k("numSamples",e,t,n),i=k("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,n),s=k("depth",e,t,n),i=k("onValue",e,t,n),o=k("offValue",e,t,n),l=k("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[r.onesLike(k("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(k("shape",e,t,n),k("dtype",e,t,n),k("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("seed",e,t,n))];case"Range":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("step",e,t,n);return[r.range(a,s,i,k("dtype",e,t,n))]}case"TruncatedNormal":{let a=k("shape",e,t,n),s=k("mean",e,t,n),i=k("stdDev",e,t,n),o=k("seed",e,t,n);return[r.truncatedNormal(a,s,i,k("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"dynamic":return oj(i,o,l);case"evaluation":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,n),s=k("k",e,t,n),i=k("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,n),s=k("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"image":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,n),s=k("boxes",e,t,n),i=k("boxInd",e,t,n),o=k("cropSize",e,t,n),l=k("method",e,t,n),u=k("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,n),s=k("transforms",e,t,n),i=k("outputShape",e,t,n),o=k("fillValue",e,t,n),l=k("interpolation",e,t,n),u=k("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"graph":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,n);return[on(e.name,t,n)||a];case"Placeholder":return[on(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Ta(k("x",e,t,n))];case"IdentityN":return k("x",e,t,n).map(p=>Ta(p));case"Shape":return[r.tensor1d(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(p=>r.tensor1d(p.shape));case"Size":return[r.scalar(k("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(k("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=k("x",e,t,n),o=k("data",e,t,n),l=k("message",e,t,n),u=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let p=0;p<o.length;p++)console.log(Array.prototype.slice.call(o[p].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"logical":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"Equal":return[r.equal(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[r.notEqual(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[r.greater(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(k("a",e,t,n),k("b",e,t,n))];case"Less":return[r.less(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[r.lessEqual(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[r.logicalNot(k("a",e,t,n))];case"LogicalOr":return[r.logicalOr(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[r.where(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"matrices":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[r.einsum(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[r.transpose(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=k("numArgs",e,t,n),u=k("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,h]=k("args",e,t,n);return[r.fused.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:p,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(k("a",e,t,n),k("numLower",e,t,n),k("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"normalization":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(k("x",e,t,n),k("axis",e,t,n),k("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[r.softmax(k("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"ragged":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(k("paramsNestedSplits",e,t,n),k("paramsDenseValues",e,t,n),k("indices",e,t,n),k("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(k("starts",e,t,n),k("limits",e,t,n),k("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(k("shape",e,t,n),k("values",e,t,n),k("defaultValue",e,t,n),k("rowPartitionTensors",e,t,n),k("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"reduction":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.max(k("x",e,t,n),o,l)]}case"Mean":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.mean(k("x",e,t,n),o,l)]}case"Min":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.min(k("x",e,t,n),o,l)]}case"Sum":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.sum(k("x",e,t,n),o,l)]}case"All":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.all(k("x",e,t,n),o,l)]}case"Any":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.any(k("x",e,t,n),o,l)]}case"ArgMax":{let o=k("axis",e,t,n);return[r.argMax(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[r.argMin(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.prod(k("x",e,t,n),o,l)]}case"Cumprod":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumprod(k("x",e,t,n),o,l,u)]}case"Cumsum":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),u=k("reverse",e,t,n);return[r.cumsum(k("x",e,t,n),o,l,u)]}case"Bincount":let a=k("x",e,t,n),s=k("weights",e,t,n),i=k("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,n),l=k("weights",e,t,n),u=k("size",e,t,n),p=k("binaryOutput",e,t,n);return[r.denseBincount(o,l,u,p)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"slice_join":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,n),s=k("axis",e,t,n),i=k("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,n),s=k("batchDims",e,t,n),i=k("x",e,t,n),o=k("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,n),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,n),s=k("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,n),s=k("size",e,t,n);return[r.slice(k("x",e,t,n),a,s)]}case"StridedSlice":{let a=k("begin",e,t,n),s=k("end",e,t,n),i=k("strides",e,t,n),o=k("beginMask",e,t,n),l=k("endMask",e,t,n),u=k("ellipsisMask",e,t,n),p=k("newAxisMask",e,t,n),h=k("shrinkAxisMask",e,t,n),d=k("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,p,h)]}case"Pack":return W(()=>{let a=k("axis",e,t,n),s=k("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(u=>{let p=w.arraysEqual(u.shape,i);if(!p&&!w.arraysEqual(r.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return p?u:r.reshape(u,i)});return[r.stack(l,a)]});case"Unpack":{let a=k("axis",e,t,n),s=k("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=k("reps",e,t,n);return[r.tile(k("x",e,t,n),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),i=k("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),i=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"sparse":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"spectral":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"FFT":return[r.fft(k("x",e,t,n))];case"IFFT":return[r.ifft(k("x",e,t,n))];case"RFFT":return[r.rfft(k("x",e,t,n))];case"IRFFT":return[r.irfft(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"string":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(k("input",e,t,n),k("pattern",e,t,n),k("rewrite",e,t,n),k("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"transformation":return a(()=>((e,t,n,r=Qt)=>{switch(e.op){case"Cast":return[r.cast(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let a=k("axis",e,t,n);return[r.expandDims(k("x",e,t,n),a)]}case"Squeeze":{let a=k("axis",e,t,n);return[r.squeeze(k("x",e,t,n),a)]}case"Reshape":return[r.reshape(k("x",e,t,n),k("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let a=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[r.spaceToBatchND(k("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,n),s=k("crops",e,t,n);return[r.batchToSpaceND(k("x",e,t,n),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(k("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(i,o,l));case"hash_table":return dj(i,o,l,r);case"custom":let u=o_(i.op);if(u&&u.customExecutor)return u.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return on(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return on(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Ax(this.node.rawAttrs,e,t);if(null!=n.s)return Ex(this.node.rawAttrs,e,t);if(null!=n.b)return $x(this.node.rawAttrs,e,t);if(null!=n.shape)return Mx(this.node.rawAttrs,e,t);if(null!=n.type)return Rx(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Ox(this.node.rawAttrs,e,t);if(null!=n.list.s)return Lx(this.node.rawAttrs,e,t);if(null!=n.list.shape)return zx(this.node.rawAttrs,e,t);if(null!=n.list.b)return Px(this.node.rawAttrs,e,t);if(null!=n.list.type)return Dx(this.node.rawAttrs,e,t)}return t}}(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var M_=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function O_(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(d=>Xn(d)[0]));r=r||[];let p=new Set(r.map(d=>Xn(d.name)[0])),h=[...t];for(;h.length>0;){let d=h.pop();if((_o(d)||$j(d)||Aj(d))&&null==i&&(i=d,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(d.name),null==n[d.name]&&!u.has(d.name)&&!p.has(d.name)){if(0===d.inputs.length){s.push(d.name);continue}d.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),h.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var Zc=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}},Tj=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Cj=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Ej=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function _o(e){return Tj.has(e.op)}function $j(e){return Cj.has(e.op)}function Aj(e){return Ej.has(e.op)}var Vx=class{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Vx(e.functions[n],this)})}getCompilationKey(e,t){let n=e.map(a=>a.name).sort(),r=t.map(a=>a.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=O_(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let l=t.map(p=>p.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${u}]. Missing the following inputs: [${r}]`)}let i=function Ij(e,t){let{usedNodes:n,inputs:r}=t,i=g=>n.has("string"==typeof g?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let l=o([...Object.keys(r).map(g=>Xn(g)[0]).map(g=>e.nodes[g]),...e.weights,...e.initNodes||[]]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),p=new Map(u.map(g=>[g.name,g])),h={};for(let g of u){h[g.name]=h[g.name]||0;for(let y of g.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}let d=Object.entries(h).filter(([,g])=>0===g).map(([g])=>g),c=[...d];for(;d.length>0;){let g=d.pop(),y=p.get(g);for(let b of y.children.filter(i))0==--h[b.name]&&(c.push(b.name),d.push(b.name))}let m=function Sj(e,t){let n=new Map(e.map(s=>[s.name,s])),r=t.map(s=>s.name),a=new Set(r);for(;r.length>0;){let s=r.pop(),i=n.get(s);for(let o of i.children)!n.has(o.name)||a.has(o.name)||(a.add(o.name),r.push(o.name))}return e.filter(s=>a.has(s.name))}(c.map(g=>p.get(g)),l);return function Nj(e,t){let n=new Map(e.map((o,l)=>[o.name,l])),r=new Set(t.map(o=>o.name)),a=o=>r.has("string"==typeof o?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has("string"==typeof o?o:o.name);for(let o of e){for(let l of o.children.filter(i)){if(!n.has(l.name))throw new Zc(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new Zc(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(let l of o.inputs){if(!n.has(l.name))throw new Zc(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new Zc(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}(m,l),m}(this.graph,n),o=function _j(e){let t=new Map(e.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,r=e.map((o,l)=>_o(o)?n:l),a=o=>r[t.get(o.name)]??-1,s=e.map((o,l)=>o.children.map(a).reduce((u,p)=>Math.max(u,p),r[l])),i=new Map;for(let o=0;o<e.length;++o){let l=s[o];if(l===n)continue;let u=e[o],p=e[l];i.has(p.name)||i.set(p.name,[]),i.get(p.name).push(u)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return Bt(t),t}cloneTensorList(e){return e?e.map(t=>this.cloneAndKeepTensor(t)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,n])=>[t,this.cloneTensorList(n)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(h=>this.graph.nodes[Xn(h)[0]]),a=t.map(h=>Xn(h)[0]),s=new Set(a),i=a.map(h=>this.graph.nodes[h]);0===i.length&&(i=this._outputs);let o=this.getCompilationKey(r,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let u={},p={};return W(()=>{let h=new M_(this.weightMap,u,p,this.functionExecutorMap,this.parseNodeNameCache),d=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{let[y,b]=Xn(g,h),x=[];x[b]=e[g],d[y]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(x))});let c=this.getFrozenTensorIds(d),{orderedNodes:f,nodeLiveUntilMap:m}=l;for(let g of f){if(d[g.name])continue;let y=D_(g,d,h,this._resourceManager);if(w.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);d[g.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(y)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,d,h,c,s,m.get(g.name))}return null==this.parent&&h.dispose(c),t.map(g=>on(g,d,h))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){if(!_o(t)&&!s.has(e)){for(let o of n[e])null!=o&&(i[o.id]=(i[o.id]||0)+t.children.length);for(let o of t.inputs){if(_o(o))continue;let l=l_(o.name,n,r);if(null!=l)for(let u of l){if(!u||u.kept||a.has(u.id))continue;let p=i[u.id];1===p?(u.dispose(),delete i[u.id]):null!=p&&i[u.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function i(o){return _o(o)||a.has(o.name)}if(!_o(e)&&null!=s)for(let o of s){if(i(o))continue;let l=l_(o.name,t,n);for(let u of l)!u||u.kept||r.has(u.id)||u.dispose()}}executeAsync(e,t){var n=this;return(0,R.Z)(function*(){return n._executeAsync(e,t)})()}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(e,t,n=!1,r={},a={}){var s=this;return(0,R.Z)(function*(){s.disposeIntermediateTensors(),n||(e=s.mapInputs(e),s.checkInputs(e),s.checkInputShapeAndType(e),t=s.mapOutputs(t),s.checkOutputs(t));try{s.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){s.keepIntermediateTensors=!1,console.warn(d.message)}let i=new M_(s.weightMap,r,a,s.functionExecutorMap,s.parseNodeNameCache);s.keepIntermediateTensors&&(s.clonedTensorsMap=s.cloneTensorMap(s.weightMap));let o=yield s.executeWithControlFlow(e,i,t,n),l=t.map(d=>on(d,o,i)),u=l.map(d=>d.id),p=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...p,...s.weightIds]);return Object.values(o).forEach(d=>{d.forEach(c=>{c&&!c.isDisposed&&!h.has(c.id)&&c.dispose()})}),null==s.parent&&i.dispose(h),l})()}executeFunctionAsync(e,t,n){var r=this;return(0,R.Z)(function*(){let a=e.reduce((s,i,o)=>(s[r.inputs[o].name]=i,s),{});return r._executeAsync(a,r.outputNodes,!0,t,n)})()}executeWithControlFlow(e,t,n,r){var a=this;return(0,R.Z)(function*(){let s=Object.keys(e),i=s.map(v=>a.graph.nodes[Xn(v)[0]]),o=n.map(v=>Xn(v)[0]),l=new Set(o),u=o.map(v=>a.graph.nodes[v]);0===u.length&&(u=a._outputs);let{usedNodes:p,missingInputs:h,dynamicNode:d,syncInputs:c}=O_(e,u,a.weightMap,a._initNodes),f=[...i,...a.graph.weights,...a._initNodes||[]].map(v=>({node:v,contexts:t.currentContext})),m=Object.assign({},a.weightMap);Object.keys(e).forEach(v=>{let[I,_]=Xn(v),T=[];T[_]=e[v],m[I]=T});let g={},y=a.getFrozenTensorIds(m),b={};for(;f.length>0;){let v=a.processStack(i,f,t,m,b,y,l,g,p);yield Promise.all(v)}null==d&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(v=>!_o(v)&&!on(v.name,m,t)).map(v=>v.name);if(x.length>0){let v="";throw null!=d&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${h}]. ${v}`)}return m})()}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let p=t.pop();n.currentContext=p.contexts;let h="";if("Enter"===p.node.op&&k("isConstant",p.node,r,n)&&([h]=_a(p.node.name,n)),null==r[p.node.name]){let d=D_(p.node,r,n,this._resourceManager);h||([h]=_a(p.node.name,n));let c=n.currentContext;w.isPromise(d)?u.push(d.then(f=>(r[h]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(f)),n.currentContext=c,this.checkTensorForDisposal(h,p.node,r,n,s,i,o),this.processChildNodes(p.node,t,n,r,a,l),f))):(r[h]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(d)),this.checkTensorForDisposal(h,p.node,r,n,s,i,o),this.processChildNodes(p.node,t,n,r,a,l))}else this.processChildNodes(p.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach(i=>{let[o]=_a(i.name,n);a[o]||!s.has(i.name)||("Merge"===i.op?i.inputNames.some(l=>!!on(l,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!on(l,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=Xn(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let s=a.attrParams.shape.value,i=s.length===n.shape.length&&n.shape.every((o,l)=>-1===s[l]||s[l]===o);w.assert(i,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${s}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&w.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let r={};for(let a in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter(n=>{let[r]=Xn(n);return null==this.graph.nodes[r]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var n,r;let a=null===(r=null===(n=this._signature)||void 0===n?void 0:n.outputs)||void 0===r?void 0:r[t];return null!=a?a.name:t},{})}checkOutputs(e){e.forEach(t=>{let[n]=Xn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},Rj="?tfjs-format=file",Dj="model.json",Ux=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=sn){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return w.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let a=this.artifacts.userDefinedMetadata;null!=a.signature&&(n=a.signature),null!=a.structuredOutputKeys&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Vx(C_.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let a=C_.Instance.transformGraph(e.modelInitializer);this.initializer=new Vx(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}save(e,t){var n=this;return(0,R.Z)(function*(){if("string"==typeof e){let r=n.io.getSaveHandlers(e);if(0===r.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(n.artifacts)})()}addStructuredOutputNames(e){if(this.structuredOutputKeys){let n={};return(e instanceof $e?[e]:e).forEach((r,a)=>n[this.structuredOutputKeys[a]]=r),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}predictAsync(e,t){var n=this;return(0,R.Z)(function*(){let r=yield n.executeAsync(e,n.outputNodes);return n.addStructuredOutputNames(r)})()}normalizeInputs(e){var t;if(!(e instanceof $e||Array.isArray(e))){let a=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=a)for(let s in a){let i=a[s];null!=i.resourceId&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,s)=>{var i,o,l;let u=null===(l=null===(o=null===(i=this.signature)||void 0===i?void 0:i.inputs)||void 0===o?void 0:o[s])||void 0===l?void 0:l.resourceId;return a[s]=null!=u?this.resourceIdToCapturedInput[u]:e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:this.initializer.execute({},null==this.initializerSignature?[]:Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){var e=this;return(0,R.Z)(function*(){return null==e.initializer?[]:e.initializer.executeAsync({},null==e.initializerSignature?[]:Object.keys(e.initializerSignature.outputs))})()}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++)this.resourceIdToCapturedInput[t[n[r]].resourceId]=e[r]}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}executeAsync(e,t){var n=this;return(0,R.Z)(function*(){null==n.resourceIdToCapturedInput&&n.setResourceIdToCapturedInput(yield n.executeInitializerGraphAsync()),e=n.normalizeInputs(e),t=n.normalizeOutputs(t);let r=yield n.executor.executeAsync(e,t);return r.length>1?r:r[0]})()}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ee(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};function Mj(e){return Gx.apply(this,arguments)}function Gx(){return Gx=(0,R.Z)(function*(e,t={},n=sn){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function Lj(e){return e.endsWith("/")||(e+="/"),`${e}${Dj}${Rj}`}(e));let r=new Ux(e,t,n);return yield r.load(),r}),Gx.apply(this,arguments)}function Oj(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[r,a]=e;if(!r)throw new Error("modelJSON must be the first element of the array");if(!(a&&a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");let s=sn.getWeightSpecs(r.weightsManifest),i=sn.getModelArtifactsForJSONSync(r,s,a);t=sn.fromMemorySync(i)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=sn.fromMemorySync(e)}let n=new Ux(t);return n.load(),n}var zj="4.7.0",L_={};_e(L_,{CSVDataset:()=>Z_,Dataset:()=>Cu,FileDataSource:()=>nT,TextLineDataset:()=>j_,URLDataSource:()=>rT,array:()=>o5,csv:()=>b5,func:()=>x5,generator:()=>v5,microphone:()=>k5,version_data:()=>I5,webcam:()=>w5,zip:()=>l5});var Pj=Ma(nh()),Bj=Ma(nh());function Xc(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Tu(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let l=Xc(e[i],t,n,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function Vj(e,t=P_){return z_(e,t)}function z_(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Tu(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let l=z_(e.map(u=>u[i]),t,n);s[i]=l}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function P_(e){return null===e?null:Tu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function B_(e,t){return Hx.apply(this,arguments)}function Hx(){return Hx=(0,R.Z)(function*(e,t){let n=new Map;Xc(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let s=yield a;n.set(r,s)}}return Xc(e,t,n)}),Hx.apply(this,arguments)}function Tu(e){let t=!1;if(H().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=Sk();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof $e)&&!(e instanceof Promise)&&!t)}function Hj(e){return function Wj(e,t){return Xc(e,t)}(e,jj)}function jj(e){return e instanceof $e?{value:e.clone(),recurse:!1}:Tu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var W_=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},jx=class extends W_{constructor(){super(jx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function V_(e){return new Zj(e)}function qx(e){return new Xj(e)}jx.INITIAL_CAPACITY=32;var os,en=class{toArray(){var e=this;return(0,R.Z)(function*(){let t=[],n=yield e.next();for(;!n.done;)t.push(n.value),n=yield e.next();return t})()}toArrayForTest(){var e=this;return(0,R.Z)(function*(){let t=e.prefetch(100),n=[],r=yield t.next();for(;!r.done;)n.push(r.value),r=yield t.next();return n})()}resolveFully(){var e=this;return(0,R.Z)(function*(){let t=yield e.next();for(;!t.done;)t=yield e.next()})()}resolveWhile(e){var t=this;return(0,R.Z)(function*(){let n=yield t.next(),r=e(n.value);for(;!n.done&&r;)n=yield t.next(),r=e(n.value)})()}handleErrors(e){return new r5(this,e)}filter(e){return new t5(this,e)}map(e){return new n5(this,e)}mapAsync(e){return new U_(this,e)}serialMapAsync(e){return new U_(this,e).serial()}flatmap(e){return new a5(this,e)}forEachAsync(e){var t=this;return(0,R.Z)(function*(){return t.map(e).resolveFully()})()}serialForEach(e){var t=this;return(0,R.Z)(function*(){return t.serialMapAsync(e).resolveWhile(n=>!0===n)})()}rowMajorBatch(e,t=!0){return new e5(this,e,t)}columnMajorBatch(e,t=!0,n=P_){return this.rowMajorBatch(e,t).map(r=>Vj(r,n))}concatenate(e,t){return new G_(V_([this,e]),t)}take(e){return e<0||null==e?this:new Qj(this,e)}skip(e){return e<0||null==e?this:new Yj(this,e)}prefetch(e){return new H_(this,e)}shuffle(e,t){return new i5(this,e,t)}serial(){return new Jj(this)}},Zj=class extends en{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){var e=this;return(0,R.Z)(function*(){if(e.trav>=e.items.length)return{value:null,done:!0};let t=e.items[e.trav];return e.trav++,{value:Hj(t),done:!1}})()}},Xj=class extends en{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}next(){var e=this;return(0,R.Z)(function*(){try{return e.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}})()}},Jj=class extends en{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,R.Z)(function*(){return e.upstream.next()})()}},Yj=class extends en{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,R.Z)(function*(){for(;e.count++<e.maxCount;){let t=yield e.upstream.next();if(t.done)return t;Ee(t.value)}return e.upstream.next()})()}},Qj=class extends en{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){var e=this;return(0,R.Z)(function*(){return e.count++>=e.maxCount?{value:null,done:!0}:e.upstream.next()})()}},e5=class extends en{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,R.Z)(function*(){let t=[];for(;t.length<e.batchSize;){let n=yield e.upstream.next();if(n.done)return e.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(n.value)}return{value:t,done:!1}})()}},t5=class extends en{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,R.Z)(function*(){for(;;){let t=yield e.upstream.next();if(t.done||e.predicate(t.value))return t;Ee(t.value)}})()}},n5=class extends en{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}next(){var e=this;return(0,R.Z)(function*(){let t=yield e.upstream.next();if(t.done)return{value:null,done:!0};let n=Mr.getTensorsInContainer(t.value),r=e.transform(t.value),a=Mr.getTensorsInContainer(r);for(let s of n)Mr.isTensorInList(s,a)||s.dispose();return{value:r,done:!1}})()}},r5=class extends en{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,R.Z)(function*(){for(;;)try{return yield e.upstream.next()}catch(t){if(!e.handler(t))return{value:null,done:!0}}})()}},U_=class extends en{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){var e=this;return(0,R.Z)(function*(){let t=yield e.upstream.next();if(t.done)return{value:null,done:!0};let n=Mr.getTensorsInContainer(t.value),r=yield e.transform(t.value),a=Mr.getTensorsInContainer(r);for(let s of n)Mr.isTensorInList(s,a)||s.dispose();return{value:r,done:!1}})()}},Kx=class extends en{constructor(){super(),this.outputQueue=new jx,this.lastRead=Promise.resolve({value:null,done:!1})}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}serialNext(){var e=this;return(0,R.Z)(function*(){for(;0===e.outputQueue.length();)if(!(yield e.pump()))return{value:null,done:!0};return{value:e.outputQueue.shift(),done:!1}})()}},a5=class extends Kx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){var e=this;return(0,R.Z)(function*(){let t=yield e.upstream.next();if(t.done)return!1;let n=Mr.getTensorsInContainer(t.value),r=e.transform(t.value),a=Mr.getTensorsInContainer(r);e.outputQueue.pushAll(r);for(let s of n)Mr.isTensorInList(s,a)||s.dispose();return!0})()}},G_=class extends en{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.readFromChain(e.lastRead),e.lastRead})()}readFromChain(e){var t=this;return(0,R.Z)(function*(){if(yield e,null==t.iterator){let r=yield t.moreIterators.next();if(r.done)return{value:null,done:!0};t.iterator=r.value,null!=t.baseErrorHandler&&(t.iterator=t.iterator.handleErrors(t.baseErrorHandler))}let n=yield t.iterator.next();return n.done?(t.iterator=null,t.readFromChain(e)):n})()}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(os||(os={}));var s5=class extends en{constructor(e,t=os.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}nextState(e){var t=this;return(0,R.Z)(function*(){yield e;let n=0,r=0,s=yield B_(t.iterators,function a(i){return i instanceof en?{value:i.next().then(o=>(n++,o.done&&r++,o.value)),recurse:!1}:{value:null,recurse:!0}});if(n===r)return{value:null,done:!0};if(r>0)switch(t.mismatchMode){case os.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${t.count}.`);case os.SHORTEST:return{value:null,done:!0}}return t.count++,{value:s,done:!1}})()}next(){var e=this;return(0,R.Z)(function*(){return e.currentPromise=e.nextState(e.currentPromise),e.currentPromise})()}},H_=class extends en{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new W_(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},i5=class extends H_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Bj.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){var e=this;return(0,R.Z)(function*(){return e.lastRead=e.lastRead.then(()=>e.serialNext()),e.lastRead})()}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){var e=this;return(0,R.Z)(function*(){for(e.upstreamExhausted||e.refill();!e.buffer.isEmpty();){let t=e.chooseIndex(),n=yield e.buffer.shuffleExcise(t);if(!n.done)return e.refill(),n;e.upstreamExhausted=!0}return{value:null,done:!0}})()}},Cu=class{constructor(){this.size=null}batch(e,t=!0){let r,n=this;return w.assert(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Jn((0,R.Z)(function*(){return(yield n.iterator()).columnMajorBatch(e,t,u5)}),r)}concatenate(e){let n,t=this;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Jn((0,R.Z)(function*(){return(yield t.iterator()).concatenate(yield e.iterator())}),n)}filter(e){let n,t=this;return n=this.size===1/0?1/0:null,Jn((0,R.Z)(function*(){return(yield t.iterator()).filter(r=>W(()=>e(r)))}),n)}forEachAsync(e){var t=this;return(0,R.Z)(function*(){return(yield t.iterator()).forEachAsync(e)})()}map(e){let t=this;return Jn((0,R.Z)(function*(){return(yield t.iterator()).map(n=>W(()=>e(n)))}),this.size)}mapAsync(e){let t=this;return Jn((0,R.Z)(function*(){return(yield t.iterator()).mapAsync(e)}),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Jn((0,R.Z)(function*(){return(yield t.iterator()).prefetch(e)}),this.size)}repeat(e){let n,t=this;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Jn((0,R.Z)(function*(){return function qj(e,t){return new G_(e,t)}(qx((0,R.Z)(function*(){return{value:yield t.iterator(),done:!1}})).take(e))}),n)}skip(e){let n,t=this;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Jn((0,R.Z)(function*(){return(yield t.iterator()).skip(e)}),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=Pj.alea(t||w.now().toString());return Jn((0,R.Z)(function*(){let s=a.int32();return n&&(s+=a.int32()),(yield r.iterator()).shuffle(e,s.toString())}),this.size)}take(e){let n,t=this;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Jn((0,R.Z)(function*(){return(yield t.iterator()).take(e)}),n)}toArray(){var e=this;return(0,R.Z)(function*(){if(e.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield e.iterator()).toArray()})()}toArrayForTest(){var e=this;return(0,R.Z)(function*(){if(e.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield e.iterator()).toArrayForTest()})()}};function Jn(e,t=null){return new class extends Cu{constructor(){super(...arguments),this.size=t}iterator(){return(0,R.Z)(function*(){return e()})()}}}function o5(e){return Jn((0,R.Z)(function*(){return V_(e)}),e.length)}function l5(e){if(!Tu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return Jn((0,R.Z)(function*(){return function Kj(e,t=os.FAIL){return new s5(e,t)}(yield B_(e,r=>{if(r instanceof Cu)return{value:r.iterator(),recurse:!1};if(Tu(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),os.SHORTEST)}),t)}function u5(e){return null===e?null:function Uj(e){return null==e||function Gj(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof $e||w.isTypedArray(e)}(e[0])?{value:p5(e),recurse:!1}:{value:null,recurse:!0}}function p5(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof $e?Wt(e):xn(e)}Cu.MAX_BUFFER_SIZE=1e4;var j_=class extends Cu{constructor(e){super(),this.input=e}iterator(){var e=this;return(0,R.Z)(function*(){return(yield e.input.iterator()).decodeUTF8().split("\n").map(t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t))})()}},vd=Symbol("out"),q_=Symbol("field"),Yc=Symbol("quote"),Zx=Symbol("quoteafterquote"),K_=Symbol("quoteinquote"),Z_=class extends Cu{columnNames(){var e=this;return(0,R.Z)(function*(){return e.columnNamesValidated||(yield e.setColumnNames()),e.configuredColumnsOnly?Object.keys(e.columnConfigs):e.fullColumnNames})()}setColumnNames(){var e=this;return(0,R.Z)(function*(){let t=yield e.maybeReadHeaderLine();if(!e.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");e.fullColumnNames&&t&&w.assert(t.length===e.fullColumnNames.length,()=>"The length of provided columnNames ("+e.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),e.fullColumnNames||(e.fullColumnNames=t);let n=e.fullColumnNames.reduce((a,s)=>(a[s]=a[s]+1||1,a),{}),r=Object.keys(n).filter(a=>n[a]>1);if(w.assert(0===r.length,()=>"Duplicate column names found: "+r.toString()),e.columnConfigs)for(let a of Object.keys(e.columnConfigs))if(-1===e.fullColumnNames.indexOf(a))throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+e.fullColumnNames.toString()+").");e.columnNamesValidated=!0})()}maybeReadHeaderLine(){var e=this;return(0,R.Z)(function*(){if(e.hasHeader){let t=yield(yield e.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");return e.parseRow(t.value,!1)}return null})()}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new j_(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}iterator(){var e=this;return(0,R.Z)(function*(){e.columnNamesValidated||(yield e.setColumnNames());let t=yield e.base.iterator();return e.hasHeader&&(t=t.skip(1)),t.map(n=>e.makeDataElement(n))})()}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let u=Number(o);if(isNaN(u))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(o)}else l=u}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=vd;for(let i=0;i<a;i++)switch(s){case vd:switch(e.charAt(i)){case'"':r=i+1,s=Yc;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=vd;break;default:s=q_,r=i}break;case q_:e.charAt(i)===this.delimiter&&(n.push(e.substring(r,i)),s=vd,r=i+1);break;case Yc:'"'===e.charAt(i)&&(s=Zx);break;case Zx:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=vd,r=i+1;break;case'"':s=Yc;break;default:s=K_}break;case K_:'"'===e.charAt(i)&&(s=Yc)}if(n.push(s===Zx?e.substring(r,a-1):e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},X_=class extends en{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static create(e={}){return(0,R.Z)(function*(){if(!H().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new X_(e);return yield t.start(),t})()}start(){var e=this;return(0,R.Z)(function*(){try{e.stream=yield navigator.mediaDevices.getUserMedia({audio:null==e.audioTrackConstraints||e.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!e.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(e.audioContext=new t,e.sampleRateHz){if(e.audioContext.sampleRate!==e.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${e.sampleRateHz}; Actual: ${e.audioContext.sampleRate}`)}else e.sampleRateHz=e.audioContext.sampleRate;let n=e.audioContext.createMediaStreamSource(e.stream);e.analyser=e.audioContext.createAnalyser(),e.analyser.fftSize=2*e.fftSize,e.analyser.smoothingTimeConstant=e.smoothingTimeConstant,n.connect(e.analyser),e.freqData=new Float32Array(e.fftSize),e.timeData=new Float32Array(e.fftSize)})()}next(){var e=this;return(0,R.Z)(function*(){if(e.isClosed)return{value:null,done:!0};let t,n,r=yield e.getAudioData();if(e.includeSpectrogram){let a=e.flattenQueue(r.freqDataQueue);t=e.getTensorFromAudioDataArray(a,[e.numFrames,e.columnTruncateLength,1])}if(e.includeWaveform){let a=e.flattenQueue(r.timeDataQueue);n=e.getTensorFromAudioDataArray(a,[e.numFrames*e.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}})()}capture(){var e=this;return(0,R.Z)(function*(){return(yield e.next()).value})()}getAudioData(){var e=this;return(0,R.Z)(function*(){let t=[],n=[],r=0;return new Promise(a=>{let s=setInterval(()=>{e.includeSpectrogram&&(e.analyser.getFloatFrequencyData(e.freqData),e.freqData[0]===-1/0&&a({freqDataQueue:t,timeDataQueue:n}),t.push(e.freqData.slice(0,e.columnTruncateLength))),e.includeWaveform&&(e.analyser.getFloatTimeDomainData(e.timeData),n.push(e.timeData.slice())),++r===e.numFrames&&(clearInterval(s),a({freqDataQueue:t,timeDataQueue:n}))},e.fftSize/e.sampleRateHz*1e3)})})()}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((r,a)=>n.set(r,a*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),xn(n,t)}},J_=class extends en{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=nt([0],"int32"),this.webcamConfig.centerCrop){let n=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,r=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,a=(1-n)/2,s=(1-r)/2;this.cropBox=Qr([s,a,r+s,a+n],[1,4])}else this.cropBox=Qr([0,0,1,1],[1,4])}summary(){return"webcam"}static create(e,t={}){return(0,R.Z)(function*(){if(!H().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new J_(e,t);return yield n.start(),n})()}start(){var e=this;return(0,R.Z)(function*(){e.webcamConfig.facingMode&&w.assert("user"===e.webcamConfig.facingMode||"environment"===e.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${e.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{e.stream=yield navigator.mediaDevices.getUserMedia({video:{deviceId:e.webcamConfig.deviceId,facingMode:e.webcamConfig.facingMode?e.webcamConfig.facingMode:"user",width:e.webcamVideoElement.width,height:e.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!e.stream)throw new Error("Could not obtain video from webcam.");try{e.webcamVideoElement.srcObject=e.stream}catch(t){console.log(t),e.webcamVideoElement.src=window.URL.createObjectURL(e.stream)}return e.webcamVideoElement.play(),e.isClosed=!1,new Promise(t=>{e.webcamVideoElement.onloadedmetadata=()=>{t()}})})()}next(){var e=this;return(0,R.Z)(function*(){if(e.isClosed)return{value:null,done:!0};let t;try{t=ed.fromPixels(e.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(!e.resize)return{value:t,done:!1};try{return{value:e.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}})()}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return W(()=>{let n,t=an(le(e,"float32"),0);return n=lr.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear"),B(n,n.shape.slice(1))})}capture(){var e=this;return(0,R.Z)(function*(){return(yield e.next()).value})()}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},Y_=class{},Q_=class extends en{split(e){return new d5(this,e)}},d5=class extends Q_{constructor(e,t){super(),this.upstream=e,this.impl=new h5(e,t)}summary(){return this.impl.summary()}next(){var e=this;return(0,R.Z)(function*(){return e.impl.next()})()}},h5=class extends Kx{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){var e=this;return(0,R.Z)(function*(){let t=yield e.upstream.next();if(t.done)return""!==e.carryover&&(e.outputQueue.push(e.carryover),e.carryover="",!0);let n=t.value.split(e.separator);n[0]=e.carryover+n[0];for(let r of n.slice(0,-1))e.outputQueue.push(r);return e.carryover=n[n.length-1],!0})()}},c5=class extends en{decodeUTF8(){return new f5(this)}},f5=class extends Q_{constructor(e){super(),this.upstream=e,this.impl=new m5(e)}summary(){return this.impl.summary()}next(){var e=this;return(0,R.Z)(function*(){return e.impl.next()})()}},m5=class extends Kx{constructor(e){if(super(),this.upstream=e,H().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Sk();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){var e=this;return(0,R.Z)(function*(){let n,r,t=yield e.upstream.next();return!t.done&&(n=t.value,r=H().get("IS_BROWSER")?e.decoder.decode(n,{stream:!0}):e.decoder.write(Buffer.from(n.buffer)),e.outputQueue.push(r),!0)})()}},eT=class extends c5{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||!!H().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}next(){var e=this;return(0,R.Z)(function*(){return e.offset>=(e.file instanceof Uint8Array?e.file.byteLength:e.file.size)?{value:null,done:!0}:{value:yield new Promise((t,n)=>{let r=e.offset+e.chunkSize;if(e.file instanceof Uint8Array)t(new Uint8Array(e.file.slice(e.offset,r)));else{let a=new FileReader;a.onload=i=>{let o=a.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(o)},a.onabort=i=>n(new Error("Aborted")),a.onerror=i=>n(new Error(i.type));let s=e.file.slice(e.offset,r);a.readAsArrayBuffer(s)}e.offset=r}),done:!1}})()}};function Xx(){return Xx=(0,R.Z)(function*(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=y5(e));let s=yield(n||w.fetch)(r,a);if(s.ok){let i=new Uint8Array(yield s.arrayBuffer());return new eT(i,t)}throw new Error(s.statusText)}),Xx.apply(this,arguments)}var y5=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function tT(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var nT=class extends Y_{constructor(e,t={}){super(),this.input=e,this.options=t}iterator(){var e=this;return(0,R.Z)(function*(){if(tT(e.input)&&H().get("IS_NODE")){let t=fm();e.input=t.readFileSync(e.input.slice(7))}return new eT(e.input,e.options)})()}},rT=class extends Y_{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}iterator(){var e=this;return(0,R.Z)(function*(){return tT(e.url)?new nT(e.url,e.fileOptions).iterator():function g5(e){return Xx.apply(this,arguments)}(e.url,e.fileOptions)})()}};function b5(e,t={}){return new Z_(new rT(e),t)}function x5(e){let t=qx(e);return Jn((0,R.Z)(function*(){return t}))}function v5(e){return Jn((0,R.Z)(function*(){let t=yield e();return qx(()=>t.next())}))}function w5(e,t){return Jx.apply(this,arguments)}function Jx(){return Jx=(0,R.Z)(function*(e,t){return J_.create(e,t)}),Jx.apply(this,arguments)}function k5(e){return Yx.apply(this,arguments)}function Yx(){return Yx=(0,R.Z)(function*(e){return X_.create(e)}),Yx.apply(this,arguments)}var I5="4.7.0";function ye(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{null!=n&&w.assert("complex64"!==n.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var S5=ta.whereImpl,Qc=class extends ep{nextDataId(){return Qc.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new rh(this,wr())}write(e,t,n){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&N.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&w.isString(n[0])){let a=n.map(s=>w.encodeString(s));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}read(e){var t=this;return(0,R.Z)(function*(){return t.readSync(e)})()}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let r=this.readSync(n.real.dataId),a=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(r,a)}return w.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(r=>w.decodeString(r));return Me(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,t)}makeOutput(e,t,n){return wr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}time(e){return(0,R.Z)(function*(){let t=w.now();return e(),{kernelMs:w.now()-t}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ye([e],"where");let t=this.readSync(e.dataId);return S5(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Qc.nextDataId=0;var Qx={};function aT(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}_e(Qx,{addImpl:()=>iT,bincountImpl:()=>tv,bincountReduceImpl:()=>oT,bitwiseAndImpl:()=>lT,castImpl:()=>sT,ceilImpl:()=>uT,concatImpl:()=>nv,equalImpl:()=>pT,expImpl:()=>hT,expm1Impl:()=>fT,floorDivImpl:()=>gT,floorImpl:()=>mT,gatherNdImpl:()=>yT,gatherV2Impl:()=>bT,greaterEqualImpl:()=>vT,greaterImpl:()=>xT,lessEqualImpl:()=>kT,lessImpl:()=>wT,linSpaceImpl:()=>IT,logImpl:()=>ST,maxImpl:()=>NT,maximumImpl:()=>_T,minimumImpl:()=>TT,multiplyImpl:()=>rv,negImpl:()=>CT,notEqualImpl:()=>ET,prodImpl:()=>$T,raggedGatherImpl:()=>FT,raggedRangeImpl:()=>DT,raggedTensorToTensorImpl:()=>LT,rangeImpl:()=>iv,rsqrtImpl:()=>zT,scatterImpl:()=>Co,sigmoidImpl:()=>kq,simpleAbsImpl:()=>aT,sliceImpl:()=>nf,sparseFillEmptyRowsImpl:()=>BT,sparseReshapeImpl:()=>WT,sparseSegmentReductionImpl:()=>ov,sqrtImpl:()=>Nq,squaredDifferenceImpl:()=>VT,staticRegexReplaceImpl:()=>UT,stridedSliceImpl:()=>GT,stringNGramsImpl:()=>lv,stringSplitImpl:()=>uv,stringToHashBucketFastImpl:()=>pv,subImpl:()=>HT,tileImpl:()=>jT,topKImpl:()=>KT,transposeImpl:()=>av,uniqueImpl:()=>hv});var _5={kernelName:Ko,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;ye(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape));return r=aT(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function Ft(e){return(t,n,r,a,s)=>{let i=N.assertAndGetBroadcastShape(t,n),o=i.length,l=w.computeStrides(i),u=w.sizeFromShape(i),p=w.getTypedArrayFromDType(s,u),h=t.length,d=n.length,c=w.computeStrides(t),f=w.computeStrides(n),m=N.getBroadcastDims(t,i),g=N.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<p.length;++y){let b=w.indexToLoc(y,o,l),x=b.slice(-h);m.forEach(T=>x[T]=0);let v=w.locToIndex(x,h,c),I=b.slice(-d);g.forEach(T=>I[T]=0);let _=w.locToIndex(I,d,f);p[y]=e(r[v],a[_])}return[p,i]}}function Yn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var T5={kernelName:uh,backendName:"cpu",kernelFunc:Yn};function ef(e,t,n="float32"){if("complex64"===n)return Yn({inputs:{real:ef(e,t,"float32"),imag:ef(e,t,"float32")},backend:e});let r=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function oa(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var C5={kernelName:si,backendName:"cpu",kernelFunc:oa};function To(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var E5={kernelName:vh,backendName:"cpu",kernelFunc:To};function sT(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){let a=w.toTypedArray([0],n),[s,i]=Ft((o,l)=>o!==l?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function ls(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return oa({inputs:{x:a},backend:n});let p=ef(n,a.shape,a.dtype),h=ls({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),d=Yn({inputs:{real:h,imag:p},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),d}if("complex64"===a.dtype){let p=To({inputs:{input:a},backend:n}),h=ls({inputs:{x:p},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(p),h}if(!w.hasEncodingLoss(a.dtype,s)){let p=oa({inputs:{x:a},backend:n});return{dataId:p.dataId,shape:p.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=sT(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var $5={kernelName:Bs,backendName:"cpu",kernelFunc:ls};function jt(e,t,n,r){return null==n?({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;ye([i,o],e);let u=l.data.get(i.dataId).values,p=l.data.get(o.dataId).values,h="string"===i.dtype?N.fromUint8ToStringArray(u):u,d="string"===i.dtype?N.fromUint8ToStringArray(p):p,c=r||i.dtype,[f,m]=t(i.shape,o.shape,h,d,c);return l.makeTensorInfo(m,c,f)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if("complex64"===i.dtype||"complex64"===o.dtype){let u=ls({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(u.dataId),d=p.complexTensorInfos.imag,c=l.data.get(p.complexTensorInfos.real.dataId).values,f=l.data.get(d.dataId).values,m=ls({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),b=g.complexTensorInfos.imag,x=l.data.get(g.complexTensorInfos.real.dataId).values,v=l.data.get(b.dataId).values,[I,_,T]=n(i.shape,o.shape,c,f,x,v),E=l.makeTensorInfo(T,"float32",I),A=l.makeTensorInfo(T,"float32",_),D=Yn({inputs:{real:E,imag:A},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(A),D}{let u=l.data.get(i.dataId).values,p=l.data.get(o.dataId).values,h=r||i.dtype,[d,c]=t(i.shape,o.shape,u,p,h);return l.makeTensorInfo(c,h,d)}}}function ev(e){return(t,n,r,a,s,i)=>{let o=N.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(o),u=o.length,p=w.computeStrides(o),h=w.getTypedArrayFromDType("float32",l),d=w.getTypedArrayFromDType("float32",l),c=N.getBroadcastDims(t,o),f=N.getBroadcastDims(n,o),m=N.mergeRealAndImagArrays(r,a),g=N.mergeRealAndImagArrays(s,i),y=t.length,b=w.computeStrides(t),x=n.length,v=w.computeStrides(n);if(c.length+f.length===0)for(let I=0;I<h.length;I++){let _=I%m.length,T=I%g.length,E=e(m[2*_],m[2*_+1],g[2*T],g[2*T+1]);h[I]=E.real,d[I]=E.imag}else for(let I=0;I<h.length;I++){let _=w.indexToLoc(I,u,p),T=_.slice(-y);c.forEach(S=>T[S]=0);let E=w.locToIndex(T,y,b),A=_.slice(-x);f.forEach(S=>A[S]=0);let D=w.locToIndex(A,x,v),F=e(m[2*E],m[2*E+1],g[2*D],g[2*D+1]);h[I]=F.real,d[I]=F.imag}return[h,d,o]}}var iT=Ft((e,t)=>e+t),A5=ev((e,t,n,r)=>({real:e+n,imag:t+r})),Eu=jt(za,iT,A5),F5={kernelName:za,backendName:"cpu",kernelFunc:Eu};function tv(e,t,n,r,a){let s=w.sizeFromShape(r),i=w.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(i[l]+=s>0?t[o]:1)}return i}function oT(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Me([a,n],t.dtype);for(let o=0;o<a;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||i.set(r?1:t.size>0?i.get(o,u)+t.get(o,l):i.get(o,u)+1,o,u)}return i}var lT=Ft((e,t)=>e&t),R5=jt(nl,lT),D5={kernelName:nl,backendName:"cpu",kernelFunc:R5};function la(e){return(t,n,r)=>{let a=w.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function rt(e,t,n){return us(e,la(t),n)}function us(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;ye(i,e);let u,o=s,l=o.data.get(i.dataId).values;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=N.fromUint8ToStringArray(l)}else u=l;let p=n||i.dtype,h=t(u,p,a);return o.makeTensorInfo(i.shape,p,h)}}var uT=la(e=>Math.ceil(e)),M5=us(Ws,uT),O5={kernelName:Ws,backendName:"cpu",kernelFunc:M5};function nv(e,t,n,r){let a=w.getArrayFromDType(n,w.sizeFromShape(t));if(r&&"string"!==n){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o="string"===n?N.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let p=u*t[1]+s;for(let h=0;h<i.shape[1];++h)a[p+h]=o[l++]}s+=i.shape[1]})}return a}var pT=Ft((e,t)=>e===t?1:0),dT=jt(hl,pT,null,"bool"),L5={kernelName:hl,backendName:"cpu",kernelFunc:dT},hT=la(e=>Math.exp(e)),cT=us(Qs,hT,"float32"),z5={kernelName:Qs,backendName:"cpu",kernelFunc:cT},fT=la(e=>Math.expm1(e)),P5=us(ei,fT),B5={kernelName:ei,backendName:"cpu",kernelFunc:P5},mT=la(e=>Math.floor(e)),W5=us(ti,mT),V5={kernelName:ti,backendName:"cpu",kernelFunc:W5},gT=Ft((e,t)=>Math.floor(e/t)),U5=jt(ni,gT,null,"int32"),G5={kernelName:ni,backendName:"cpu",kernelFunc:U5};function yT(e,t,n,r,a,s,i,o,l){let u=Me([r,s],n);for(let p=0;p<r;p++){let h=[],d=0;for(let c=0;c<a;c++){let f=e[p*a+c];d+=f*i[c],h.push(f)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let c=0;c<s;c++)u.values[p*s+c]=t.get(...t.indexToLoc(d*s+c))}return u}function bT(e,t,n){let r=Me(n,e.dtype);for(let a=0;a<r.size;++a){let s=r.indexToLoc(a).slice(),l=t.locToIndex([s[0],s[2]]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[a]=e.values[u])}return r}var xT=Ft((e,t)=>e>t?1:0),H5=jt(yl,xT,null,"bool"),j5={kernelName:yl,backendName:"cpu",kernelFunc:H5},vT=Ft((e,t)=>e>=t?1:0),q5=jt(ai,vT,null,"bool"),K5={kernelName:ai,backendName:"cpu",kernelFunc:q5},wT=Ft((e,t)=>e<t?1:0),Z5=jt(bl,wT,null,"bool"),X5={kernelName:bl,backendName:"cpu",kernelFunc:Z5},kT=Ft((e,t)=>e<=t?1:0),J5=jt(xl,kT,null,"bool"),Y5={kernelName:xl,backendName:"cpu",kernelFunc:J5};function IT(e,t,n){let r=(t-e)/(n-1),a=w.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var ST=la(e=>Math.log(e)),Q5=us(pi,ST),eq={kernelName:pi,backendName:"cpu",kernelFunc:Q5};function NT(e,t,n,r){let a=w.getTypedArrayFromDType(r,w.sizeFromShape(n));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[s]=o}return a}var _T=Ft((e,t)=>Math.max(e,t)),tq=jt(fi,_T),nq={kernelName:fi,backendName:"cpu",kernelFunc:tq},TT=Ft((e,t)=>Math.min(e,t)),rq=jt(bi,TT),aq={kernelName:bi,backendName:"cpu",kernelFunc:rq},rv=Ft((e,t)=>e*t),sq=ev((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),tf=jt(wi,rv,sq),iq={kernelName:wi,backendName:"cpu",kernelFunc:tf};function CT(e,t,n){let r=w.createScalarValue(-1,n);return rv([],t,r,e,n)}var lq={kernelName:Tl,backendName:"cpu",kernelFunc:function oq(e){let{inputs:t,backend:n}=e,{x:r}=t;ye(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=CT(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},ET=Ft((e,t)=>e!==t?1:0),uq=jt(Cl,ET,null,"bool"),pq={kernelName:Cl,backendName:"cpu",kernelFunc:uq};function av(e,t,n,r,a){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),l=w.computeStrides(a),u=w.getTypedArrayFromDType(n,w.sizeFromShape(a));for(let p=0;p<i;++p){let h=w.indexToLoc(p,s,o),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[r[f]];u[w.locToIndex(d,s,l)]=e[p]}return u}function On(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;ye(a,"transpose");let o=new Array(a.shape.length);for(let p=0;p<o.length;p++)o[p]=a.shape[s[p]];let u=av(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var dq={kernelName:fa,backendName:"cpu",kernelFunc:On};function $T(e,t,n,r){let[a,s]=N.computeOutAndReduceShapes(e,r),i=sr(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(a),i),l=w.sizeFromShape(s);for(let u=0;u<o.length;++u){let p=u*l,h=1;for(let d=0;d<l;++d)h*=n[p+d];o[u]=h}return{outVals:o,outShape:a,outDtype:i}}var cq={kernelName:_i,backendName:"cpu",kernelFunc:function hq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"prod");let o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=N.getAxesPermutation(l,o),p=l,h=a,d=[];null!=u&&(h=On({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(h),p=N.getInnerMostAxes(p.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=$T(h.shape,h.dtype,c,p),y=m;return i&&(y=N.expandShapeToKeepDim(m,l)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,f)}};function AT(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function FT(e,t,n,r,a,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function fq(e,t,n){e.forEach((r,a)=>{if(r<0||r>=n){let s=w.indexToLoc(a,t.length,w.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${n})`)}})}(s,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");let u=r[0],{outSplits:p,valueSlices:h,numValues:d}=function gq(e,t,n,r){let a=[],s=0,o=new Array(t.length-1+n.length).fill(null).map(()=>[0]);!function mq(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let p=t[u+1];for(let h=1;h<l+1;++h)o[u].push(h*p)}for(let u=0;u<e.length;++u){let p=e[u],h=e[u]+1;for(let d=0;d<n.length;++d){let c=n[d],f=d+t.length-1;if(f>=0){let m=o[f],g=m[m.length-1]-c[p];for(let y=p;y<h;++y)o[f].push(c[y+1]+g)}p=c[p],h=c[h]}h!==p&&(a.push([p,h]),s+=h-p)}return{outSplits:o,valueSlices:a,numValues:s}}(s,i,e,u),c=function yq(e){let t=[];for(let n=0;n<e.length;++n){let a=w.getArrayFromDType("int32",e[n].length);t.push(a),e[n].forEach((s,i)=>a[i]=s)}return t}(p),f=function xq(e,t,n,r,a){let s=t.slice();s[0]=a;let i=w.getArrayFromDType(n,w.sizeFromShape(s)),o=e.length;return function bq(e,t,n,r,a,s){let i=AT(t,2)[1],o=AT(s,2)[1],l=0;for(let u of n)for(let p=u[0];p<u[1];++p){for(let h=0;h<r;++h)a[l*o+h]=e[p*i+h];++l}}(e,t,r,0===o?0:o/t[0],i,s),[i,s]}(n,r,a,h,d);return[c,f[0],f[1]]}var RT=2147483647;function DT(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,p=[];o||p.push(t[0]),l||p.push(a[0]),u||p.push(i[0]);for(let g=1;g<p.length;++g)if(p[g]!==p[g-1])throw new Error("starts, limits, and deltas must have the same shape");let h=0===p.length?1:p[0],d=w.getArrayFromDType("int32",h+1);d[0]=0;for(let g=0;g<h;++g){let v,y=o?e[0]:e[g],b=l?r[0]:r[g],x=u?s[0]:s[g];if(0===x)throw new Error("Requires delta != 0");if(x>0&&b<y||x<0&&b>y)v=0;else if(v=Math.ceil(Math.abs((b-y)/x)),v>RT)throw new Error(`Requires ((limit - start) / delta) <= ${RT}`);d[g+1]=d[g]+v}let f=w.getArrayFromDType(n,d[h]),m=0;for(let g=0;g<h;++g){let y=d[g+1]-d[g],b=o?e[0]:e[g],x=u?s[0]:s[g];for(let v=0;v<y;++v)f[m++]=b,b+=x}return[d,f]}var Er=N.RowPartitionType,sv=class{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=N.getRowPartitionTypesHelper(u),this.raggedRank=N.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Er.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Er.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Er.VALUE_ROWIDS:return sv.getMaxWidthValueRowID(t);case Er.ROW_SPLITS:return sv.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Er[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let a=e[r+1]-e[r];a>n&&(n=a)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let i=e[s];i!==r&&(r=i,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return OT(e,n)}calculateOutputSize(e){let t=this.valuesShape;N.validateDefaultValueShape(this.defaultValueShape,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=N.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let i=0;i<r;++i,s+=t)a.push(s);for(let i=r;i<e;++i)a.push(-1);return w.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let o=e[i+1]-e[i],l=Math.min(r,o),u=t[i];-1===u&&(l=0);for(let p=0;p<l;++p)s.push(u),u+=n;for(let p=0;p<o-l;++p)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let p=e[u];if(p===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=p,p>=t.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${t.length}`);l=t[p]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case Er.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case Er.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${Er[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case Er.FIRST_DIM_SIZE:return e[0];case Er.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Er.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Er[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];let r=OT(t,!1),a=w.getArrayFromDType(this.valuesDType,w.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let i=1;i<=this.raggedRank;++i)s=this.calculateOutputIndex(i-1,s,n[i],t[i]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=w.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let c=this.defaultValueShape;W(()=>{let f=B(u,c);u=oo(f,i).dataSync()})}let p=0,h=0,d=0;for(let c=0;c<=l;++c){let f=c<l?t[c]:-1;if(f!==d){if(h<d){let m=a.subarray(p*o);MT(s.subarray(h*o),m,(d-h)*o)}if(c>=l&&(f=Math.floor(n.length/o)),f>d)if(1===this.defaultValue.length)s.subarray(d*o,f*o).fill(this.defaultValue[0]),d=f;else for(;f>d;)MT(s.slice(d*o),u,o),++d;f<0?(p=c+1,h=d):(p=c,h=d,d=h+1)}else++d}}};function MT(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function OT(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function LT(e,t,n,r,a,s,i,o,l,u){return new sv(e,t,n,r,a,s,i,o,l,u).compute()}function iv(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return w.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var zT=la(e=>1/Math.sqrt(e)),vq=us(Di,zT),wq={kernelName:Di,backendName:"cpu",kernelFunc:vq};function Co(e,t,n,r,a,s,i,o,l,u){let p=[r/a,a],h=e.values,d=t.values;if(0===r)return Me(n,t.dtype);let c=l instanceof Rt?l:Me(p,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let f=0;f<s;f++){let m=[],g=0;for(let y=0;y<i;y++){let b=h[f*i+y];m.push(b),g+=b*o[y]}if(g<0||g>=r/a)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<a;y++)u?c.values[g*a+y]+=d[f*a+y]:c.values[g*a+y]=0===t.rank?d[0]:d[f*a+y]}return c}var kq=la(e=>1/(1+Math.exp(-e))),PT=rt(Pi,e=>1/(1+Math.exp(-e))),Iq={kernelName:Pi,backendName:"cpu",kernelFunc:PT};function nf(e,t,n,r,a){let s=Vt.isSliceContinous(r,t,n),i=w.sizeFromShape(n),o=w.computeStrides(r);if(s){let h=Vt.computeFlatOffset(t,o);return"string"===a?e.slice(h,h+i):e.subarray(h,h+i)}let u=Me(r,a,"string"===a?N.fromUint8ToStringArray(e):e),p=Me(n,a);for(let h=0;h<p.size;++h){let d=p.indexToLoc(h),c=d.map((f,m)=>f+t[m]);p.set(u.get(...c),...d)}return"string"===a?N.fromStringArrayToUint8(p.values):p.values}function Eo(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;ye(a,"slice");let[o,l]=Vt.parseSliceParams(a,s,i);Vt.assertParamsValid(a,o,l);let p=nf(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,p)}var Sq={kernelName:Wl,backendName:"cpu",kernelFunc:Eo};function BT(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),p=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[w.getArrayFromDType(n,0),[0,h],w.getArrayFromDType(a,0),u,p]}let d=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*h];if(y<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],d=d&&y>=c,c=y}let m=!0;for(let g=0;g<l;++g){let y=0===f[g];u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,y=r;for(let b=0;b<o;++b)p[b]=b;return[g,[o,h],y,u,p]}{let g=f[l-1],y=w.getArrayFromDType(n,g*h),b=w.getArrayFromDType(a,g),x=new Array(l).fill(0);for(let v=0;v<o;++v){let I=e[v*h],T=(0===I?0:f[I-1])+x[I];x[I]++;for(let E=0;E<h;++E)y[T*h+E]=e[v*h+E];b[T]=r[v],p[v]=T}for(let v=0;v<l;++v)if(0===x[v]){let I=0===v?0:f[v-1];y[I*h+0]=v;for(let _=1;_<h;++_)y[I*h+_]=0;b[I]=i}return[y,[g,h],b,u,p]}}function WT(e,t,n,r,a){let s=w.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,p=-1;for(let m=0;m<o;++m){let g=a[m];if(-1===g){if(-1!==p)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,m));p=m,l.push(1)}else{if(g<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(m,g));u*=g,l.push(g)}}if(-1!==p){if(u<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/u);if(u*m!==s)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[p]=m}if(w.sizeFromShape(l)!==s)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,d=[];if(h>0){d[h-1]=1;for(let m=h-2;m>=0;--m)d[m]=d[m+1]*r[m+1]}let c=[];if(o>0){c[o-1]=1;for(let m=o-2;m>=0;--m)c[m]=c[m+1]*l[m+1]}let f=w.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<h;++y)g+=e[m*h+y]*d[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[f,[i,o],l]}function ov(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?a[o-1]+1:0;if(p<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=p;let d=h.reduce((b,x)=>b*x,1),c=w.getArrayFromDType(n,d);if(0===o)return p>0&&c.fill(i),[c,h];if(p<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let b=0;if(m<o){if(b=a[m],y===b){++m;continue}if(y>=b)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>g&&c.fill(i,g*u,y*u);for(let x=f;x<m;++x){let v=r[x];if(v<0||v>=l[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let I=0;I<u;I++)c[y*u+I]+=e[v*u+I]}if(s)for(let x=0;x<u;x++)c[y*u+x]/=m-f;if(f=m,++m,g=y+1,y=b,m>o)break}return g<p&&c.fill(i,g*u,p*u),[c,h]}var Nq=la(e=>Math.sqrt(e)),_q=rt(Wi,e=>Math.sqrt(e)),Tq={kernelName:Wi,backendName:"cpu",kernelFunc:_q},VT=Ft((e,t)=>{let n=e-t;return n*n}),Cq=jt(Gi,VT),Eq={kernelName:Gi,backendName:"cpu",kernelFunc:Cq},UT=la((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),$q=us(xp,UT),Aq={kernelName:xp,backendName:"cpu",kernelFunc:$q};function GT(e,t,n,r){let a=Me(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+r[l];a.set(t.get(...o),...i)}return a}var Fq=class{constructor(e,t,n,r,a,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),p=s-(l+u),h=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let y=0;y<p;++y)d+=e[h+y].length;d+=u*this.rightPad.length,d+=(l+u+p-1)*this.separator.length,n[r+i]=new Uint8Array(d);let f=n[r+i],m=0,g=y=>y.forEach(b=>f[m++]=b);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<p-1;++y)g(e[h+y]),g(this.separator);if(p>0){g(e[h+p-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let o=t[0];if(0!==o)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let u=t[l]>=o;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${n}]`);o=t[l]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let a=r-1,s=w.getArrayFromDType("int32",r);if(0===n||0===r){let o=new Array(n);for(let l=0;l<=a;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(p=>{u+=this.getNumNGrams(l,p)}),this.preserveShort&&l>0&&0===u&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[a]);for(let o=0;o<a;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(p=>{let d=this.getNumNGrams(t[o+1]-t[o],p);this.createNGrams(e,l,i,u,d,p),u+=d}),this.preserveShort&&u===s[o]){let p=t[o+1]-t[o];if(0===p)continue;this.createNGrams(e,l,i,u,1,p+2*this.padWidth)}}return[i,s]}};function lv(e,t,n,r,a,s,i,o){return new Fq(n,r,a,s,i,o).compute(e,t)}function Rq(e,t,n,r){if(!e.length)return;if(0===t.length){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(1===t.length){let s=t[0],i=e.indexOf(s);for(;-1!==i;){let o=e.subarray(0,i);(!n||0!==o.length)&&r.push(o),i=(e=e.subarray(i+1)).indexOf(s)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let i=e.subarray(a,s);(!n||0!==i.length)&&r.push(i),a=s+1}}function uv(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let d=0;d<r;++d){let c=a.length;Rq(e[d],t,n,a);let f=a.length-c;o[d]=f,s+=f,i=Math.max(i,f)}let l=w.getArrayFromDType("int32",2*s),u=new Array(s),p=[r,i],h=0;for(let d=0;d<r;++d)for(let c=0;c<o[d];++c)l[2*h]=d,l[2*h+1]=c,u[h]=a[h],++h;return[l,u,p]}function pv(e,t){let n=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var HT=Ft((e,t)=>e-t),Dq=ev((e,t,n,r)=>({real:e-n,imag:t-r})),dv=jt(Hi,HT,Dq),Mq={kernelName:Hi,backendName:"cpu",kernelFunc:dv};function jT(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Me(n,e.dtype);for(let a=0;a<r.values.length;++a){let s=r.indexToLoc(a),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[a]=e.values[o]}return r}var wd=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function qT(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let o=r-n+1,l=t-n+1,u=Math.log(o),p=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*p*(o-p)/o)*Math.sign(l-o/2);qT(e,t,Math.max(n,Math.floor(t-l*p/o+h)),Math.min(r,Math.floor(t+(o-l)*p/o+h)))}let a=e[t],s=n,i=r;for(w.swap(e,n,t),wd(e[r],a)>0&&w.swap(e,n,r);s<i;){for(w.swap(e,s,i),s++,i--;wd(e[s],a)<0;)s+=1;for(;wd(e[i],a)>0;)i-=1}0===wd(e[n],a)?w.swap(e,n,i):(i+=1,w.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function KT(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=w.getTypedArrayFromDType(n,i*r),u=w.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let d=h*o,c=e.subarray(d,d+o),f=new Array(c.length);c.forEach((b,x)=>f[x]={value:b,index:x}),r<f.length&&(qT(f,r),f=f.slice(0,r)),a&&f.sort(wd);let m=h*r,g=l.subarray(m,m+r),y=u.subarray(m,m+r);for(let b=0;b<r;b++)g[b]=f[b].value,y[b]=f[b].index}let p=t.slice();return p[p.length-1]=r,[Me(p,n,l),Me(p,"int32",u)]}function hv(e,t,n,r){let a=w.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];let i=new Map,o=new Int32Array(n[a]),l=new Rt(s,r,e),u=[],p=1===s[0]&&1===s[2];for(let f=0;f<n[a];f++){let m;if(p)m=e[f].toString();else{let y=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)y.push(l.get(b,f,x));m=y.join(",")}let g=i.get(m);if(null!=g)o[f]=g;else{let y=i.size;i.set(m,y),o[f]=y,u.push(f)}}let h=s.slice();h[1]=i.size;let d=new Rt(h,r);u.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)d.set(l.get(g,f,y),g,m,y)});let c=n.slice();return c[a]=h[1],{outputValues:d.values,outputShape:c,indices:o}}var Oq="4.7.0";Fh("cpu",()=>new Qc,1);var ZT=rt(Js,e=>e>=0?e:Math.exp(e)-1),Lq={kernelName:Js,backendName:"cpu",kernelFunc:ZT};function XT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;ye([a],"leakyRelu");let i=w.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var zq={kernelName:ui,backendName:"cpu",kernelFunc:XT},Pq=Ft((e,t)=>e<0?t*e:e);function JT(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;ye([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=Pq(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var Bq={kernelName:Ni,backendName:"cpu",kernelFunc:JT},YT=rt(Ci,e=>Math.max(0,e)),Wq={kernelName:Ci,backendName:"cpu",kernelFunc:YT},QT=rt(Ai,e=>Math.min(Math.max(0,e),6)),Vq={kernelName:Ai,backendName:"cpu",kernelFunc:QT};function rf(e,t,n,r,a){if("linear"===n)return oa({inputs:{x:t},backend:e});if("relu"===n)return YT({inputs:{x:t},backend:e});if("elu"===n)return ZT({inputs:{x:t},backend:e});if("relu6"===n)return QT({inputs:{x:t},backend:e});if("prelu"===n)return JT({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return XT({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return PT({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function mt(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=w.sizeFromShape(a.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let h=u.complexTensorInfos.imag;u.complexTensorInfos.real.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var Uq={kernelName:Dl,backendName:"cpu",kernelFunc:mt};function eC(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;ye([a,s],"matMul");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),b=ru.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);w.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=o?[y,c,h]:[y,h,c],I=mt({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,d]:[g,d,p]}}),_=mt({inputs:{x:s},backend:n,attrs:{shape:v}}),T=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],A=o?_.shape[1]:_.shape[2],D=Math.max(g,y),F=n.data.get(I.dataId).values,S=n.data.get(_.dataId).values,O=w.computeStrides(I.shape),U=w.computeStrides(_.shape),[G,j,K]=i?[O[0],1,O[1]]:[O[0],O[1],1],[Z,J,Y]=o?[1,U[1],U[0]]:[U[1],1,U[0]],te=E*A,ae=Me([D,E,A],I.dtype),ne=ae.values,se=n.blockSize;for(let ie=0;ie<D;ie++){let ve=ie%g,pe=ie%y;for(let be=0;be<E;be+=se){let Ie=Math.min(be+se,E);for(let Ne=0;Ne<A;Ne+=se){let Pe=Math.min(Ne+se,A);for(let Ue=0;Ue<T;Ue+=se){let dt=Math.min(Ue+se,T);for(let et=be;et<Ie;et++)for(let Ye=Ne;Ye<Pe;Ye++){let Qe=0;for(let Re=Ue;Re<dt;Re++)Qe+=F[ve*G+et*j+Re*K]*S[Re*Z+Ye*J+pe*Y];ne[ie*te+(et*A+Ye)]+=Qe}}}}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(_),n.makeTensorInfo(b,ae.dtype,ae.values)}var Gq={kernelName:Ps,backendName:"cpu",kernelFunc:eC},jq={kernelName:Ki,backendName:"cpu",kernelFunc:function Hq(e){let d,c,f,{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r,m=[];d=eC({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(c=Eu({inputs:{a:d,b:i},backend:n}),m.push(d),d=c),p&&(f=rf(n,d,p,o,h),m.push(d),d=f);for(let g of m)n.disposeIntermediateTensorInfo(g);return d}},qq=rt($s,e=>Math.acos(e)),Kq={kernelName:$s,backendName:"cpu",kernelFunc:qq},Zq=rt(As,e=>Math.acosh(e)),Xq={kernelName:As,backendName:"cpu",kernelFunc:Zq},Yq={kernelName:Fs,backendName:"cpu",kernelFunc:function Jq(e){let{inputs:t,backend:n}=e,r=t;ye(t,"addN");let a=r.map(o=>n.data.get(o.dataId).values),s=Me(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},eK={kernelName:Zo,backendName:"cpu",kernelFunc:function Qq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"all");let o=w.parseAxisParam(s,a.shape),l=o,u=N.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=On({inputs:{x:a},backend:n,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,a.shape.length)),N.assertAxesAreInnerMostDims("all",l,p.shape.length);let[h,d]=N.computeOutAndReduceShapes(p.shape,l),c=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let v=0;v<c;++v)x=x&&m[b+v];f[y]=x}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let b=mt({inputs:{x:g},backend:n,attrs:{shape:N.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),b}return g}},nK={kernelName:Xo,backendName:"cpu",kernelFunc:function tK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"any");let o=w.parseAxisParam(s,a.shape),l=o,u=N.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=On({inputs:{x:a},backend:n,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,a.shape.length)),N.assertAxesAreInnerMostDims("any",l,p.shape.length);let[h,d]=N.computeOutAndReduceShapes(p.shape,l),c=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let v=0;v<c;++v)x=x||m[b+v];f[y]=x}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let b=mt({inputs:{x:g},backend:n,attrs:{shape:N.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),b}return g}},aK={kernelName:Jo,backendName:"cpu",kernelFunc:function rK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ye(a,"argMax");let i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=On({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,h]=N.computeOutAndReduceShapes(l.shape,i),d=w.sizeFromShape(p),c=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,b=m[y],x=0;for(let v=0;v<f;++v){let I=m[y+v];I>b&&(b=I,x=v)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(p,"int32",c)}},iK={kernelName:Yo,backendName:"cpu",kernelFunc:function sK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ye(a,"argMin");let i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=On({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,h]=N.computeOutAndReduceShapes(l.shape,i),d=w.sizeFromShape(p),c=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,b=m[y],x=0;for(let v=0;v<f;++v){let I=m[y+v];I<b&&(b=I,x=v)}c[g]=x}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(p,"int32",c)}},oK=rt(Rs,e=>Math.asin(e)),lK={kernelName:Rs,backendName:"cpu",kernelFunc:oK},uK=rt(Ds,e=>Math.asinh(e)),pK={kernelName:Ds,backendName:"cpu",kernelFunc:uK},dK=rt(Ms,e=>Math.atan(e)),hK={kernelName:Ms,backendName:"cpu",kernelFunc:dK},cK=Ft((e,t)=>Math.atan2(e,t)),fK=jt(Ls,cK),mK={kernelName:Ls,backendName:"cpu",kernelFunc:fK},gK=rt(Os,e=>Math.atanh(e)),yK={kernelName:Os,backendName:"cpu",kernelFunc:gK};function cv(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Me(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let v=0;v<a.batchSize;++v){let I=v*y,_=v*r[0];for(let T=0;T<a.inChannels;++T)for(let E=0;E<a.outHeight;++E){let A=E*i-d,D=Math.max(0,A),F=Math.min(a.inHeight,p+A),S=I+E*b;for(let O=0;O<a.outWidth;++O){let U=O*o-c,G=Math.max(0,U),j=Math.min(a.inWidth,h+U),K=f,Z=0,J=0;for(let te=D;te<F;te+=l){let ae=_+te*r[1];for(let ne=G;ne<j;ne+=u){let ie=e[ae+ne*r[2]+T];"max"===s&&ie>K?K=ie:"avg"===s&&(Z+=ie,J++)}if(isNaN(K))break}g[S+O*x+T]="avg"===s?Z/J:K}}}return m}function tC(e,t,n,r,a=!1,s=!1){let i=Me(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,p=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Me(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let x=b*o-c,v=x;for(;v<0;)v+=u;let I=Math.min(r.inHeight,h+x);for(let _=0;_<r.outWidth;++_){let T=_*l-f,E=T;for(;E<0;)E+=p;let A=Math.min(r.inWidth,d+T),D=Number.NEGATIVE_INFINITY,F=-1;for(let S=v;S<I;S+=u){let O=S-x;for(let U=E;U<A;U+=p){let G=U-T,j=m.get(g,S,U,y);j>D&&(D=j,F=a?s?((g*r.inHeight+S)*r.inWidth+U)*r.inChannels+y:(S*r.inWidth+U)*r.inChannels+y:O*d+G)}}i.set(F,g,b,_,y)}}return i}function nC(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,p=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Me(a.outShape,n),v=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],_=a.outShape[2]*a.outShape[3]*a.outShape[4],T=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let A=0;A<a.batchSize;++A){let D=A*I,F=A*r[0];for(let S=0;S<a.inChannels;++S)for(let O=0;O<a.outDepth;++O){let U=O*i-m,G=U;for(;G<0;)G+=u;let j=Math.min(a.inDepth,d+U),K=D+O*_;for(let Z=0;Z<a.outHeight;++Z){let J=Z*o-g,Y=J;for(;Y<0;)Y+=p;let te=Math.min(a.inHeight,c+J),ae=K+Z*T;for(let ne=0;ne<a.outWidth;++ne){let se=ne*l-y,ie=se;for(;ie<0;)ie+=h;let ve=Math.min(a.inWidth,f+se),pe=ae+ne*E,be=b,Ie=0,Ne=0;for(let Ue=G;Ue<j;Ue+=u){let dt=F+Ue*r[1];for(let et=Y;et<te;et+=p){let Ye=dt+et*r[2];for(let Qe=ie;Qe<ve;Qe+=h){let gt=e[Ye+Qe*r[3]+S];if("max"===s&&gt>be?be=gt:"avg"===s&&(Ie+=gt,Ne++),isNaN(be))break}if(isNaN(be))break}if(isNaN(be))break}v[pe+S]="avg"===s?Ie/Math.max(Ne,1):be}}}}return x}var vK={kernelName:zs,backendName:"cpu",kernelFunc:function xK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ye(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(N.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let h,p=N.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&w.arraysEqual(p.inShape,p.outShape))h=oa({inputs:{x:a},backend:n});else{let d=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),f=cv(d,0,a.dtype,c,p,"avg");h=n.makeTensorInfo(p.outShape,a.dtype,f.values)}return h}},kK={kernelName:Qo,backendName:"cpu",kernelFunc:function wK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ye(a,"avgPool3d");let p=N.computePool3DInfo(a.shape,s,i,1,o,l,u),d=nC(n.data.get(a.dataId).values,0,a.dtype,w.computeStrides(a.shape),p,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},SK={kernelName:sp,backendName:"cpu",kernelFunc:function IK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ye([a,s],"avgPool3DGrad");let p=N.computePool3DInfo(s.shape,i,o,1,l,u),h=p.strideDepth,d=p.strideHeight,c=p.strideWidth,f=p.filterDepth,m=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterDepth,I=p.effectiveFilterHeight,_=p.effectiveFilterWidth,T=v-1-p.padInfo.front,E=_-1-p.padInfo.left,A=I-1-p.padInfo.top,D=Me(s.shape,"float32"),F=1/(f*m*g),S=n.bufferSync(a);for(let O=0;O<p.batchSize;++O)for(let U=0;U<p.inChannels;++U)for(let G=0;G<p.inDepth;++G)for(let j=0;j<p.inHeight;++j)for(let K=0;K<p.inWidth;++K){let Z=G-T,J=j-A,Y=K-E,te=0;for(let ae=0;ae<v;ae+=y){let ne=(Z+ae)/h;if(!(ne<0||ne>=p.outDepth||Math.floor(ne)!==ne))for(let se=0;se<I;se+=b){let ie=(J+se)/d;if(!(ie<0||ie>=p.outHeight||Math.floor(ie)!==ie))for(let ve=0;ve<_;ve+=x){let pe=(Y+ve)/c;pe<0||pe>=p.outWidth||Math.floor(pe)!==pe||(te+=S.get(O,ne,ie,pe,U))}}}D.set(te*F,O,G,j,K,U)}return n.makeTensorInfo(D.shape,D.dtype,D.values)}},_K={kernelName:ap,backendName:"cpu",kernelFunc:function NK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ye([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=N.computePool2DInfo(i.shape,o,l,1,u),h=p.strideHeight,d=p.strideWidth,c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,x=b-1-p.padInfo.left,v=y-1-p.padInfo.top,I=Me(i.shape,"float32"),_=1/(c*f),T=n.data.get(a.dataId).values,E=Me(a.shape,"float32",T);for(let A=0;A<p.batchSize;++A)for(let D=0;D<p.inChannels;++D)for(let F=0;F<p.inHeight;++F)for(let S=0;S<p.inWidth;++S){let O=F-v,U=S-x,G=0;for(let j=0;j<y;j+=m){let K=(O+j)/h;if(!(K<0||K>=p.outHeight||Math.floor(K)!==K))for(let Z=0;Z<b;Z+=g){let J=(U+Z)/d;J<0||J>=p.outWidth||Math.floor(J)!==J||(G+=E.get(A,K,J,D))}}I.set(G*_,A,F,S,D)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},CK={kernelName:ri,backendName:"cpu",kernelFunc:function TK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ye([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let p=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(p.length),g=f.length,y=c.length,b=d.length,x=h.length,v=0,I=0,_=0,T=0;for(let E=0;E<p.length;++E)m[E]=f[v++]+(p[E]-h[I++])*c[_++]/Math.sqrt(d[T++]+u),v>=g&&(v=0),I>=x&&(I=0),_>=y&&(_=0),T>=b&&(T=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},$K={kernelName:el,backendName:"cpu",kernelFunc:function EK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ye([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=N.getReshaped(a.shape,s,o),u=N.getPermuted(l.length,s.length),p=N.getReshapedPermuted(a.shape,s,o),h=N.getSliceBeginCoords(i,s.length),d=N.getSliceSize(p,i,s.length),c=mt({inputs:{x:a},backend:n,attrs:{shape:l}}),f=On({inputs:{x:c},backend:n,attrs:{perm:u}}),m=mt({inputs:{x:f},backend:n,attrs:{shape:p}}),g=Eo({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},FK={kernelName:tl,backendName:"cpu",kernelFunc:function AK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,u=tv(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},DK={kernelName:ip,backendName:"cpu",kernelFunc:function RK(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},MK=rt(Pa,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),OK={kernelName:Pa,backendName:"cpu",kernelFunc:MK},zK={kernelName:op,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.imag,o=n.data.get(a.complexTensorInfos.real.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++)r[u]=Math.hypot(o[u],l[u]);return n.makeOutput(r,t.shape,"float32")}};function $u(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var PK={kernelName:gh,backendName:"cpu",kernelFunc:$u};function Au(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(m=>m.shape);N.assertParamsConsistent(i,s);let o=N.computeOutShape(t.map(m=>m.shape),s);if(0===w.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(m=>w.sizeFromShape(m.shape)>0);if(1===l.length)return oa({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let m=l.map(v=>To({inputs:{input:v},backend:n})),g=l.map(v=>$u({inputs:{input:v},backend:n})),y=Au({inputs:m,backend:n,attrs:{axis:s}}),b=Au({inputs:g,backend:n,attrs:{axis:s}}),x=Yn({inputs:{real:y,imag:b},backend:n});return m.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let u=l.map(m=>{let g=[-1,w.sizeFromShape(m.shape.slice(s))];return mt({inputs:{x:m},backend:n,attrs:{shape:g}})}),p=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=N.computeOutShape(u.map(m=>m.shape),1);let d=nv(p,o,t[0].dtype,1===u[0].shape[0]),c=N.computeOutShape(l.map(m=>m.shape),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var BK={kernelName:rl,backendName:"cpu",kernelFunc:Au};function rC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r;ye([a,s],"conv2d");let h=N.convertConv2DDataFormat(l),d=N.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Rt(d.outShape,a.dtype),I=w.computeStrides(a.shape),_=w.computeStrides(s.shape),T=I[0],E=x?I[1]:I[2],A=x?I[2]:1,D=x?1:I[1],F=v.strides[0],S=x?v.strides[1]:v.strides[2],O=x?v.strides[2]:1,U=x?1:v.strides[1],G=n.data.get(a.dataId).values,j=n.data.get(s.dataId).values,K=v.values;for(let Z=0;Z<d.batchSize;++Z){let J=Z*T,Y=Z*F;for(let te=0;te<d.outHeight;++te){let ae=Y+te*S,ne=te*d.strideHeight-b;for(let se=0;se<c;++se){let ie=ne+se*m;if(ie<0||ie>=d.inHeight)continue;let ve=se*_[0],pe=J+ie*E;for(let be=0;be<d.outWidth;++be){let Ie=ae+be*O,Ne=be*d.strideWidth-y;for(let Pe=0;Pe<f;++Pe){let Ue=Ne+Pe*g;if(Ue<0||Ue>=d.inWidth)continue;let et=pe+Ue*A,Ye=ve+Pe*_[1];for(let Qe=0;Qe<d.inChannels;++Qe){let Re=G[et+Qe*D];for(let gt=0;gt<d.outChannels;++gt)K[Ie+gt*U]+=Re*j[Ye+gt];Ye+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,K)}var WK={kernelName:Vs,backendName:"cpu",kernelFunc:rC},UK={kernelName:ph,backendName:"cpu",kernelFunc:function VK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r;ye([a,s],"conv2dBackpropFilter");let h=N.convertConv2DDataFormat(l),d=N.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Rt(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,I=n.data.get(a.dataId).values,_=n.data.get(s.dataId).values,T=new Rt(a.shape,a.dtype,I),E=new Rt(s.shape,s.dtype,_);for(let A=0;A<m;++A){let D=Math.max(0,Math.ceil((v-A)/c)),F=Math.min(d.outHeight,(d.inHeight+v-A)/c);for(let S=0;S<g;++S){let O=Math.max(0,Math.ceil((x-S)/f)),U=Math.min(d.outWidth,(d.inWidth+x-S)/f);for(let G=0;G<d.inChannels;++G)for(let j=0;j<d.outChannels;++j){let K=0;for(let Z=0;Z<d.batchSize;++Z)for(let J=D;J<F;++J){let Y=A+J*c-v;for(let te=O;te<U;++te){let ae=S+te*f-x;K+=y?T.get(Z,Y,ae,G)*E.get(Z,J,te,j):T.get(Z,G,Y,ae)*E.get(Z,j,J,te)}}b.set(K,A,S,G,j)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},HK={kernelName:Us,backendName:"cpu",kernelFunc:function GK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r;ye([a,s],"conv2dBackpropInput");let h=w.computeStrides(s.shape),d=w.computeStrides(a.shape),c=N.convertConv2DDataFormat(u),f=N.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),m=new Rt(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,I]=h,{batchSize:_,filterHeight:T,filterWidth:E,inChannels:A,inHeight:D,inWidth:F,outChannels:S,outHeight:O,outWidth:U,strideHeight:G,strideWidth:j}=f;c=f.dataFormat;let K=T-1-f.padInfo.top,Z=E-1-f.padInfo.left,J="channelsLast"===c,Y=m.strides[0],te=J?m.strides[1]:m.strides[2],ae=J?m.strides[2]:1,ne=J?1:m.strides[1],se=d[0],ie=J?d[1]:d[2],ve=J?d[2]:1,pe=J?1:d[1];for(let be=0;be<_;++be)for(let Ie=0;Ie<A;++Ie)for(let Ne=0;Ne<D;++Ne){let Pe=Ne-K,Ue=Math.max(0,Math.ceil(Pe/G)),dt=Math.min(O,(T+Pe)/G);for(let et=0;et<F;++et){let Ye=et-Z,Qe=Math.max(0,Math.ceil(Ye/j)),Re=Math.min(U,(E+Ye)/j),gt=0;for(let zt=Ue;zt<dt;++zt){let fr=zt*G-Pe;for(let dn=Qe;dn<Re;++dn){let mr=se*be+ie*zt+ve*dn,Pn=x*(T-1-fr)+v*(E-1-(dn*j-Ye))+I*Ie;for(let lt=0;lt<S;++lt)gt+=y[mr+pe*lt]*b[Pn+lt]}}g[Y*be+te*Ne+ae*et+ne*Ie]=gt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},qK={kernelName:Gs,backendName:"cpu",kernelFunc:function jK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;ye([a,s],"conv3d");let u=N.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:h,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Rt(u.outShape,a.dtype),I=n.data.get(a.dataId).values,_=n.data.get(s.dataId).values,T=v.values,E=w.computeStrides(a.shape),A=w.computeStrides(s.shape);for(let D=0;D<u.batchSize;++D){let F=D*E[0],S=D*v.strides[0];for(let O=0;O<u.outDepth;++O){let U=S+O*v.strides[1],G=O*u.strideDepth-y;for(let j=0;j<p;++j){let K=G+j*c;if(K<0||K>=u.inDepth)continue;let Z=j*A[0],J=F+K*E[1];for(let Y=0;Y<u.outHeight;++Y){let te=U+Y*v.strides[2],ae=Y*u.strideHeight-x;for(let ne=0;ne<h;++ne){let se=ae+ne*f;if(se<0||se>=u.inHeight)continue;let ie=Z+ne*A[1],ve=J+se*E[2];for(let pe=0;pe<u.outWidth;++pe){let be=te+pe*u.outChannels,Ie=pe*u.strideWidth-b;for(let Ne=0;Ne<d;++Ne){let Pe=Ie+Ne*m;if(Pe<0||Pe>=u.inWidth)continue;let dt=ve+Pe*u.inChannels,et=ie+Ne*A[2];for(let Ye=0;Ye<u.inChannels;++Ye){let Qe=I[dt+Ye];for(let Re=0;Re<u.outChannels;++Re)T[be+Re]+=Qe*_[et+Re];et+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},ZK={kernelName:al,backendName:"cpu",kernelFunc:function KK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;ye([a,s],"conv3dBackpropFilterV2");let u=w.computeStrides(a.shape),p=w.computeStrides(s.shape),h=N.computeConv3DInfo(a.shape,l,i,1,o),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Rt(h.filterShape,"float32"),x=b.values,[v,I,_,T]=b.strides,E=n.data.get(s.dataId).values,[A,D,F,S]=p,O=n.data.get(a.dataId).values,[U,G,j,K]=u,Z=h.padInfo.front,J=h.padInfo.left,Y=h.padInfo.top;for(let te=0;te<m;++te){let ae=Math.max(0,Math.ceil((Z-te)/d)),ne=Math.min(h.outDepth,(h.inDepth+Z-te)/d),se=te*v;for(let ie=0;ie<g;++ie){let ve=Math.max(0,Math.ceil((Y-ie)/c)),pe=Math.min(h.outHeight,(h.inHeight+Y-ie)/c),be=ie*I+se;for(let Ie=0;Ie<y;++Ie){let Ne=Math.max(0,Math.ceil((J-Ie)/f)),Pe=Math.min(h.outWidth,(h.inWidth+J-Ie)/f),Ue=Ie*_+be;for(let dt=0;dt<h.inChannels;++dt){let et=dt*T+Ue;for(let Ye=0;Ye<h.outChannels;++Ye){let Qe=0;for(let Re=0;Re<h.batchSize;++Re){let gt=Re*U,er=Re*A;for(let zt=ae;zt<ne;++zt){let fr=(te+zt*d-Z)*G+gt,dn=zt*D+er;for(let zn=ve;zn<pe;++zn){let mr=(ie+zn*c-Y)*j+fr,Pn=zn*F+dn;for(let lt=Ne;lt<Pe;++lt)Qe+=O[(Ie+lt*f-J)*K+mr+dt]*E[lt*S+Pn+Ye]}}}x[et+Ye]=Qe}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},JK={kernelName:sl,backendName:"cpu",kernelFunc:function XK(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;ye([a],"conv3dBackpropInputV2");let u=w.computeStrides(a.shape),p=w.computeStrides(s.shape),h=N.computeConv3DInfo(l,s.shape,o,1,i),d=new Rt(h.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,I,_]=u,T=n.data.get(s.dataId).values,[E,A,D,F]=p,{batchSize:S,filterDepth:O,filterHeight:U,filterWidth:G,inChannels:j,inDepth:K,inHeight:Z,inWidth:J,outChannels:Y,outDepth:te,outHeight:ae,outWidth:ne,strideDepth:se,strideHeight:ie,strideWidth:ve}=h,pe=O-1-h.padInfo.front,be=U-1-h.padInfo.top,Ie=G-1-h.padInfo.left;for(let Ne=0;Ne<S;++Ne)for(let Pe=0;Pe<j;++Pe)for(let Ue=0;Ue<K;++Ue){let dt=Ue-pe,et=Math.max(0,Math.ceil(dt/se)),Ye=Math.min(te,(O+dt)/se);for(let Qe=0;Qe<Z;++Qe){let Re=Qe-be,gt=Math.max(0,Math.ceil(Re/ie)),er=Math.min(ae,(U+Re)/ie);for(let zt=0;zt<J;++zt){let fr=zt-Ie,dn=Math.max(0,Math.ceil(fr/ve)),zn=Math.min(ne,(G+fr)/ve),mr=0;for(let Pn=et;Pn<Ye;++Pn){let lt=Pn*se-dt;for(let Bn=gt;Bn<er;++Bn){let tr=Bn*ie-Re;for(let $a=dn;$a<zn;++$a){let ha=x*Ne+v*Pn+I*Bn+_*$a,Kd=E*(O-1-lt)+A*(U-1-tr)+D*(G-1-($a*ve-fr))+F*Pe;for(let Ar=0;Ar<Y;++Ar)mr+=b[ha+Ar]*T[Kd+Ar]}}}c[f*Ne+m*Ue+g*Qe+y*zt+Pe]=mr}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},YK=rt(Hs,e=>Math.cos(e)),QK={kernelName:Hs,backendName:"cpu",kernelFunc:YK},e8=rt(js,e=>Math.cosh(e)),t8={kernelName:js,backendName:"cpu",kernelFunc:e8},r8={kernelName:ol,backendName:"cpu",kernelFunc:function n8(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[p,h,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Me([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,I=w.computeStrides(a.shape),_=w.computeStrides(y.shape);for(let T=0;T<f;T++){let E=4*T,A=b[E],D=b[E+1],F=b[E+2],S=b[E+3],O=x[T];if(O>=p)continue;let U=m>1?(F-A)*(h-1)/(m-1):0,G=g>1?(S-D)*(d-1)/(g-1):0;for(let j=0;j<m;j++){let K=m>1?A*(h-1)+j*U:.5*(A+F)*(h-1);if(K<0||K>h-1)for(let Z=0;Z<g;Z++)for(let J=0;J<c;J++)y.values[J+Z*_[2]+j*_[1]+T*_[0]]=u;else if("bilinear"===l){let Z=Math.floor(K),J=Math.ceil(K),Y=K-Z;for(let te=0;te<g;te++){let ae=g>1?D*(d-1)+te*G:.5*(D+S)*(d-1);if(ae<0||ae>d-1){for(let ve=0;ve<c;ve++)y.values[ve+te*_[2]+j*_[1]+T*_[0]]=u;continue}let ne=Math.floor(ae),se=Math.ceil(ae),ie=ae-ne;for(let ve=0;ve<c;ve++){let pe=ve+ne*I[2]+Z*I[1]+O*I[0],be=v[pe];pe=ve+se*I[2]+Z*I[1]+O*I[0];let Ie=v[pe];pe=ve+ne*I[2]+J*I[1]+O*I[0];let Ne=v[pe];pe=ve+se*I[2]+J*I[1]+O*I[0];let Pe=v[pe],Ue=be+(Ie-be)*ie;pe=ve+te*_[2]+j*_[1]+T*_[0],y.values[pe]=Ue+(Ne+(Pe-Ne)*ie-Ue)*Y}}}else for(let Z=0;Z<g;++Z){let J=g>1?D*(d-1)+Z*G:.5*(D+S)*(d-1);if(J<0||J>d-1){for(let ae=0;ae<c;ae++)y.values[ae+Z*_[2]+j*_[1]+T*_[0]]=u;continue}let Y=Math.round(J),te=Math.round(K);for(let ae=0;ae<c;ae++)y.values[ae+Z*_[2]+j*_[1]+T*_[0]]=v[ae+Y*I[2]+te*I[1]+O*I[0]]}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},s8={kernelName:il,backendName:"cpu",kernelFunc:function a8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ye(a,"cumprod");let l=N.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=On({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=N.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=sr(u.dtype,"int32"),d=w.makeOnesTypedArray(w.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=f)for(let b=0;b<f;b++){let x=m(y,b);if(0===b)d[x]=i?1:c[x];else{let v=m(y,b-1);d[x]=i?c[v]*d[v]:c[x]*d[v]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let b=On({inputs:{x:g},backend:n,attrs:{perm:N.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}},o8={kernelName:qs,backendName:"cpu",kernelFunc:function i8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ye(a,"cumsum");let l=N.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=On({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=N.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=sr(u.dtype,"int32"),d=w.makeZerosTypedArray(w.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=f)for(let b=0;b<f;b++){let x=m(y,b);if(0===b)d[x]=i?0:c[x];else{let v=m(y,b-1);d[x]=i?c[v]+d[v]:c[x]+d[v]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let b=On({inputs:{x:g},backend:n,attrs:{perm:N.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),b}return g}},u8={kernelName:lp,backendName:"cpu",kernelFunc:function l8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let p=tv(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}if(2===a.shape.length){let p=oT(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},d8={kernelName:ll,backendName:"cpu",kernelFunc:function p8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;w.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],p=a.shape[3],h=l*s,d=u*s,c=p/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){let x=Math.floor(b/s),v=b%s;for(let I=0;I<d;++I){let _=Math.floor(I/s),E=(v*s+I%s)*c;for(let A=0;A<c;++A)m[g++]=f[A+E+p*(_+u*(x+l*y))]}}return n.makeTensorInfo([o,h,d,c],a.dtype,m)}};function aC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;ye([a,s],"depthwiseConv2DNative");let p=w.computeStrides(a.shape),h=w.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=N.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,I=c.outChannels/c.inChannels,_=new Rt(c.outShape,a.dtype),T=n.data.get(a.dataId).values,E=n.data.get(s.dataId).values,A=_.values;for(let D=0;D<c.batchSize;++D){let F=D*p[0],S=D*_.strides[0];for(let O=0;O<c.outHeight;++O){let U=S+O*_.strides[1],G=O*c.strideHeight-v;for(let j=0;j<f;++j){let K=G+j*g;if(K<0||K>=c.inHeight)continue;let Z=j*h[0],J=F+K*p[1];for(let Y=0;Y<c.outWidth;++Y){let te=U+Y*_.strides[2],ae=Y*c.strideWidth-x;for(let ne=0;ne<m;++ne){let se=ae+ne*y;if(se<0||se>=c.inWidth)continue;let ve=J+se*c.inChannels,pe=te,be=Z+ne*h[1];for(let Ie=0;Ie<c.inChannels;++Ie){let Ne=T[ve+Ie];for(let Pe=0;Pe<I;++Pe)A[pe+Pe]+=Ne*E[be+Pe];pe+=I,be+=I}}}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}var h8={kernelName:Ks,backendName:"cpu",kernelFunc:aC},f8={kernelName:dh,backendName:"cpu",kernelFunc:function c8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r;ye([a,s],"depthwiseConv2dNativeBackpropFilter");let h=N.computeConv2DInfo(a.shape,p,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new Rt(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,I=new Rt(a.shape,a.dtype,v),_=n.data.get(s.dataId).values,T=new Rt(s.shape,s.dtype,_);for(let E=0;E<f;++E){let A=Math.max(0,Math.ceil((b-E)/d)),D=Math.min(h.outHeight,(h.inHeight+b-E)/d);for(let F=0;F<m;++F){let S=Math.max(0,Math.ceil((y-F)/c)),O=Math.min(h.outWidth,(h.inWidth+y-F)/c);for(let U=0;U<h.outChannels;++U){let G=Math.trunc(U/x),j=U%x,K=0;for(let Z=0;Z<h.batchSize;++Z)for(let J=A;J<D;++J){let Y=E+J*d-b;for(let te=S;te<O;++te)K+=I.get(Z,Y,F+te*c-y,G)*T.get(Z,J,te,U)}g.set(K,E,F,G,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},g8={kernelName:hh,backendName:"cpu",kernelFunc:function m8(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r;ye([a,s],"depthwiseConv2DNativeBackpropInput");let h=w.computeStrides(a.shape),d=w.computeStrides(s.shape),c=N.computeConv2DInfo(p,s.shape,i,o,l,u,!0),f=new Rt(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,I,_]=h,T=n.data.get(s.dataId).values,[E,A,D]=d,{batchSize:F,filterHeight:S,filterWidth:O,inChannels:U,inHeight:G,inWidth:j,outChannels:K,outHeight:Z,outWidth:J,strideHeight:Y,strideWidth:te}=c,ae=S-1-c.padInfo.top,ne=O-1-c.padInfo.left,se=K/U;for(let ie=0;ie<F;++ie)for(let ve=0;ve<U;++ve)for(let pe=0;pe<G;++pe){let be=pe-ae,Ie=Math.max(0,Math.ceil(be/Y)),Ne=Math.min(Z,(S+be)/Y);for(let Pe=0;Pe<j;++Pe){let Ue=Pe-ne,dt=Math.max(0,Math.ceil(Ue/te)),et=Math.min(J,(O+Ue)/te),Ye=0;for(let Qe=Ie;Qe<Ne;++Qe){let Re=Qe*Y-be;for(let gt=dt;gt<et;++gt){let zt=v*ie+I*Qe+_*gt,fr=E*(S-1-Re)+A*(O-1-(gt*te-Ue))+D*ve;for(let dn=0;dn<se;++dn)Ye+=x[zt+(ve*se+dn)]*T[fr+dn]}}m[g*ie+y*pe+b*Pe+ve]=Ye}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},b8={kernelName:up,backendName:"cpu",kernelFunc:function y8(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Me([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},x8={kernelName:Zs,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,p=r.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:I,filterHeight:_,filterWidth:T,dilationHeight:E,dilationWidth:A,outShape:D}=N.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),F=w.sizeFromShape(D),S=D.length,O=w.getArrayFromDType(r.dtype,F);for(let U=0;U<c;++U)for(let G=0;G<y;++G){let j=G*v-x.top;for(let K=0;K<b;++K){let Z=K*I-x.left;for(let J=0;J<g;++J){let Y=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<_;++ae){let ne=j+ae*E;if(ne>=0&&ne<f)for(let se=0;se<T;++se){let ie=Z+se*A;if(ie>=0&&ie<m){let ve=w.locToIndex([U,ne,ie,J],p,w.computeStrides(r.shape)),pe=w.locToIndex([ae,se,J],d,w.computeStrides(a.shape)),be=u[ve]+h[pe];be>Y&&(Y=be)}}}O[w.locToIndex([U,G,K,J],S,w.computeStrides(D))]=Y}}}return{dataId:l.write(w.toTypedArray(O,r.dtype),D,r.dtype),shape:D,dtype:r.dtype}}},v8={kernelName:pl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=w.toNestedArray(r.shape,u.data.get(r.dataId).values),h=w.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:_,dilationHeight:T,dilationWidth:E,outShape:A}=N.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${pl}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let D=w.toNestedArray(A,u.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<d;++S)for(let O=0;O<g;++O){let U=O*x-b.top;for(let G=0;G<y;++G){let j=G*v-b.left;for(let K=0;K<m;++K){let Z=Number.MIN_SAFE_INTEGER,J=0,Y=0;for(let te=0;te<I;++te){let ae=U+te*T;if(ae>=0&&ae<c)for(let ne=0;ne<_;++ne){let se=j+ne*E;if(se>=0&&se<f){let ie=p[S][ae][se][K]+h[te][ne][K];ie>Z&&(Z=ie,J=te,Y=ne)}}}F[J][Y][K]+=D[S][O][G][K]}}}return{dataId:u.write(w.toTypedArray(F,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},w8={kernelName:ul,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=w.toNestedArray(r.shape,u.data.get(r.dataId).values),h=w.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:_,dilationHeight:T,dilationWidth:E,outShape:A}=N.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);w.assert(s.rank===A.length,()=>`Error in ${ul}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let D=w.toNestedArray(A,u.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<d;++S)for(let O=0;O<g;++O){let U=O*x-b.top;for(let G=0;G<y;++G){let j=G*v-b.left;for(let K=0;K<m;++K){let Z=Number.MIN_SAFE_INTEGER,J=U<0?0:U,Y=j<0?0:j;for(let te=0;te<I;++te){let ae=U+te*T;if(ae>=0&&ae<c)for(let ne=0;ne<_;++ne){let se=j+ne*E;if(se>=0&&se<f){let ie=p[S][ae][se][K]+h[te][ne][K];ie>Z&&(Z=ie,J=ae,Y=se)}}}F[S][J][Y][K]+=D[S][O][G][K]}}}return{dataId:u.write(w.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},I8={kernelName:vm,backendName:"cpu",kernelFunc:function k8(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=l?.alpha||1,p=o?.contextType||"2d";if("2d"!==p)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let h=s.getContext(p,o?.contextAttributes||{});if(null==h)throw new Error(`Could not get the context with ${p} type.`);let[d,c]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(c*d*4);for(let x=0;x<d*c;++x){let v=[0,0,0,255*u];for(let _=0;_<f;_++){let T=m[x*f+_];if("float32"===a.dtype){if(T<0||T>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${T}.`)}else if("int32"===a.dtype&&(T<0||T>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${T}.`);1===f?(v[0]=T*g,v[1]=T*g,v[2]=T*g):v[_]=T*g}let I=4*x;y[I+0]=Math.round(v[0]),y[I+1]=Math.round(v[1]),y[I+2]=Math.round(v[2]),y[I+3]=Math.round(v[3])}s.width=c,s.height=d;let b=new ImageData(y,c,d);return h.putImageData(b,0,0),a}};function kd(e){let o,{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"sum"),o="bool"===a.dtype?ls({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):oa({inputs:{x:a},backend:n});let l=o.shape.length,u=w.parseAxisParam(s,o.shape),p=N.getAxesPermutation(u,l),h=u,d=o;null!=p&&(d=On({inputs:{x:o},backend:n,attrs:{perm:p}}),h=N.getInnerMostAxes(h.length,l)),N.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[c,f]=N.computeOutAndReduceShapes(d.shape,h),g=ef(n,c,N.upcastType(d.dtype,"int32")),y=w.sizeFromShape(f),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let v=0;v<b.length;++v){let I=v*y,_=0;for(let T=0;T<y;++T)_+=x[I+T];b[v]=_}if(i){let I=g;g=mt({inputs:{x:g},backend:n,attrs:{shape:N.expandShapeToKeepDim(g.shape,u)}}),n.disposeIntermediateTensorInfo(I)}return n.disposeIntermediateTensorInfo(o),null!=p&&n.disposeIntermediateTensorInfo(d),g}var S8={kernelName:Vi,backendName:"cpu",kernelFunc:kd},_8={kernelName:ch,backendName:"cpu",kernelFunc:function N8(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=N.decodeEinsumEquation(a,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=N.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of p[m]){let x,{permutationIndices:y,expandDims:b}=N.getEinsumPermutation(c,l[g]);N.isIdentityPermutation(y)?x=s[g]:(x=On({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),f.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=mt({inputs:{x},backend:n,attrs:{shape:v}}),f.push(x)),null===d?d=x:(d=tf({inputs:{a:x,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=kd({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},C8={kernelName:dl,backendName:"cpu",kernelFunc:function T8(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;ye([r,a],"eluGrad");let s=new Float32Array(w.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];s[l]=u>=0?o[l]:o[l]*(u+1)}return n.makeTensorInfo(a.shape,"float32",s)}},E8=N.ERF_P,$8=N.ERF_A1,A8=N.ERF_A2,F8=N.ERF_A3,R8=N.ERF_A4,D8=N.ERF_A5,M8=rt(Ys,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+E8*n);return t*(1-((((D8*r+R8)*r+F8)*r+A8)*r+$8)*r*Math.exp(-n*n))}),O8={kernelName:Ys,backendName:"cpu",kernelFunc:M8};function af(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),mt({inputs:{x:a},backend:n,attrs:{shape:o}})}var L8={kernelName:cl,backendName:"cpu",kernelFunc:af},z8=Ft((e,t)=>e/t),fv=jt(Xs,z8),mv={kernelName:Xs,backendName:"cpu",kernelFunc:fv};function sC(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],p=w.sizeFromShape(u),h=w.getTypedArrayFromDType("float32",p),d=w.getTypedArrayFromDType("float32",p);for(let g=0;g<a;g++){let y=Eo({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Eo({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Yn({inputs:{real:y,imag:b},backend:n}),{real:v,imag:I}=P8(x,t,n),_=N.mergeRealAndImagArrays(v,I);for(let T=0;T<s;T++){let E=N.getComplexWithIndex(_,T);h[g*s+T]=E.real,d[g*s+T]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let c=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=Yn({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function P8(e,t,n){let r=w.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function B8(e){return 0==(e&e-1)}(r)){let o=gv(s,i,r,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",o.real),p=n.makeTensorInfo(l,"float32",o.imag),h=n.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),d=oa({inputs:{x:h},backend:n}),c=mv.kernelFunc({inputs:{a:u,b:h},backend:n}),f=mv.kernelFunc({inputs:{a:p,b:d},backend:n}),m=n.data.get(c.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}{let l=function W8(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let l=N.exponent(a*o,t,n),u=N.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(s/=t,i/=t),N.assignToTypedArray(r,s,i,a)}return r}(N.mergeRealAndImagArrays(s,i),r,t);return N.splitRealAndImagArrays(l)}}function gv(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=N.mergeRealAndImagArrays(e,t),i=n/2,o=N.complexWithEvenIndex(s),l=o.real,u=o.imag,p=[l.length],h=a.makeTensorInfo(p,"float32",l),d=a.makeTensorInfo(p,"float32",u),c=Yn({inputs:{real:h,imag:d},backend:a}),f=N.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=Yn({inputs:{real:b,imag:x},backend:a}),I=gv(l,u,i,r,a),_=I.real,T=I.imag,E=[_.length],A=a.makeTensorInfo(E,"float32",_),D=a.makeTensorInfo(E,"float32",T),F=Yn({inputs:{real:A,imag:D},backend:a}),S=gv(m,g,i,r,a),O=S.real,U=S.imag,G=[O.length],j=a.makeTensorInfo(G,"float32",O),K=a.makeTensorInfo(G,"float32",U),Z=Yn({inputs:{real:j,imag:K},backend:a}),J=N.exponents(n,r),Y=[J.real.length],te=a.makeTensorInfo(Y,"float32",J.real),ae=a.makeTensorInfo(Y,"float32",J.imag),ne=Yn({inputs:{real:te,imag:ae},backend:a}),se=tf({inputs:{a:ne,b:Z},backend:a}),ie=Eu({inputs:{a:F,b:se},backend:a}),ve=dv({inputs:{a:F,b:se},backend:a}),pe=To({inputs:{input:ie},backend:a}),be=To({inputs:{input:ve},backend:a}),Ie=$u({inputs:{input:ie},backend:a}),Ne=$u({inputs:{input:ve},backend:a}),Pe=Au({inputs:[pe,be],backend:a,attrs:{axis:0}}),Ue=Au({inputs:[Ie,Ne],backend:a,attrs:{axis:0}}),dt=a.data.get(Pe.dataId).values,et=a.data.get(Ue.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(Z),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(ne),a.disposeIntermediateTensorInfo(se),a.disposeIntermediateTensorInfo(ie),a.disposeIntermediateTensorInfo(ve),a.disposeIntermediateTensorInfo(pe),a.disposeIntermediateTensorInfo(Ie),a.disposeIntermediateTensorInfo(be),a.disposeIntermediateTensorInfo(Ne),a.disposeIntermediateTensorInfo(Pe),a.disposeIntermediateTensorInfo(Ue),{real:dt,imag:et}}var U8={kernelName:fh,backendName:"cpu",kernelFunc:function V8(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],o=mt({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),l=sC(o,!1,n),u=mt({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};function yv(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||w.inferDtype(a),o=w.getArrayFromDType(i,w.sizeFromShape(r));return function H8(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var G8={kernelName:pp,backendName:"cpu",kernelFunc:yv},j8={kernelName:fl,backendName:"cpu",kernelFunc:({inputs:e,backend:n})=>{let{image:r}=e,a=n,s=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,p=a.data.get(r.dataId).values;for(let h=0;h<i;h++){let d=h*l*o*u;for(let c=0;c<o;c++){let f=c*(l*u);for(let m=0;m<l;m++){let g=m*u;for(let y=0;y<u;y++){let b=Math.round(l-m-1),x=d+f+g+y,v=p[x];b>=0&&b<l&&(v=p[d+f+b*u+y]),s[x]=v}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},K8={kernelName:Zi,backendName:"cpu",kernelFunc:function q8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=rC({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let g=m;if("NCHW"===p&&1===i.shape.length&&1!==i.shape[0]){let y=mt({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Eu({inputs:{a:m,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else m=Eu({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(c){let g=m;if("NCHW"===p&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let y=mt({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=rf(n,m,c,y,f),n.disposeIntermediateTensorInfo(y)}else m=rf(n,m,c,o,f);n.disposeIntermediateTensorInfo(g)}return m}},X8={kernelName:Xi,backendName:"cpu",kernelFunc:function Z8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=aC({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let g=m;m=Eu({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=rf(n,m,c,o,f),n.disposeIntermediateTensorInfo(g)}return m}},Y8={kernelName:gl,backendName:"cpu",kernelFunc:function J8(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=w.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,p,h]=N.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let f=yT(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,p,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,f.values)}},eZ={kernelName:ml,backendName:"cpu",kernelFunc:function Q8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;ye([a,s],"gatherV2");let l=w.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,p=a.shape[l];for(let v=0;v<u.length;++v){let I=u[v];w.assert(I<=p-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${p-1}]`)}let h=o;null==o&&(h=0);let d=w.sizeFromShape(s.shape),c=N.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=mt({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=mt({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),x=bT(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}},nZ={kernelName:mh,backendName:"cpu",kernelFunc:function tZ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],o=mt({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),l=sC(o,!0,n),u=mt({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},rZ=rt(ii,e=>Number.isFinite(e)?1:0,"bool"),aZ={kernelName:ii,backendName:"cpu",kernelFunc:rZ},sZ=rt(oi,e=>Math.abs(e)===1/0?1:0,"bool"),iZ={kernelName:oi,backendName:"cpu",kernelFunc:sZ},oZ=rt(li,e=>Number.isNaN(e)?1:0,"bool"),lZ={kernelName:li,backendName:"cpu",kernelFunc:oZ},pZ={kernelName:vl,backendName:"cpu",kernelFunc:function uZ(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=IT(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},dZ=rt(di,e=>Math.log1p(e)),hZ={kernelName:di,backendName:"cpu",kernelFunc:dZ},cZ=Ft((e,t)=>e&&t),fZ=jt(wl,cZ,null,"bool"),mZ={kernelName:wl,backendName:"cpu",kernelFunc:fZ},gZ=rt(kl,e=>e?0:1,"bool"),yZ={kernelName:kl,backendName:"cpu",kernelFunc:gZ},bZ=Ft((e,t)=>e||t),xZ=jt(Il,bZ,null,"bool"),vZ={kernelName:Il,backendName:"cpu",kernelFunc:xZ},kZ={kernelName:hi,backendName:"cpu",kernelFunc:function wZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;ye(a,"LRN");let u=a.shape[3],p=u-1,h=n.data.get(a.dataId).values,d=w.sizeFromShape(a.shape),c=new Float32Array(d);function f(m){let g=m%u,y=m-g+Math.max(0,g-s),b=m-g+Math.min(g+s,p),x=0;for(;y<=b;y++){let v=h[y];x+=v*v}return x}for(let m=0;m<d;m++){let g=f(m),y=h[m]*Math.pow(i+o*g,-l);c[m]=y}return n.makeTensorInfo(a.shape,a.dtype,c)}},SZ={kernelName:Sl,backendName:"cpu",kernelFunc:function IZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;ye(i,"LRNGrad");let h=w.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let x=b%d,v=b-x+Math.max(0,x-o),I=b-x+Math.min(d,x+o+1),_=0;for(let T=v;T<I;T++)_+=Math.pow(f[T],2);_=u*_+l;for(let T=v;T<I;T++){let E=-2*u*p*f[T]*m[b]/_;b===T&&(E+=Math.pow(_,-p)),E*=c[b],g[T]+=E}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function iC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,p=w.parseAxisParam(s,l),h=p,d=N.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(null!=d){let v=new Array(u);for(let I=0;I<v.length;I++)v[I]=l[d[I]];c=av(c,l,a.dtype,d,v),h=N.getInnerMostAxes(h.length,u),l=v}ye(a,"max"),N.assertAxesAreInnerMostDims("max",h,u);let[f,m]=N.computeOutAndReduceShapes(l,h),y=NT(c,w.sizeFromShape(m),f,a.dtype),b=o.write(y,f,a.dtype),x=f;return i&&(x=N.expandShapeToKeepDim(f,p)),{dataId:b,shape:x,dtype:a.dtype}}var NZ={kernelName:ci,backendName:"cpu",kernelFunc:iC},TZ={kernelName:mi,backendName:"cpu",kernelFunc:function _Z(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ye(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(N.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let h,p=N.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&w.arraysEqual(p.inShape,p.outShape))h=oa({inputs:{x:a},backend:n});else{let d=n.data.get(a.dataId).values,c=w.computeStrides(a.shape),f=cv(d,0,a.dtype,c,p,"max");h=n.makeTensorInfo(p.outShape,a.dtype,f.values)}return h}},EZ={kernelName:Nl,backendName:"cpu",kernelFunc:function CZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;ye(a,"maxPool3d");let p=N.computePool3DInfo(a.shape,s,i,1,o,l,u),d=nC(n.data.get(a.dataId).values,0,a.dtype,w.computeStrides(a.shape),p,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},AZ={kernelName:hp,backendName:"cpu",kernelFunc:function $Z(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;ye([a,s],"maxPool3DGrad");let p=N.computePool3DInfo(s.shape,i,o,1,l,u),d=function bK(e,t){let n=Me(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let I=0;I<t.outHeight;++I){let _=I*a-c,T=_;for(;T<0;)T+=o;let E=Math.min(t.inHeight,p+_);for(let A=0;A<t.outWidth;++A){let D=A*s-f,F=D;for(;F<0;)F+=l;let S=Math.min(t.inWidth,h+D),O=Number.NEGATIVE_INFINITY,U=-1;for(let G=x;G<v;G+=i){let j=G-b;for(let K=T;K<E;K+=o){let Z=K-_;for(let J=F;J<S;J+=l){let Y=J-D,te=e.get(m,G,K,J,g);te>=O&&(O=te,U=j*p*h+Z*p+Y)}}}n.set(U,m,y,I,A,g)}}}return n}(n.bufferSync(s),p),c=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterDepth,v=p.effectiveFilterHeight,I=p.effectiveFilterWidth,_=x-1-p.padInfo.front,T=I-1-p.padInfo.left,E=v-1-p.padInfo.top,A=Me(s.shape,"float32"),D=n.bufferSync(a);for(let F=0;F<p.batchSize;++F)for(let S=0;S<p.inChannels;++S)for(let O=0;O<p.inDepth;++O)for(let U=0;U<p.inHeight;++U)for(let G=0;G<p.inWidth;++G){let j=O-_,K=U-E,Z=G-T,J=0;for(let Y=0;Y<x;Y+=g){let te=(j+Y)/c;if(!(te<0||te>=p.outDepth||Math.floor(te)!==te))for(let ae=0;ae<v;ae+=y){let ne=(K+ae)/f;if(!(ne<0||ne>=p.outHeight||Math.floor(ne)!==ne))for(let se=0;se<I;se+=b){let ie=(Z+se)/m;if(ie<0||ie>=p.outWidth||Math.floor(ie)!==ie)continue;let be=x*v*I-1-d.get(F,te,ne,ie,S)===Y*v*I+ae*I+se?1:0;0!==be&&(J+=D.get(F,te,ne,ie,S)*be)}}}A.set(J,F,O,U,G,S)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},RZ={kernelName:dp,backendName:"cpu",kernelFunc:function FZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ye([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=N.computePool2DInfo(o.shape,l,u,1,p,h),c=n.data.get(o.dataId).values,f=Me(d.outShape,o.dtype,tC(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,I=v-1-d.padInfo.left,_=x-1-d.padInfo.top,T=Me(o.shape,"float32"),E=n.data.get(a.dataId).values,A=Me(a.shape,"float32",E);for(let D=0;D<d.batchSize;++D)for(let F=0;F<d.inChannels;++F)for(let S=0;S<d.inHeight;++S)for(let O=0;O<d.inWidth;++O){let U=S-_,G=O-I,j=0;for(let K=0;K<x;K+=y){let Z=(U+K)/m;if(!(Z<0||Z>=d.outHeight||Math.floor(Z)!==Z))for(let J=0;J<v;J+=b){let Y=(G+J)/g;if(Y<0||Y>=d.outWidth||Math.floor(Y)!==Y)continue;let ne=x*v-1-f.get(D,Z,Y,F)===K*v+J?1:0;0!==ne&&(j+=A.get(D,Z,Y,F)*ne)}}T.set(j,D,S,O,F)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},MZ={kernelName:cp,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ye(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,p=N.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=function DZ(e,t,n,r,a){let i=cv(e,0,n,w.computeStrides(t),a,"max"),o=tC(e,t,n,a,!0,r);return[i.values,o.values]}(u,r.shape,r.dtype,o,p),c=l.write(h,p.outShape,r.dtype),f=l.write(d,p.outShape,r.dtype);return[{dataId:c,shape:p.outShape,dtype:r.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}},LZ={kernelName:gi,backendName:"cpu",kernelFunc:function OZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=w.parseAxisParam(s,a.shape),l=N.computeOutAndReduceShapes(a.shape,o)[1],u=w.sizeFromShape(l),p=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));p.push(h);let d=ls({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});p.push(d);let c=fv({inputs:{a:d,b:h},backend:n});p.push(c);let f=kd({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}},PZ={kernelName:yi,backendName:"cpu",kernelFunc:function zZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"min");let o=w.parseAxisParam(s,a.shape),l=o,u=N.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=On({inputs:{x:a},backend:n,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,a.shape.length)),N.assertAxesAreInnerMostDims("min",l,p.shape.length);let[h,d]=N.computeOutAndReduceShapes(p.shape,l),c=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let v=0;v<c;++v){let I=m[b+v];(Number.isNaN(I)||I<x)&&(x=I)}f[y]=x}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let b=mt({inputs:{x:g},backend:n,attrs:{shape:N.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),b}return g}},WZ={kernelName:xi,backendName:"cpu",kernelFunc:function BZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;ye(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),l=s.map(b=>b[0]),u=s.map((b,x)=>b[0]+a.shape[x]),p="reflect"===i?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,c=w.computeStrides(a.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let x=w.indexToLoc(b,m,g);for(let I=0;I<m;I++)x[I]<l[I]?x[I]=2*l[I]-x[I]-p:x[I]>=u[I]&&(x[I]=2*(u[I]-1)-x[I]+p);x=x.map((I,_)=>I-l[_]);let v=w.locToIndex(x,d,c);y[b]=h[v]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},VZ=Ft((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),UZ=jt(vi,VZ),GZ={kernelName:vi,backendName:"cpu",kernelFunc:UZ},HZ=Ma(nh());function oC(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=w.parseAxisParam([o],a.shape),u=iC({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),p=N.expandShapeToKeepDim(u.shape,l),h=mt({inputs:{x:u},backend:n,attrs:{shape:p}}),d=dv({inputs:{a,b:h},backend:n}),c=cT({inputs:{x:d},backend:n}),f=kd({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=mt({inputs:{x:f},backend:n,attrs:{shape:p}}),g=fv({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var jZ={kernelName:Ui,backendName:"cpu",kernelFunc:oC},KZ={kernelName:_l,backendName:"cpu",kernelFunc:function qZ(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;ye(a,"multinomial");let l=o?a:oC({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],c=w.makeZerosTypedArray(w.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let m=f*p,g=new Float32Array(p-1);g[0]=h[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[m+x];let y=HZ.alea(i.toString()),b=f*s;for(let x=0;x<s;++x){let v=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(v<g[I]){c[b+x]=I;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},ZZ=ta.nonMaxSuppressionV3Impl,JZ={kernelName:El,backendName:"cpu",kernelFunc:function XZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;ye(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:h}=ZZ(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},YZ=ta.nonMaxSuppressionV4Impl,eX={kernelName:$l,backendName:"cpu",kernelFunc:function QZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;ye(a,"NonMaxSuppressionPadded");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=YZ(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},tX=ta.nonMaxSuppressionV5Impl,rX={kernelName:Al,backendName:"cpu",kernelFunc:function nX(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;ye(a,"NonMaxSuppressionWithScore");let p=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=tX(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},sX={kernelName:ki,backendName:"cpu",kernelFunc:function aX(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;ye(a,"oneHot");let u=w.sizeFromShape(a.shape),p=new Float32Array(u*i);p.fill(l);let h=n.data.get(a.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(p[d*i+h[d]]=o);return n.makeTensorInfo([...a.shape,i],s,p)}};function sf(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let a=To({inputs:{input:r},backend:n}),s=sf({inputs:{x:a},backend:n}),i=$u({inputs:{input:r},backend:n}),o=sf({inputs:{x:i},backend:n}),l=Yn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}return yv({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var iX={kernelName:Xl,backendName:"cpu",kernelFunc:sf},oX={kernelName:Fl,backendName:"cpu",kernelFunc:function lC(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){let a=To({inputs:{input:r},backend:n}),s=lC({inputs:{x:a},backend:n}),i=$u({inputs:{input:r},backend:n}),o=sf({inputs:{x:i},backend:n}),l=Yn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}return yv({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function uC(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return af({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{w.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=Au({inputs:t.map(p=>{let h=af({inputs:{input:p},backend:n,attrs:{dim:a}});return o.push(h),h}),backend:n,attrs:{axis:a}});return o.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}var lX={kernelName:Rl,backendName:"cpu",kernelFunc:uC},pC={kernelName:Ii,backendName:"cpu",kernelFunc:function uX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;ye(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),l=s.map(y=>y[0]),u=n.data.get(a.dataId).values,p=w.sizeFromShape(a.shape),h=a.shape.length,d=w.computeStrides(a.shape),c=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let y=0;y<p;y++){let b=w.indexToLoc(y,h,d).map((v,I)=>v+l[I]);g[w.locToIndex(b,f,m)]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},pX=Ft((e,t)=>Math.pow(e,t)),dX=jt(Si,pX),hX={kernelName:Si,backendName:"cpu",kernelFunc:dX},fX={kernelName:yh,backendName:"cpu",kernelFunc:function cX(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,l=a.map(y=>n.data.get(y.dataId).values),u=a.map(y=>y.shape),p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[d,c,f]=FT(l,u,p,s.shape,s.dtype,h,i.shape),m=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}},gX={kernelName:bh,backendName:"cpu",kernelFunc:function mX(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=DT(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],r.dtype,p)]}},bX={kernelName:xh,backendName:"cpu",kernelFunc:function yX(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o.map(g=>n.data.get(g.dataId).values),c=o.map(g=>g.shape),[f,m]=LT(u,a.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}},vX={kernelName:fp,backendName:"cpu",kernelFunc:function xX(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=iv(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},wX=rt(Ti,e=>1/e),kX={kernelName:Ti,backendName:"cpu",kernelFunc:wX},SX={kernelName:$i,backendName:"cpu",kernelFunc:function IX(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ye(a,"resizeBilinear");let l=w.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(w.sizeFromShape([h,u,p,f])),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=0,v=y[0]/b[0],I=y[1]/b[1];for(let _=0;_<h;_++)for(let T=0;T<u;T++){let E;E=i?v*(T+.5)-.5:v*T;let A=Math.max(0,Math.floor(E)),D=E-A,F=Math.min(d-1,Math.ceil(E)),S=_*l[0]+A*l[1],O=_*l[0]+F*l[1];for(let U=0;U<p;U++){let G;G=i?I*(U+.5)-.5:I*U;let j=Math.max(0,Math.floor(G)),K=G-j,Z=Math.min(c-1,Math.ceil(G)),J=S+j*l[2],Y=O+j*l[2],te=S+Z*l[2],ae=O+Z*l[2];for(let ne=0;ne<f;ne++){let se=m[J+ne],ie=m[Y+ne],be=se+(m[te+ne]-se)*K;g[x++]=be+(ie+(m[ae+ne]-ie)*K-be)*D}}}return n.makeTensorInfo([h,u,p,f],"float32",g)}},_X={kernelName:Ol,backendName:"cpu",kernelFunc:function NX(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ye([s,a],"resizeBilinearGrad");let o=w.computeStrides(a.shape),[l,u,p,h]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*p*h),m=[i&&d>1?u-1:u,i&&c>1?p-1:p],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let I=0;I<l;I++){let _=I*o[0];for(let T=0;T<d;T++){let E=T*y,A=Math.floor(E),D=Math.min(Math.ceil(E),u-1),F=_+A*o[1],S=_+D*o[1],O=E-A,U=1-O;for(let G=0;G<c;G++){let j=G*b,K=Math.floor(j),Z=Math.min(Math.ceil(j),p-1),J=j-K,Y=1-J,te=F+K*o[2],ae=F+Z*o[2],ne=S+K*o[2],se=S+Z*o[2],ie=U*Y,ve=U*J,pe=O*Y,be=O*J;for(let Ie=0;Ie<h;Ie++){let Ne=x[v++];f[te+Ie]+=Ne*ie,f[ae+Ie]+=Ne*ve,f[ne+Ie]+=Ne*pe,f[se+Ie]+=Ne*be}}}}return n.makeTensorInfo([l,p,u,h],"float32",f)}},CX={kernelName:Ei,backendName:"cpu",kernelFunc:function TX(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ye(a,"resizeNearestNeighbor");let l=w.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*p*f),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=y[0]/b[0],v=y[1]/b[1],I=0;for(let _=0;_<h;_++){let T=_*l[0];for(let E=0;E<u;E++){let A=i?x*(E+.5):x*E,D=Math.min(d-1,s?Math.round(A):Math.floor(A));i&&(D=Math.max(0,D));let F=T+D*l[1];for(let S=0;S<p;S++){let O=i?v*(S+.5):v*S,U=Math.min(c-1,s?Math.round(O):Math.floor(O));i&&(U=Math.max(0,U));let G=F+U*l[2];for(let j=0;j<f;j++)g[I++]=m[G+j]}}}return n.makeTensorInfo([h,u,p,f],a.dtype,g)}},$X={kernelName:Ml,backendName:"cpu",kernelFunc:function EX(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ye([s,a],"resizeNearestNeighborGrad");let o=w.computeStrides(a.shape),l=w.computeStrides(s.shape),[u,p,h,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*p*h*d),g=n.data.get(s.dataId).values,y=[i&&c>1?p-1:p,i&&f>1?h-1:h],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],I=1/x,_=1/v,T=2*Math.ceil(I)+2,E=2*Math.ceil(_)+2;for(let A=0;A<u;A++){let D=A*o[0];for(let F=0;F<p;F++){let S=D+F*o[1],O=Math.floor(F*I),U=Math.floor(O-T/2);for(let G=0;G<h;G++){let j=S+G*o[2],K=Math.floor(G*_),Z=Math.floor(K-E/2);for(let J=0;J<d;J++){let Y=0;for(let te=0;te<T;te++){let ae=te+U;if(ae<0||ae>=c)continue;let ne=D+ae*l[1],se=ae*x;if(F===Math.min(p-1,i?Math.round(se):Math.floor(se)))for(let ve=0;ve<E;ve++){let pe=ve+Z;if(pe<0||pe>=f)continue;let be=ne+pe*l[2],Ie=pe*v;G===Math.min(h-1,i?Math.round(Ie):Math.floor(Ie))&&(Y+=g[be+J])}}m[j+J]=Y}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},FX={kernelName:Fi,backendName:"cpu",kernelFunc:function AX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;ye(a,"reverse");let i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(0===i)return oa({inputs:{x:a},backend:n});let l=new Rt(a.shape,a.dtype),u=n.bufferSync(a);for(let p=0;p<l.size;p++){let h=l.indexToLoc(p),d=h.slice();o.forEach(c=>d[c]=a.shape[c]-1-d[c]),l.set(u.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},RX={kernelName:Jl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[u,p,h,d]=r.shape,[c,f]=N.getImageCenter(i,p,h),g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let v=x*h*p*d;for(let I=0;I<p;I++){let _=I*(h*d);for(let T=0;T<h;T++){let E=T*d;for(let A=0;A<d;A++){let D=[u,I,T,A],F=D[2],S=D[1],O=(F-c)*y-(S-f)*g,U=(F-c)*g+(S-f)*y;O=Math.round(O+c),U=Math.round(U+f);let G=s;"number"!=typeof s&&(G=3===A?255:s[A]),O>=0&&O<h&&U>=0&&U<p&&(G=b[v+U*(h*d)+O*d+A]),l[v+_+E+A]=G}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},DX=rt(Ri,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),MX={kernelName:Ri,backendName:"cpu",kernelFunc:DX},LX={kernelName:Ll,backendName:"cpu",kernelFunc:function OX(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=N.calculateShapes(s,a,i),m=Co(n.bufferSync(a),n.bufferSync(s),i,h,u,l,o,p,0,!0);return n.makeTensorInfo(i,m.dtype,m.values)}};function zX(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function PX(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}var VX={kernelName:Pl,backendName:"cpu",kernelFunc:function WX(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,u=function BX(e,t,n,r,a,s){let i=w.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let l=e.slice(o*r,(o+1)*r),u=o*a;for(let p=0;p<a;++p)i[u+p]="left"===s?zX(l,t[p+u]):PX(l,t[p+u])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",u)}},GX={kernelName:Bl,backendName:"cpu",kernelFunc:function UX(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;ye([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=sr(a.dtype,s.dtype),h=w.makeZerosTypedArray(w.sizeFromShape(a.shape),p),d=0,c=0===i||i>1||1===a.shape.length?1:w.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<c;m++)h[d++]=1===o[f]?l[f]:u[f];return n.makeTensorInfo(a.shape,p,h)}},HX=N.SELU_SCALEALPHA,jX=N.SELU_SCALE,qX=rt(Mi,e=>e>=0?jX*e:HX*(Math.exp(e)-1)),KX={kernelName:Mi,backendName:"cpu",kernelFunc:qX},ZX=rt(zi,e=>e<0?-1:e>0?1:0),XX={kernelName:zi,backendName:"cpu",kernelFunc:ZX},JX=rt(Oi,e=>Math.sin(e)),YX={kernelName:Oi,backendName:"cpu",kernelFunc:JX},QX=rt(Li,e=>Math.sinh(e)),e7={kernelName:Li,backendName:"cpu",kernelFunc:QX},dC=Math.log(1.1920928955078125e-7)+2,n7=rt(Bi,e=>{let a,t=e>-dC,n=e<dC,r=Math.exp(e);return a=n?r:t?e:Math.log(1+r),a}),r7={kernelName:Bi,backendName:"cpu",kernelFunc:n7},s7={kernelName:Vl,backendName:"cpu",kernelFunc:function a7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ye([a],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=pC.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=N.getReshaped(u.shape,s,o,!1),h=N.getPermuted(p.length,s.length,!1),d=N.getReshapedPermuted(u.shape,s,o,!1),c=mt({inputs:{x:u},backend:n,attrs:{shape:p}}),f=On({inputs:{x:c},backend:n,attrs:{perm:h}}),m=mt({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}},o7={kernelName:mp,backendName:"cpu",kernelFunc:function i7(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values[0],[h,d,c,f,m]=BT(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},u7={kernelName:Gl,backendName:"cpu",kernelFunc:function l7(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,p,h]=WT(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},d7={kernelName:gp,backendName:"cpu",kernelFunc:function p7(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=ov(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}},c7={kernelName:yp,backendName:"cpu",kernelFunc:function h7(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=ov(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}},m7={kernelName:Hl,backendName:"cpu",kernelFunc:function f7(e){let m,{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=N.calculateShapes(s,a,o),c=!1,f=n.bufferSync(a);switch(s.dtype){case"bool":m=Co(f,n.bufferSync(s),o,d,p,u,l,h,!!n.data.get(i.dataId).values[0],c);break;case"float32":case"int32":m=Co(f,n.bufferSync(s),o,d,p,u,l,h,n.data.get(i.dataId).values[0],c);break;case"string":m=Co(f,n.bufferSync(s),o,d,p,u,l,h,w.decodeString(n.data.get(i.dataId).values[0]),c);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},y7={kernelName:Ul,backendName:"cpu",kernelFunc:function g7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=N.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(h=>{let d=[...p];d[o]=h;let c=Eo({inputs:{x:a},backend:n,attrs:{begin:u,size:d}});return u[o]+=h,c})}},b7={kernelName:bp,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ye(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},x7=rt(Wa,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),v7={kernelName:Wa,backendName:"cpu",kernelFunc:x7},k7={kernelName:jl,backendName:"cpu",kernelFunc:function w7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r;ye(a,"stridedSlice");let I,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Vt.sliceInfo(a.shape,s,i,o,l,u,p,h,d);if(m)I=mt({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let _=Vt.computeOutShape(b,x,v),T=Eo({inputs:{x:a},backend:n,attrs:{begin:b,size:_}});I=mt({inputs:{x:T},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(T)}else{let T=GT(c,n.bufferSync(a),v,b);I=n.makeTensorInfo(f,T.dtype,T.values)}return I}},S7={kernelName:vp,backendName:"cpu",kernelFunc:function I7(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.data.get(p.dataId).values,c=n.data.get(h.dataId).values,[f,m]=lv(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},_7={kernelName:wp,backendName:"cpu",kernelFunc:function N7(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,p,h]=uv(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},C7={kernelName:kp,backendName:"cpu",kernelFunc:function T7(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let o=pv(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",o)}},E7=rt(ji,e=>Math.tan(e)),$7={kernelName:ji,backendName:"cpu",kernelFunc:E7},A7=rt(qi,e=>Math.tanh(e)),D7={kernelName:zl,backendName:"cpu",kernelFunc:function R7(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:p}=N.calculateShapes(s,a,r.shape),d=n.bufferSync(a),c=n.bufferSync(s),f=n.bufferSync(r),m=Co(d,c,r.shape,p,l,o,i,u,f,!1);return n.makeTensorInfo(r.shape,m.dtype,m.values)}},O7={kernelName:Ba,backendName:"cpu",kernelFunc:function M7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;ye(a,"tile");let i=jT(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},z7={kernelName:ql,backendName:"cpu",kernelFunc:function L7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;ye(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=KT(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},B7={kernelName:Kl,backendName:"cpu",kernelFunc:function P7(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=a.shape,[f,m]=u??[h,d],g=[p,f,m,c],y=w.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],I=w.computeStrides(g),_=I[0],T=I[1],E=I[2],A=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(g));A.fill(l);let D=r.data.get(a.dataId).values,F=r.data.get(s.dataId).values;for(let S=0;S<p;++S){let O=1===s.shape[0]?F:F.subarray(8*S,8*S+8);for(let U=0;U<f;++U)for(let G=0;G<m;++G)for(let j=0;j<c;++j){let K,Z=O[6]*G+O[7]*U+1;if(0===Z)continue;let Y=(O[3]*G+O[4]*U+O[5])/Z,te=hC((O[0]*G+O[1]*U+O[2])/Z,d,o),ae=hC(Y,h,o);switch(i){case"nearest":K=H7(D,h,d,b,x,v,S,ae,te,j,l);break;case"bilinear":K=j7(D,h,d,b,x,v,S,ae,te,j,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}A[S*_+U*T+G*E+j]=K}return r.makeTensorInfo(g,a.dtype,A)}return{dataId:r.write(A,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function hC(e,t,n){switch(n){case"reflect":return function W7(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return w.clamp(0,n,t-1)}(e,t);case"wrap":return function V7(e,t){let n=e;return n<0?t<=1?n=0:n+=t*(Math.trunc(-n/(t-1))+1):n>t-1&&(t<=1?n=0:n-=t*Math.trunc(n/(t-1))),w.clamp(0,n,t-1)}(e,t);case"nearest":return function G7(e,t){return w.clamp(0,e,t-1)}(e,t);default:return function U7(e,t){return e}(e)}}function Id(e,t,n,r,a,s,i,o,l,u,p){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:p}function H7(e,t,n,r,a,s,i,o,l,u,p){return Id(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,p)}function j7(e,t,n,r,a,s,i,o,l,u,p){let h=Math.floor(o),d=Math.floor(l),c=h+1,f=d+1;return(c-o)*((f-l)*Id(e,t,n,r,a,s,i,h,d,u,p)+(l-d)*Id(e,t,n,r,a,s,i,h,f,u,p))+(o-h)*((f-l)*Id(e,t,n,r,a,s,i,c,d,u,p)+(l-d)*Id(e,t,n,r,a,s,i,c,f,u,p))}var K7={kernelName:Ip,backendName:"cpu",kernelFunc:function q7(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ye(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=hv(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},X7={kernelName:Zl,backendName:"cpu",kernelFunc:function Z7(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let d=new Array(o);for(let c=0;c<d.length;c++){p[s]=c;let f=Eo({inputs:{x:a},backend:n,attrs:{begin:p,size:h}});d[c]=mt({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}},Y7={kernelName:Sp,backendName:"cpu",kernelFunc:function J7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;ye(a,"unsortedSegmentSum");let u=[],p=[],h=a.shape.length-s.shape.length,d=s;for(let f=0;f<h;++f){let m=af({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,p.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=dT({inputs:{a:g,b:d},backend:n}),b=ls({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=tf({inputs:{a:b,b:a},backend:n}),v=kd({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});u.push(v),p.push(g),p.push(y),p.push(b),p.push(x),p.push(v)}let c=uC({inputs:u,backend:n,attrs:{axis:0}});return p.forEach(f=>n.disposeIntermediateTensorInfo(f)),c}},Q7=[jq,_5,Kq,Xq,F5,Yq,eK,nK,aK,iK,lK,pK,hK,mK,yK,vK,kK,SK,_K,Gq,CK,$K,FK,D5,DK,$5,O5,OK,T5,zK,BK,WK,UK,HK,qK,ZK,JK,QK,t8,r8,s8,o8,u8,d8,h8,f8,g8,b8,x8,v8,w8,I8,_8,Lq,C8,L5,O8,z5,L8,B5,U8,G8,j8,V5,G5,K8,X8,Y8,eZ,j5,K5,C5,nZ,PK,aZ,iZ,lZ,zq,X5,Y5,pZ,eq,hZ,mZ,yZ,vZ,kZ,SZ,NZ,nq,TZ,EZ,AZ,RZ,MZ,LZ,PZ,aq,WZ,GZ,KZ,iq,lq,JZ,eX,rX,pq,sX,oX,lX,pC,hX,Bq,cq,fX,gX,bX,vX,E5,mv,kX,Wq,Vq,Uq,SX,_X,CX,$X,FX,RX,MX,wq,LX,VX,GX,KX,Iq,XX,YX,e7,Sq,jZ,r7,s7,o7,u7,d7,c7,m7,y7,Tq,b7,Eq,Aq,v7,k7,S7,_7,C7,Mq,S8,$7,{kernelName:qi,backendName:"cpu",kernelFunc:A7},D7,O7,z7,B7,dq,K7,X7,Y7,iX];for(let e of Q7)_p(e);var cC={};_e(cC,{assertNotComplex:()=>Ru,bindCanvasToFramebuffer:()=>p9,bindColorTextureToFramebuffer:()=>pf,bindTextureToProgramUniformSampler:()=>EC,bindTextureUnit:()=>_C,bindVertexBufferToProgramAttribute:()=>vv,callAndCheck:()=>he,canBeRepresented:()=>mC,createFragmentShader:()=>bC,createFramebuffer:()=>NC,createProgram:()=>xC,createStaticIndexBuffer:()=>kC,createStaticVertexBuffer:()=>wC,createTexture:()=>IC,createVertexShader:()=>yC,getBatchDim:()=>Ao,getExtensionOrThrow:()=>_d,getFramebufferErrorMessage:()=>$C,getMaxTexturesInShader:()=>DC,getNumChannels:()=>l9,getProgramUniformLocation:()=>CC,getProgramUniformLocationOrThrow:()=>TC,getRowsCols:()=>Fo,getShapeAs3D:()=>Cd,getTextureShapeFromLogicalShape:()=>FC,getWebGLDisjointQueryTimerVersion:()=>MC,getWebGLErrorMessage:()=>gC,getWebGLMaxTextureSize:()=>RC,hasExtension:()=>dr,isCapableOfRenderingToFloatTexture:()=>OC,isDownloadFloatTextureEnabled:()=>LC,isReshapeFree:()=>Ed,isWebGLFenceEnabled:()=>zC,isWebGLVersionEnabled:()=>kv,linkProgram:()=>vC,logShaderSourceAndInfoLog:()=>xv,resetMaxTextureSize:()=>d9,resetMaxTexturesInShader:()=>h9,unbindColorTextureFromFramebuffer:()=>wv,unbindTextureUnit:()=>u9,validateFramebuffer:()=>Td,validateProgram:()=>uf,validateTextureSize:()=>SC});var Sd,pr,ln,$o={},of={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function fC(e,t){$o[e]=t}function Hr(e,t){if(!(e in $o)||null!=t){let r=function t9(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??function e9(e){if(!H().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&2===e)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete $o[e]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(of.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",of)||n.getContext("experimental-webgl",of):n.getContext("webgl2",of)}(e,t);if(null===r)return console.log("Could not get context for WebGL version",e),null;$o[e]=r}let n=$o[e];return null==n||n.isContextLost()?(delete $o[e],Hr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),$o[e])}function Nd(e,t){return[t,e]}function lf(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function Fu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function bv(e,t){let r,a,s,i,o,l,u,p,h,d,n=e;return 2===H().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,p=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,p=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:p,textureTypeHalfFloat:h,textureTypeFloat:d}}function he(e,t){let n=t();return H().getBool("DEBUG")&&function a9(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+gC(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Sd||(Sd={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(pr||(pr={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ln||(ln={}));var s9=5.96e-8,i9=65504;function mC(e){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||s9<Math.abs(e)&&Math.abs(e)<i9)}function gC(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function _d(e,t){return Ca(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function yC(e,t){let n=Ca(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(he(e,()=>e.shaderSource(n,t)),he(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function bC(e,t){let n=Ca(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(he(e,()=>e.shaderSource(n,t)),he(e,()=>e.compileShader(n)),H().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw xv(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var hf,cf,o9=/ERROR: [0-9]+:([0-9]+):/g;function xv(e,t){let n=o9.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((h,d)=>w.rightPad((d+1).toString(),s)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),p=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${w.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}function xC(e){return Ca(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function vC(e,t){if(he(e,()=>e.linkProgram(t)),!H().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function uf(e,t){if(he(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function wC(e,t){let n=Ca(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),he(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function kC(e,t){let n=Ca(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return he(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),he(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function l9(){return 2===H().getNumber("WEBGL_VERSION")?1:4}function IC(e){return Ca(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function SC(e,t){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function NC(e){return Ca(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function vv(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),he(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),he(e,()=>e.enableVertexAttribArray(o)),!0)}function _C(e,t,n){AC(e,n),he(e,()=>e.activeTexture(e.TEXTURE0+n)),he(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function u9(e,t){AC(e,t),he(e,()=>e.activeTexture(e.TEXTURE0+t)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function TC(e,t,n){return Ca(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function CC(e,t,n){return e.getUniformLocation(t,n)}function EC(e,t,n,r){he(e,()=>_C(e,t,r)),he(e,()=>e.uniform1i(n,r))}function p9(e){he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),he(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),he(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function pf(e,t,n){he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),he(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function wv(e,t){he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),he(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Td(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+$C(e,t))}function $C(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ca(e,t,n){let r=he(e,()=>t());if(null==r)throw new Error(n);return r}function AC(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function Ao(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Fo(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Cd(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Ao(e),...Fo(e)]),t}function FC(e,t=!1){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map((o,l)=>l>=e.length-2?w.nearestLargerEven(e[l]):e[l])).length&&(e=[2,e[0]])),2!==e.length&&(e=w.squeezeShape(e).newShape);let a=w.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let o=Ao(e),l=2,u=2;e.length&&([l,u]=Fo(e)),a=o*(l/2)*(u/2),s=w.sizeToSquarishShape(a).map(p=>2*p)}else s=w.sizeToSquarishShape(a);return s}function df(e){return e%2==0}function Ed(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||df(n)&&df(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&df(e[0])&&df(t[0])}function RC(e){if(null==hf){let t=Hr(e);hf=t.getParameter(t.MAX_TEXTURE_SIZE)}return hf}function d9(){hf=null}function h9(){cf=null}function DC(e){if(null==cf){let t=Hr(e);cf=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,cf)}function MC(e){if(0===e)return 0;let t,n=Hr(e);return t=dr(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:dr(n,"EXT_disjoint_timer_query")?1:0,t}function dr(e,t){return null!=e.getExtension(t)}function kv(e){try{if(null!=Hr(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function OC(e){if(0===e)return!1;let t=Hr(e);if(1===e){if(!dr(t,"OES_texture_float"))return!1}else if(!dr(t,"EXT_color_buffer_float"))return!1;return Iv(t)}function LC(e){if(0===e)return!1;let t=Hr(e);if(1!==e){if(dr(t,"EXT_color_buffer_float"))return Iv(t);let n="EXT_color_buffer_half_float";if(dr(t,n)){let r=t.getExtension(n);return function c9(e,t){let n=bv(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,r)}return!1}return!(!dr(t,"OES_texture_float")||!dr(t,"WEBGL_color_buffer_float"))&&Iv(t)}function Iv(e){let t=bv(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function zC(e){return 2===e&&null!=Hr(e).fenceSync}function Ru(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{null!=n&&w.assert("complex64"!==n.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var xe=H();function Nn(){let e,t,n,r,a,s,i,o,l,u;return 2===H().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=H().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Ro(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>`int ${e[s]} = ${n} / ${a}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`};`).join("")}function ff(e,t,n="index"){let r=w.computeStrides(t);return r.map((a,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`).join("")}function Sv(e){let t=w.computeStrides(e).map(n=>n.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}xe.registerFlag("HAS_WEBGL",()=>xe.getNumber("WEBGL_VERSION")>0),xe.registerFlag("WEBGL_VERSION",()=>kv(2)?2:kv(1)?1:0),xe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),xe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===xe.get("WEBGL_VERSION")),xe.registerFlag("WEBGL_CPU_FORWARD",()=>!0),xe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),xe.registerFlag("WEBGL_PACK",()=>xe.getBool("HAS_WEBGL")),xe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_PACK_CLIP",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_PACK_REDUCE",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_LAZILY_UNPACK",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_CONV_IM2COL",()=>xe.getBool("WEBGL_PACK")),xe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>RC(xe.getNumber("WEBGL_VERSION"))),xe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>DC(xe.getNumber("WEBGL_VERSION"))),xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=xe.getNumber("WEBGL_VERSION");return 0===e?0:MC(e)}),xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>xe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Dp.isMobile()),xe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>OC(xe.getNumber("WEBGL_VERSION"))),xe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!xe.getBool("WEBGL_FORCE_F16_TEXTURES")&&xe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),xe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>LC(xe.getNumber("WEBGL_VERSION"))),xe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>zC(xe.getNumber("WEBGL_VERSION"))),xe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>xe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),xe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),xe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Dp.isMobile()?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),xe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),xe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),xe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),xe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),xe.registerFlag("WEBGL_EXP_CONV",()=>!1),xe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>xe.getBool("IS_TEST")),xe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),xe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),xe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),xe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);var PC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:BC}=N;function g9(e,t,n){let r=[];if(e.forEach(d=>{let c=w.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?r.push(`uniform float ${d.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${d.name};`),r.push(`uniform int offset${d.name};`)),n.enableShapeUniforms){let{uniformShape:f}=_v(n.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(f.length){case 1:r.push(`uniform int ${d.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${d.name}Shape;`)}r.push(`uniform ivec2 ${d.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(d=>{r.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let u,p,a=r.join("\n"),s=e.map(d=>function y9(e,t,n=!1,r){let a="";return a+=n?WC(e,r):Du(e,r),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(a+=n?function X9(e,t){let p,n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=BC(e.shapeInfo.logicalShape,t.logicalShape),l=ot(i),u=i-s,h=["x","y","z","w","u","v"];p=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(g=>`coords.${h[g+u]} = 0;`).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+u]}`).join(", ");let c="return outputValue;",f=1===w.sizeFromShape(e.shapeInfo.logicalShape),m=1===w.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)c=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      vec4 outputValue = get${r}(${d});\n      ${c}\n    }\n  `}(e,t):function J9(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&w.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let d,u=ot(l),p=BC(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,c=["x","y","z","w","u","v"];d=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map(m=>`coords.${c[m+h]} = 0;`).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map((m,g)=>`coords.${c[g+h]}`).join(", "),`\n    float ${a}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(d,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),i=t.texShape,o=Nn(),l=function v9(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o),h=function I9(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${S9}\n    ${N9}\n    ${_9}\n  `}(o);return t.isPacked?(u=function b9(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function C9(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function O9(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function $9(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function F9(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),p=function k9(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function x9(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function E9(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function L9(e,t,n){return w.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function A9(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ff(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=Ro(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function R9(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ff(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=Ro(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function D9(e,t){let n=Ro(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function M9(e,t){let n=Ro(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),p=function w9(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=T9),[h,l,p,a,u,s,n.userCode].join("\n")}function Du(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function P9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=Do(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function W9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Mu(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=Do(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function U9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&w.arraysEqual(n,s))return t?`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${s[0]}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let{newShape:i,keptDims:o}=w.squeezeShape(n);if(i.length<n.length){let c=["row","col"];return`\n      ${Du(Ou(e,i),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${Lu(c,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Mu(e)}\n      }\n    `;let u=s[0],p=s[1],h=Do(r);return 1===p?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${p}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function H9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=w.squeezeShape(n);if(o.length<n.length){let g=["row","col","depth"];return`\n        ${Du(Ou(e,o),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${Lu(g,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Mu(e)}\n      }\n    `;let p=e.shapeInfo.texShape,h=p[0],d=p[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=Do(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function q9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(n);if(l.length<n.length){let x=["row","col","depth","depth2"];return`\n      ${Du(Ou(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${Lu(x,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${Mu(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=Do(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function K9(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=w.squeezeShape(t);if(l.length<t.length){let g=["row","col","depth","depth2","depth3"];return`\n      ${Du(Ou(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Lu(g,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${Mu(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1];return c===o&&null==p?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:c===a&&null==p?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${Do(n)};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function Z9(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=w.squeezeShape(t);if(a.length<t.length){let y=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Du(Ou(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Lu(y,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,p=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Mu(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];return f===p&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${Do(n)};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function WC(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function z9(e){let t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${Nn().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function B9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=Nn();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function V9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=Nn();if(null!=s&&w.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function G9(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let c=[1,2],m=["b","row","col"];return`\n        ${WC(Ou(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${Lu(m,c)});\n        }\n      `}let o=Nn();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],p=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p*Math.ceil(n[1]/2)}, ${p}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function j9(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Nn();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],h=Math.ceil(s[i-1]/2),d=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,d*=s[i-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${p};\n      int texC = index - texR * ${p};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var S9="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",N9="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_9="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",T9="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Do(e){return`offset${e}`}function Mu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ot(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function _v(e,t,n){let{newShape:r,keptDims:a}=w.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!w.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function Ou(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Lu(e,t){return t.map(n=>e[n]).join(", ")}function UC(e,t,n){let s,i,o,r=[],a=[],l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===H().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));let p=!1;for(let h of t.variableNames){let d={name:h,uniform:e.getUniformLocation(n,h,p),offset:e.getUniformLocation(n,`offset${h}`,p)};t.enableShapeUniforms&&(d.shape=e.getUniformLocation(n,`${h}Shape`,p),d.texShape=e.getUniformLocation(n,`${h}TexShape`,p)),r.push(d)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",p),o=e.getUniformLocation(n,"outShapeStrides",p),i=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms)for(let h of t.customUniforms)a.push(e.getUniformLocation(n,h.name,p));return{variablesLocations:r,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function GC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let a=n.logicalShape,s=t[r],i=s.shape;if(!w.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function cn(e){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var sJ={R:0,G:1,B:2,A:3},HC=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=Nn();this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++)s+=`\n          if(offset == ${i}) {\n            result = values[${sJ[n[i]]}];\n          }`;this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Sv(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}},jC={};function qC(e){let t=Nn();return yC(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function KC(e){return wC(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ZC(e){return kC(e,new Uint16Array([0,1,2,2,1,3]))}function $d(e,t,n,r,a,s){SC(t,n);let i=IC(e),o=e.TEXTURE_2D;return he(e,()=>e.bindTexture(o,i)),he(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),he(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),he(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),he(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===H().getNumber("WEBGL_VERSION")?he(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):he(e,()=>e.texStorage2D(o,1,r,t,n)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function Tv(e){return e.internalFormatFloat}function XC(e,t,n,r){let[a,s]=Nd(t,n);return $d(e,a,s,Tv(r),r.textureFormatFloat,e.FLOAT)}function Cv(e){return e.internalFormatHalfFloat}function JC(e,t,n,r){let[a,s]=Nd(t,n);return $d(e,a,s,Cv(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Ev(e){return e.downloadTextureFormat}function YC(e,t,n,r){let[a,s]=Nd(t,n);return $d(e,a,s,Ev(r),e.RGBA,e.UNSIGNED_BYTE)}function $v(e){return e.internalFormatPackedFloat}function QC(e,t,n,r){let[a,s]=Fu(t,n);return $d(e,a,s,$v(r),e.RGBA,e.FLOAT)}function Av(e){return e.internalFormatPackedHalfFloat}function eE(e,t,n,r){let[a,s]=Fu(t,n);return $d(e,a,s,Av(r),e.RGBA,r.textureTypeHalfFloat)}function tE(e,t,n){return he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),vv(e,t,"clipSpacePos",n,3,20,0)&&vv(e,t,"uv",n,2,20,12)}function nE(e,t,n,r,a,s){let i,o,l;he(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===H().getNumber("WEBGL_VERSION")?he(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):he(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function rE(e,t,n){he(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===H().getNumber("WEBGL_VERSION")?he(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):he(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===H().getNumber("WEBGL_VERSION")?he(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):he(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),he(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function aE(e,t,n,r){let a=e.createBuffer();he(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=16*t*n;return he(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),he(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),he(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function sE(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function iE(e,t,n,r){let[a,s]=Nd(t,n),o=new Uint8Array(function n9(e,t){return e*t}(t*n,4));return he(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function oE(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function r9(e,t){let[n,r]=Fu(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function lE(e,t,n){let r=new Float32Array(t*n*4);return he(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}_e(jC,{bindVertexProgramAttributeStreams:()=>tE,createBufferFromOutputTexture:()=>aE,createFloat16MatrixTexture:()=>JC,createFloat16PackedMatrixTexture:()=>eE,createFloat32MatrixTexture:()=>XC,createIndexBuffer:()=>ZC,createPackedMatrixTexture:()=>QC,createUnsignedBytesMatrixTexture:()=>YC,createVertexBuffer:()=>KC,createVertexShader:()=>qC,downloadByteEncodedFloatMatrixFromOutputTexture:()=>iE,downloadFloat32MatrixFromBuffer:()=>sE,downloadMatrixFromPackedOutputTexture:()=>lE,downloadPackedMatrixFromBuffer:()=>oE,getInternalFormatForFloat16MatrixTexture:()=>Cv,getInternalFormatForFloat16PackedMatrixTexture:()=>Av,getInternalFormatForFloat32MatrixTexture:()=>Tv,getInternalFormatForPackedMatrixTexture:()=>$v,getInternalFormatForUnsignedBytesMatrixTexture:()=>Ev,uploadDenseMatrixToTexture:()=>nE,uploadPixelDataToTexture:()=>rE});var mf=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=H().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,fC(t,e)):this.gl=Hr(t),e=this.gl,2===H().getNumber("WEBGL_VERSION")){let a=e;this.createVertexArray=()=>he(a,()=>a.createVertexArray()),this.bindVertexArray=s=>he(a,()=>a.bindVertexArray(s)),this.deleteVertexArray=s=>he(a,()=>a.deleteVertexArray(s)),this.getVertexArray=()=>he(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(null!=e){let a=e.getExtension("OES_vertex_array_object");if(null==a)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>he(e,()=>a.createVertexArrayOES()),this.bindVertexArray=s=>he(e,()=>a.bindVertexArrayOES(s)),this.deleteVertexArray=s=>he(e,()=>a.deleteVertexArrayOES(s)),this.getVertexArray=()=>he(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===H().getNumber("WEBGL_VERSION")){let s="OES_texture_half_float";if(this.textureFloatExtension=_d(this.gl,"OES_texture_float"),dr(this.gl,s))this.textureHalfFloatExtension=_d(this.gl,s);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),dr(this.gl,r))this.colorBufferHalfFloatExtension=_d(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",dr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!dr(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=KC(this.gl),this.indexBuffer=ZC(this.gl),this.framebuffer=NC(this.gl),this.textureConfig=bv(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;he(e,()=>e.finish()),he(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),he(e,()=>e.deleteFramebuffer(this.framebuffer)),he(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),he(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),he(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),XC(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),JC(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),YC(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),rE(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),nE(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),eE(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),QC(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(wv(this.gl,this.framebuffer),this.outputTexture=null),he(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>iE(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return oE(this.gl,e,0,0,0,a,s)}downloadFloat32MatrixFromBuffer(e,t){return sE(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=aE(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(H().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=r.clientWaitSync(a,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=a}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>lE(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=qC(t));let n=xC(t);he(t,()=>t.attachShader(n,this.vertexShader)),he(t,()=>t.attachShader(n,e)),vC(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&uf(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;he(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),tE(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(he(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&uf(this.gl,this.program),he(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?TC(this.gl,e,t):CC(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),he(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),EC(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=Fu(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&uf(this.gl,this.program),Td(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}he(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),he(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=_d(this.gl,2===H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();return void t.endQuery(n.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(e){var t=this;return(0,R.Z)(function*(){return yield w.repeatedTry(()=>t.disposed||t.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),t.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(e,t){if(0===t)return null;if(2===t){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function oJ(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in H().platform&&(n=H().platform.setTimeoutCustom.bind(H().platform)),w.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),pf(this.gl,e,this.framebuffer),this.debug&&Td(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(pf(this.gl,this.outputTexture,this.framebuffer),this.debug&&Td(this.gl)):wv(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;pf(r,e,this.framebuffer),this.debug&&Td(r),this.outputTexture=e,he(r,()=>r.viewport(0,0,t,n)),he(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),he(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:lJ,bincountImpl:uE,bincountReduceImpl:uJ,bitwiseAndImpl:pJ,castImpl:dJ,ceilImpl:hJ,concatImpl:cJ,equalImpl:fJ,expImpl:mJ,expm1Impl:gJ,floorImpl:yJ,gatherNdImpl:bJ,gatherV2Impl:xJ,greaterImpl:vJ,greaterEqualImpl:wJ,lessImpl:kJ,lessEqualImpl:IJ,linSpaceImpl:SJ,logImpl:NJ,maxImpl:_J,maximumImpl:TJ,minimumImpl:CJ,multiplyImpl:EJ,negImpl:$J,notEqualImpl:AJ,prodImpl:FJ,raggedGatherImpl:RJ,raggedRangeImpl:DJ,raggedTensorToTensorImpl:MJ,rangeImpl:OJ,rsqrtImpl:LJ,scatterImpl:zJ,sigmoidImpl:PJ,simpleAbsImpl:pE,sliceImpl:BJ,sparseFillEmptyRowsImpl:WJ,sparseReshapeImpl:VJ,sparseSegmentReductionImpl:dE,sqrtImpl:UJ,staticRegexReplaceImpl:GJ,stridedSliceImpl:HJ,stringNGramsImpl:jJ,stringSplitImpl:qJ,stringToHashBucketFastImpl:KJ,subImpl:ZJ,tileImpl:XJ,topKImpl:JJ,transposeImpl:Fv,uniqueImpl:YJ}=Qx;function hE(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function _n(e,t){return 1===t?[e]:hE(e,t)}var cE=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length);let n="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+=`\n        ${a}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function tY(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function m9(e,t,n="index"){let a=function f9(e,t){let n=e.length,r=e.map(s=>`${t}[${s}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}(e.map((s,i)=>i),t);return a.map((s,i)=>`int ${e[i]} = ${n} / ${a[i]}; ${i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`};`).join("")}(["r","c","d"],"inputShape"):Ro(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Sv(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function fE(e,t,n,r,a){let i,s=function aY(e,t){switch(e){case ln.PACKED_2X2_FLOAT32:return $v(t);case ln.PACKED_2X2_FLOAT16:return Av(t);case ln.UNPACKED_FLOAT32:return Tv(t);case ln.UNPACKED_FLOAT16:return Cv(t);case ln.PACKED_4X1_UNSIGNED_BYTE:return Ev(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[l,u]=Fu(e[0],e[1]);i=l*u}else{let[l,u]=Nd(e[0],e[1]);i=l*u}let o=function rY(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F||t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function mE(e,t){if(e===pr.UPLOAD)return ln.PACKED_2X2_FLOAT32;if(e===pr.RENDER||null==e)return function sY(e){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?ln.PACKED_2X2_FLOAT32:ln.UNPACKED_FLOAT32:e?ln.PACKED_2X2_FLOAT16:ln.UNPACKED_FLOAT16}(t);if(e===pr.DOWNLOAD||e===pr.PIXELS)return ln.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function gE(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ua=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},$r="if (isnan(x)) return x;",iY="return x;",yE="return abs(x);",oY="return (x >= 0.0) ? x : (exp(x) - 1.0);",lY=$r+"\n  return (x < 0.0) ? 0.0 : x;\n",uY=$r+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ps="return x;",pY="return 1.0 / (1.0 + exp(-1.0 * x));",dY="return x;",hY="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",cY="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",fY="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",mY="return 1.0 / (1.0 + exp(-1.0 * x));",ds=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},yY=ta.whereImpl,Rv={},wY=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),gf=class extends ep{nextDataId(){return gf.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof mf)t=e;else{let n=Hr(H().getNumber("WEBGL_VERSION"),e);t=new mf(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Hr(H().getNumber("WEBGL_VERSION"));t=new mf(n),this.binaryCache=function vY(e){return e in Rv||(Rv[e]={}),Rv[e]}(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=mE(t,n),a=gE(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let i,s=fE(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].pop();return this.usedTextures[a].push(o),o}return r===ln.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===ln.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===ln.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===ln.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===ln.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=mE(n,r),s=gE(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=fE(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=function IY(){return null==H().global.screen?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new rh(this,wr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=Cd(t),u=new HC(l,!1,s),p=this.runWebGLProgram(u,[i],n,[[r,a]]);return p.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),p.dataId}write(e,t,n){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:pr.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(H().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:pr.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let h;h=o?new ds(i,ps):new ua(i,ps);let d=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:r}],r),c=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),c}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let u,p,l=null!=this.activeTimers;if(l&&(u=w.now()),"complex64"===r){let h=this.readSync(a.real.dataId),d=this.readSync(a.imag.dataId);p=N.mergeRealAndImagArrays(h,d)}else p=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-u),this.convertAndCacheOnCPU(e,p)}read(e){var t=this;return(0,R.Z)(function*(){if(t.pendingRead.has(e)){let f=t.pendingRead.get(e);return new Promise(m=>f.push(m))}let n=t.texData.get(e),{values:r,shape:a,slice:s,dtype:i,complexTensorInfos:o,isPacked:l}=n;if(null!=s){let f;f=l?new ds(a,ps):new ua(a,ps);let m=t.runWebGLProgram(f,[{dataId:e,shape:a,dtype:i}],i),g=t.read(m.dataId);return t.disposeIntermediateTensorInfo(m),g}if(null!=r)return t.convertAndCacheOnCPU(e);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===H().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p,h,u=null;if("complex64"!==i&&H().get("WEBGL_BUFFER_SUPPORTED")){p=t.decode(e);let f=t.texData.get(p.dataId);u=t.gpgpu.createBufferFromTexture(f.texture.texture,...lf(a))}if(t.pendingRead.set(e,[]),"complex64"!==i&&(yield t.gpgpu.createAndWaitForFence()),"complex64"===i){let f=yield Promise.all([t.read(o.real.dataId),t.read(o.imag.dataId)]);h=N.mergeRealAndImagArrays(f[0],f[1])}else if(null==u)h=t.getValuesFromTexture(e);else{let f=w.sizeFromShape(a);h=t.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(null!=p&&t.disposeIntermediateTensorInfo(p),null!=u){let f=t.gpgpu.gl;he(f,()=>f.deleteBuffer(u))}let d=t.convertAndCacheOnCPU(e,h),c=t.pendingRead.get(e);return t.pendingRead.delete(e),c.forEach(f=>f(d)),t.pendingDisposal.has(e)&&(t.pendingDisposal.delete(e),t.disposeData(e)&&wr().removeDataId(e,t),t.pendingDeletes--),d})()}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let d;d=o?new ds(a,ps):new ua(a,ps);let c=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:i}],i),f=this.readToGPU(c,t);return this.disposeIntermediateTensorInfo(c),f}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),p=wr().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:p},h.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(r=>w.decodeString(r));return Me(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!mC(n))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=w.sizeFromShape(t);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let h=this.decode(e),d=this.texData.get(h.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...lf(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(h),c}let s=H().getBool("WEBGL_PACK")&&!0===r,i=s?Cd(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=pr.DOWNLOAD;let t=Nn();this.outputShape=e,this.userCode=`\n      ${PC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=pr.DOWNLOAD;let t=Nn();this.outputShape=e,this.userCode=`\n      ${PC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){var t=this;let n=this.activeTimers,r=[],a=!1;null==this.programTimersStack?(this.programTimersStack=r,a=!0):this.activeTimers.push(r),this.activeTimers=r,e();let s=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>null!=l),i=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>null!=l);this.activeTimers=n,a&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,R.Z)(function*(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=yield Promise.all(s);o.kernelMs=w.sum(l),o.getExtraProfileInfo=()=>l.map((u,p)=>({name:i[p],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return t.uploadWaitMs=0,t.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}getQueryTime(e){var t=this;return(0,R.Z)(function*(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?t.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs})()}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=wY){return H().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>null==this.texData.get(n.dataId).texture&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return yY(e.shape,t)}packedUnaryOp(e,t,n){let r=new ds(e.shape,t),a=this.compileAndRun(r,[e],n);return wr().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let r=pE(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,yE,e.dtype);let t=new ua(e.shape,yE),n=this.compileAndRun(t,[e]);return wr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&w.isString(n[0])){let a=n.map(s=>w.encodeString(s));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return wr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length);let t=e.length,n=_n("rc",t),r=ot(t),a=function QJ(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=cn(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let t=_n("rc",this.rank),n=ot(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`\n        void main() {\n          ${n} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2);return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[Ao(e.shape),...Fo(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Ao(t),...Fo(t)],s=new cE(a,n),l=this.runWebGLProgram(s,[r],e.dtype,[n],!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let h=w.sizeFromShape(a);w.assert(h<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o,i=Cd(a);o=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Sd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Nn();this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ff(["r","c","d"],e):Ro(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Sd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Nn();this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ff(["r","c","d"],e):Ro(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i);let u=[t??lf(i)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Sd.DENSE){let g=s??lf(e.outputShape);o.texShape=g.map(y=>2*y)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===w.sizeFromShape(i.shape))return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map(g=>{if("complex64"===g.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(null==y.texture){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!Ed(y.shape,g.shape)){let b=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),l.push(g),y=this.texData.get(g.dataId),b.shape=x}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);let f,p={shape:i.shape,texData:o,isUniform:!1},h=function eJ(e,t,n){let r="";t.concat(n).forEach(i=>{let o=null!=i.texData&&null!=i.texData.slice&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:p,keptDims:h}=_v(e.packedInputs,i.shape,l),d="",c="",f="";if(1===p.length&&e.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${I[0]>1}_${I[1]>1}`}else if(2!==p.length||e.packedInputs){if(p.length>2&&!e.packedInputs){let I=w.computeStrides(p);f=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}}else c=`${p[0]>1}_${p[1]>1}`;let m=i.shape.length,g=2===p.length&&w.arraysEqual(i.shape,l),y=1===w.sizeFromShape(i.shape),b=N.getBroadcastDims(i.shape,n.shape),x=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(l,n.texData.texShape);r+=`${m}_${x}_${u?h:""}_${p.length}_${y}_${b}_${g}_${d}_${c}_${f}_${e.packedInputs||p.length>2?"":`${l[0]>1}_${l[1]>1}`}_${o}`}else r+=`${i.shape}_${i.isUniform?"uniform":i.texData.texShape}_${o}`});let s=e.constructor.name;return s+="_"+r+"_"+e.userCode+`${H().getNumber("WEBGL_VERSION")}`,s}(e,u,p),d=this.getAndSaveBinary(h,()=>function Y9(e,t,n,r){let a=n.map((p,h)=>{let d={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:!p.isUniform&&p.texData.isPacked,flatOffset:null};return null!=p.texData&&null!=p.texData.slice&&p.texData.slice.flatOffset>0&&(d.flatOffset=p.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),s=a.map(p=>p.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=g9(a,i,t),l=bC(e.gl,o),u=e.createProgram(l);return H().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},UC(e,t,u)))}(this.gpgpu,e,u,p)),c=null!=this.activeTimers;c&&(f=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||function Q9(e,t,n,r,a){t.program.enableShapeUniforms||(GC(t.inShapeInfos,n),GC([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===H().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let u=n[l],{uniform:p,offset:h,shape:d,texShape:c}=t.variablesLocations[l];if(d){let{uniformShape:f}=_v(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:e.gl.uniform1iv(d,new Int32Array(f));break;case 2:e.gl.uniform2iv(d,new Int32Array(f));break;case 3:e.gl.uniform3iv(d,new Int32Array(f));break;case 4:e.gl.uniform4iv(d,new Int32Array(f))}}if(c&&e.gl.uniform2i(c,u.texData.texShape[0],u.texData.texShape[1]),null!=p){if(u.isUniform){if(w.sizeFromShape(u.shape)<2)e.gl.uniform1f(p,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),e.gl.uniform1fv(p,f)}continue}null!=u.texData.slice&&null!=h&&e.gl.uniform1i(h,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,p,l)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let l=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],p=t.customUniformLocations[l],h=a[l];if("float"===u.type)e.gl.uniform1fv(p,h);else if("vec2"===u.type)e.gl.uniform2fv(p,h);else if("vec3"===u.type)e.gl.uniform3fv(p,h);else if("vec4"===u.type)e.gl.uniform4fv(p,h);else if("int"===u.type)e.gl.uniform1iv(p,h);else if("ivec2"===u.type)e.gl.uniform2iv(p,h);else if("ivec3"===u.type)e.gl.uniform3iv(p,h);else{if("ivec4"!==u.type)throw Error(`uniform type ${u.type} is not supported yet.`);e.gl.uniform4iv(p,h)}}e.executeProgram()}(this.gpgpu,d,u,p,r),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),c&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=H().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,r,a=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=W(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=H().getBool("DEBUG");H().set("DEBUG",!1);let t=this.abs(we(1e-8)).dataSync()[0];if(H().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let u,l=null!=this.activeTimers;l&&(u=w.now());let p=t.texShape;if(null==p&&(p=FC(n,o),t.texShape=p),null!=a){let d,h=Cd(n),c=p[1],f=p[0],m=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!m)&&([c,f]=Fu(p[0],p[1])),d=o?new class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Nn();this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=2*s+i;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${i};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${o}] = values[0];\n            } else if (offset == 1) {\n              result[${o}] = values[1];\n            } else if (offset == 2) {\n              result[${o}] = values[2];\n            } else {\n              result[${o}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Sv(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(h,m):new HC(h,m);let g=m?[f,c]:p,y=this.makeTensorInfo(g,r),b=this.texData.get(y.dataId);b.usage=m?pr.PIXELS:pr.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),c,f,a);let I=this.runWebGLProgram(d,[y],r,[[f,c]],!0),_=this.texData.get(I.dataId);t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(t.texture=_.texture,t.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=w.now()-u)}else{let h=this.acquireTexture(p,i,r,o);t.texture=h}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function SY(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){var e=this;return(0,R.Z)(function*(){let t=[];if(e.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(e.binaryCache))t.push(e.checkCompletionAsync_(n));return Promise.all(t)}for(let[,n]of Object.entries(e.binaryCache)){let r=new Promise(a=>{try{e.checkCompletion_(n),a(!0)}catch(s){throw s}});t.push(r)}return Promise.all(t)})()}checkCompletionAsync_(e){var t=this;return(0,R.Z)(function*(){return t.gpgpu.gl.getProgramParameter(e.webGLProgram,t.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?t.checkCompletion_(e):(yield Cy(),t.checkCompletionAsync_(e))})()}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(xv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=UC(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=wr().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return wr().makeTensorFromDataId(l,t,n,o)}};gf.nextDataId=0;var NY="4.7.0";function bE(){H().set("WEBGL_FORCE_F16_TEXTURES",!0)}Dp.isBrowser()&&Fh("webgl",()=>new gf,2);var _Y={forceHalfFloat:bE},Dv="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",Mo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=cn(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},Oo="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",zu=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=cn(a);let s="";if(r)if(0===a||1===w.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${ot(a)} coords = getOutputCoords();\n        `,1===a)s+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let i=_n("coords",a);s+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${i[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${i[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function Qn(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var TY={kernelName:si,backendName:"webgl",kernelFunc:Qn};function hs(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Qn({inputs:{x:r},backend:n}),l=Qn({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var CY={kernelName:uh,backendName:"webgl",kernelFunc:hs},xE="return (a < 0.) ? b * a : a;",vE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",$Y={kernelName:ui,backendName:"webgl",kernelFunc:function EY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zu(vE,a.shape,i.shape):new Mo(xE,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},wE="return (a < 0.) ? b * a : a;",kE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",FY={kernelName:Ni,backendName:"webgl",kernelFunc:function AY(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zu(kE,r.shape,a.shape):new Mo(wE,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},Pu="if (isnan(x)) return x;";function qe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let p,{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){let h=o.texData.get(i.dataId),d=n(h.values,l);return o.makeTensorInfo(i.shape,l,d)}return p=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new ds(i.shape,t):new ua(i.shape,e),o.runWebGLProgram(p,[i],l)}}function un({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,p=o;if(r&&"complex64"===l.dtype){let f=p.texData.get(l.dataId),m=p.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[v,I]=x,_={dataId:v.dataId,dtype:v.dtype,shape:l.shape},T={dataId:I.dataId,dtype:I.dtype,shape:u.shape},E=new Mo(e,l.shape,u.shape);return p.runWebGLProgram(E,[_,T],sr(v.dtype,I.dtype))}),b=hs({inputs:{real:g,imag:y},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(y),b}let c,h=s||sr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||p.shouldExecuteOnCPU([l,u]))&&null!=a){let f=p.texData.get(l.dataId).values,m=p.texData.get(u.dataId).values,g="string"===l.dtype?N.fromUint8ToStringArray(f):f,y="string"===l.dtype?N.fromUint8ToStringArray(m):m,[b,x]=a(l.shape,u.shape,g,y,h),v=p.makeTensorInfo(x,h);return p.texData.get(v.dataId).values=b,v}return c=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new zu(t,l.shape,u.shape,n):new Mo(e,l.shape,u.shape),p.runWebGLProgram(c,[l,u],h)}}function Ad(e,t=!1){if("linear"===e)return t?dY:iY;if("relu"===e)return t?cY:lY;if("elu"===e)return t?hY:oY;if("relu6"===e)return t?fY:uY;if("prelu"===e)return t?kE:wE;if("leakyrelu"===e)return t?vE:xE;if("sigmoid"===e)return t?mY:pY;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var IE=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=cn(this.outputShape.length);let p=Math.ceil((r?e[1]:e[2])/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${p}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${p}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},SE={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},NE=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},_E="return a * b;";function Mv(e){let i,{inputs:t,backend:n}=e,{a:r,b:a}=t,s=N.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),u=new NE(SE.REAL,r.shape,a.shape),p=new NE(SE.IMAG,r.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],d=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(p,h,"float32"),f=hs({inputs:{real:d,imag:c},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}if(n.shouldExecuteOnCPU([r,a])){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),[u,p]=EJ(r.shape,a.shape,o.values,l.values,s),h=n.makeTensorInfo(p,s);return n.texData.get(h.dataId).values=u,h}return i=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zu(_E,r.shape,a.shape):new Mo(_E,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var RY={kernelName:wi,backendName:"webgl",kernelFunc:Mv};function de(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=w.sizeFromShape(a.shape),l=w.inferFromImplicitShape(s,o),u=w.sizeFromShape(l);w.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let p=i.texData.get(a.dataId);return!p.isPacked||Ed(a.shape,l)||null!==p.texture&&Ed(p.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function DY(e,t,n){let r=[Ao(e.shape),...Fo(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Ao(t),...Fo(t)],i=new cE(s,r),u=n.runWebGLProgram(i,[a],e.dtype,[r],!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,l,i)}var MY={kernelName:Dl,backendName:"webgl",kernelFunc:de},TE=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let p=1/t;l=`sumValue += dot(values * ${w.isInt(p)?p.toPrecision(2):p}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},OY=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),p=n%4,h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function Lo(e,t,n,r){let a=function LY(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let p,h,{inSize:o,windowSize:l,outSize:u}=a[i];p="mean"===n?0===i?new TE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new TE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new OY({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(p,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}var zY=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=ot(this.rank),a=function PY(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}},BY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=ot(this.rank),a=hE("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function yf(e,t,n){let r=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BY(e.shape,t):new zY(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function bf(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function WY(e,t,n,r){let s=e.shape.length,i=w.parseAxisParam(t,e.shape),o=i,l=N.getAxesPermutation(o,s),u=null!=l,p=e;u&&(p=yf(e,l,r),o=N.getInnerMostAxes(o.length,s)),N.assertAxesAreInnerMostDims("sum",o,s);let[h,d]=N.computeOutAndReduceShapes(p.shape,o),c=h;n&&(c=N.expandShapeToKeepDim(h,i));let f=w.sizeFromShape(d),g=de({inputs:{x:p},attrs:{shape:[w.sizeFromShape(e.shape)/f,f]},backend:r}),b=Lo(g,Ch(e.dtype),"sum",r),x=de({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(p),x}(a,s,i,n)}var VY={kernelName:Vi,backendName:"webgl",kernelFunc:bf};function Tn(e){let u,{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,l=new Array(a.shape.length);for(let p=0;p<l.length;p++)l[p]=a.shape[s[p]];if(i.shouldExecuteOnCPU([a])){let p=i.texData.get(a.dataId).values,h=Fv(p,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype),i.texData.get(u.dataId).values=h}else u=yf(a,s,i);return u}var UY={kernelName:fa,backendName:"webgl",kernelFunc:Tn},CE=1e3;function xf({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[p-1]:t.shape[p-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[p-2]:t.shape[p-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),b=w.sizeFromShape(g),x=ru.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);w.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let j,v=n?[y,h,c]:[y,c,h],I=r?[b,f,d]:[b,d,f],_=de({inputs:{x:e},backend:a,attrs:{shape:v}}),T=de({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[_,T],A=Math.max(y,b),D=n?_.shape[1]:_.shape[2],F=null!=s,S=null!=i,O="leakyrelu"===l,U=null!=l?Ad(l,!0):null;if((1===c||1===f)&&D>CE&&!1===(F||S||O||null!=U)){let Z=_,J=T;n&&(Z=Tn({inputs:{x:_},backend:a,attrs:{perm:[0,2,1]}}),E.push(Z)),r&&(J=Tn({inputs:{x:T},backend:a,attrs:{perm:[0,2,1]}}),E.push(J));let te=1===f,ae=Z;1!==f&&(ae=de({inputs:{x:Z},backend:a,attrs:{shape:[A,D,1]}}),E.push(ae));let ne=1===f?2:1,se=J;te&&(se=de({inputs:{x:J},backend:a,attrs:{shape:[A,1,D]}}),E.push(se));let ie=Mv({inputs:{a:ae,b:se},backend:a});j=bf({inputs:{x:ie},backend:a,attrs:{axis:ne,keepDims:!0}}),E.push(ie)}else{let Z=sr(e.dtype,t.dtype),J=new IE(v,I,[A,c,f],n,r,F,U,S,O),Y=[_,T];if(null!=s&&Y.push(s),S&&Y.push(i),O){let te=a.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));Y.push(te),E.push(te)}j=a.runWebGLProgram(J,Y,Z)}let K=de({inputs:{x:j},backend:a,attrs:{shape:x}});E.push(j);for(let Z of E)a.disposeIntermediateTensorInfo(Z);return K}var HY={kernelName:Ki,backendName:"webgl",kernelFunc:function GY(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r;return xf({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:p})}},EE="return abs(x);",qY={kernelName:Ko,backendName:"webgl",kernelFunc:function jY(e){let a,{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){let s=n.texData.get(r.dataId),i=pE(s.values);return n.makeTensorInfo(r.shape,r.dtype,i)}return a=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ds(r.shape,EE):new ua(r.shape,EE),n.runWebGLProgram(a,[r],r.dtype)}},ZY=qe({opSnippet:$r+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),XY={kernelName:$s,backendName:"webgl",kernelFunc:ZY},YY=qe({opSnippet:$r+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),QY={kernelName:As,backendName:"webgl",kernelFunc:YY},$E="return a + b;",eQ=un({opSnippet:$E,packedOpSnippet:$E,supportsComplex:!0,cpuKernelImpl:lJ}),tQ={kernelName:za,backendName:"webgl",kernelFunc:eQ},aQ={kernelName:Fs,backendName:"webgl",kernelFunc:function vf(e){let{inputs:t,backend:n}=e,r=t;if(1===r.length)return Qn({inputs:{x:r[0]},backend:n});if(r.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=vf({inputs:r.slice(0,o),backend:n}),u=vf({inputs:r.slice(o),backend:n});return vf({inputs:[l,u],backend:n})}let a=r.map(o=>o.dtype).reduce((o,l)=>sr(o,l)),s=r.map(o=>o.shape),i=H().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`vec4 v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(r[0].shape,s):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`float v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(r[0].shape,s);return n.runWebGLProgram(i,r,a)}},iQ={kernelName:Zo,backendName:"webgl",kernelFunc:function sQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,p=N.getAxesPermutation(u,o),h=a;null!=p&&(h=Tn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,o)),N.assertAxesAreInnerMostDims("all",u,o);let y,[d,c]=N.computeOutAndReduceShapes(h.shape,u),m=de({inputs:{x:h},backend:n,attrs:{shape:[-1,w.sizeFromShape(c)]}}),g=Lo(m,m.dtype,"all",n);return y=de(i?{inputs:{x:g},backend:n,attrs:{shape:N.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}},lQ={kernelName:Xo,backendName:"webgl",kernelFunc:function oQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,p=N.getAxesPermutation(u,o),h=a;null!=p&&(h=Tn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,o)),N.assertAxesAreInnerMostDims("any",u,o);let y,[d,c]=N.computeOutAndReduceShapes(h.shape,u),m=de({inputs:{x:h},backend:n,attrs:{shape:[-1,w.sizeFromShape(c)]}}),g=Lo(m,m.dtype,"any",n);return y=de(i?{inputs:{x:g},backend:n,attrs:{shape:N.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}},uQ=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},pQ=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let p,h,i=this.outputShape,o=i.length,l=ot(o),u=_n("coords",o);if(1===s){h=o+1;let T=ot(h);p=`\n        ${T} sourceLocR = ${T}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${T} sourceLocG = ${T}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${T} sourceLocA = ${T}(${u.join()}, 0);\n        --${u[o-1]};\n        ${T} sourceLocB = ${T}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,p=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,h),c="."+d[h-1],f=d.map(T=>"int "+T),m=_n("sourceLocR",h-1).concat("inIdx.r"),g=_n("sourceLocG",h-1).concat("inIdx.g"),y=_n("sourceLocB",h-1).concat("inIdx.b"),b=_n("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,_=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${p}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${I};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${I};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function AE(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=N.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new uQ(o,n,null==r),u=[t];null!=r&&u.push(r);let p=e.runWebGLProgram(l,u,"int32");if(1===p.shape[1])return p;let h=AE(e,t,n,p);return e.disposeIntermediateTensorInfo(p),h}function FE(e,t,n,r=null){let a=null!=r?r.shape:t.shape,i=N.computeOptimalWindowSize(a[a.length-1]),o=new pQ(a,i,n,null==r),u=e.runWebGLProgram(o,null==r?[t]:[t,r],"int32");if(u.shape.length===t.shape.length){let p=FE(e,t,n,u);return e.disposeIntermediateTensorInfo(u),p}return u}function RE(e,t,n,r){let a=[n];if(N.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),l=t;null!==i&&i.isPacked&&(l=e.unpackTensor(t),s.push(l));let[u,p]=N.computeOutAndReduceShapes(l.shape,a),h=w.sizeFromShape(p),d=de({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});s.push(d);let c=AE(e,d,r);s.push(c);let f=de({inputs:{x:c},backend:e,attrs:{shape:u}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return FE(e,t,r)}var hQ={kernelName:Jo,backendName:"webgl",kernelFunc:function dQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=Tn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=RE(n,l,i[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),p}},fQ={kernelName:Yo,backendName:"webgl",kernelFunc:function cQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=Tn({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=RE(n,l,i[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),p}},gQ=qe({opSnippet:$r+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),yQ={kernelName:Rs,backendName:"webgl",kernelFunc:gQ},xQ=qe({opSnippet:$r+"return log(x + sqrt(x * x + 1.0));"}),vQ={kernelName:Ds,backendName:"webgl",kernelFunc:xQ},kQ=qe({opSnippet:$r+"\n  return atan(x);\n"}),IQ={kernelName:Ms,backendName:"webgl",kernelFunc:kQ},_Q=un({opSnippet:Dv+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Oo+"\n  return result;\n"}),TQ={kernelName:Ls,backendName:"webgl",kernelFunc:_Q},EQ=qe({opSnippet:$r+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),$Q={kernelName:Os,backendName:"webgl",kernelFunc:EQ},Fd=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,y="0.0";if(f||(y="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");let v=4*Math.floor(s/4),I=s%4,_=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${_}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===I}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${_}\n          } else if (${2===I}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${_}\n          } else if (${3===I}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${_}\n          }\n        }\n        setOutput(${x});\n      }\n    `}},Ov=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${p}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(I="avgValue / max(count, 1.0)");let _=4*Math.floor(s/4),T=s%4,E=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${p}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${_}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${E}\n            }\n\n            int xC = xCCorner + ${_};\n            if (${1===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${E}\n            } else if (${2===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${E}\n            } else if (${3===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${E}\n            }\n          }\n        }\n        setOutput(${I});\n      }\n    `}},FQ={kernelName:zs,backendName:"webgl",kernelFunc:function AQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Ru(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(N.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let p=N.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&w.arraysEqual(p.inShape,p.outShape))return Qn({inputs:{x:a},backend:n});let h=new Fd(p,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},DQ={kernelName:Qo,backendName:"webgl",kernelFunc:function RQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=N.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),d=new Ov(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},zQ={kernelName:sp,backendName:"webgl",kernelFunc:function LQ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,d=N.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),c=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${p-1-e.padInfo.front}, ${h-1-e.padInfo.top}, ${d-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a],i.dtype)}},BQ={kernelName:ap,backendName:"webgl",kernelFunc:function PQ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Ru([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,p=N.computePool2DInfo(i.shape,o,l,1,u),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let o=e.effectiveFilterHeight,l=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${o-1-e.padInfo.top}, ${l-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(h,[a],i.dtype)}},VQ={kernelName:Ps,backendName:"webgl",kernelFunc:function WQ(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return xf({a,b:s,transposeA:i,transposeB:o,backend:n})}},jQ={kernelName:ri,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;w.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],p=null;null!=i&&(p=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));let d=H().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(N.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,p,h,l):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(N.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,p,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}},Lv=["x","y","z","w","u","v"];function Bu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Vt.parseSliceParams(a,s,i);if(Vt.assertParamsValid(a,o,l),0===w.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let h=n.texData.get(a.dataId),d=BJ(h.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,d)}let{isPacked:u}=n.texData.get(a.dataId),p=Vt.isSliceContinous(a.shape,o,l);if(u||!p){let h=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ot(this.rank),n=_n("coords",this.rank),r=_n("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((u,p)=>`start[${p}]`).join()});`:e.map((u,p)=>`${r[p]} = ${n[p]} + start[${p}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ot(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let r,n=function KQ(e){if(1===e)return"sourceLoc";if(e<=6)return Lv.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((s,i)=>`sourceLoc.${Lv[i]} = start[${i}] + coords.${Lv[i]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}(l);return n.runWebGLProgram(h,[a],a.dtype,[o])}return n.uploadToGPU(a.dataId),function XQ(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Vt.computeFlatOffset(t,w.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var JQ={kernelName:Wl,backendName:"webgl",kernelFunc:Bu},QQ={kernelName:el,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;w.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=N.getReshaped(a.shape,s,o),u=N.getPermuted(l.length,s.length),p=N.getReshapedPermuted(a.shape,s,o),h=N.getSliceBeginCoords(i,s.length),d=N.getSliceSize(p,i,s.length),c=[],f=de({inputs:{x:a},backend:n,attrs:{shape:l}}),m=Tn({inputs:{x:f},backend:n,attrs:{perm:u}}),g=de({inputs:{x:m},backend:n,attrs:{shape:p}}),y=Bu({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}},tee={kernelName:tl,backendName:"webgl",kernelFunc:function eee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=uE(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},see={kernelName:nl,backendName:"webgl",kernelFunc:function aee(e){let o,{inputs:t,backend:n}=e,{a:r,b:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=H().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||1===i){let l=n.texData.get(r.dataId).values,u=n.texData.get(a.dataId).values,[p,h]=pJ(r.shape,a.shape,l,u,r.dtype),d=n.makeTensorInfo(h,r.dtype);return n.texData.get(d.dataId).values=p,d}return o=s?new zu("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,a.shape,!1):new Mo("\n  return float(int(a.r) & int(b.r));\n",r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}},oee={kernelName:ip,backendName:"webgl",kernelFunc:function iee(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},DE=un({opSnippet:"return float(a != b);",cpuKernelImpl:AJ,dtype:"bool"}),uee={kernelName:Cl,backendName:"webgl",kernelFunc:DE};function Rd(e){let{inputs:t,backend:n}=e,{input:r}=t;return Qn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var pee={kernelName:vh,backendName:"webgl",kernelFunc:Rd},cee={kernelName:Bs,backendName:"webgl",kernelFunc:function zv(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Qn({inputs:{x:a},backend:n});let i=_t(a.shape),o=zv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=hs({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if("complex64"===a.dtype){let i=Rd({inputs:{input:a},backend:n}),o=zv({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(a.dtype,s)){let i=Qn({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let i=n.texData.get(a.dataId).values,[o,l,u]=dJ(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}if("int32"===s)return function hee(e,t){let n=new ua(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,n);if("bool"===s){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=DE({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}},ME="return ceil(x);",fee=qe({opSnippet:ME,packedOpSnippet:ME,cpuKernelImpl:hJ}),mee={kernelName:Ws,backendName:"webgl",kernelFunc:fee},xee={kernelName:Pa,backendName:"webgl",kernelFunc:function bee(e){let o,{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;return o=H().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(a.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(a.shape),n.runWebGLProgram(o,[a],a.dtype,[[s],[i]])}};function OE(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var kee={kernelName:op,backendName:"webgl",kernelFunc:function wee(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[OE(r,a.complexTensorInfos.real),OE(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},Iee=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++)n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${t[s-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},See=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=ot(r),s=_n("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),p=i.join(),h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){let m=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${wf(i,l,m)}),\n            vec2(${wf(u,l,m)}));\n        }`}let c=o[o.length-1];h+=`\n        return getChannel(\n          getT${o.length}(${wf(i,l,c)}),\n          vec2(${wf(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map(f=>"int "+f)}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function wf(e,t,n){let r=e.indexOf(t);return e.map((a,s)=>s===r?`${a} - ${n}`:a).join()}function kf(e){let{inputs:t,backend:n}=e,{input:r}=t;return Qn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var Nee={kernelName:gh,backendName:"webgl",kernelFunc:kf};function Dd(e,t,n){let r=e[0].dtype;if("complex64"===r){let c=e.map(b=>Rd({inputs:{input:b},backend:n})),f=e.map(b=>kf({inputs:{input:b},backend:n})),m=Dd(c,t,n),g=Dd(f,t,n),y=hs({inputs:{real:m,imag:g},backend:n});return c.forEach(b=>n.disposeIntermediateTensorInfo(b)),f.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let c=e.map(v=>{let I=[-1,w.sizeFromShape(v.shape.slice(t))];return de({inputs:{x:v},backend:n,attrs:{shape:I}})}),f=c.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),m=N.computeOutShape(c.map(v=>v.shape),1),y=cJ(f,m,r,1===c[0].shape[0]),b=N.computeOutShape(e.map(v=>v.shape),t),x=n.makeTensorInfo(b,r,y);return c.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}let s=e.filter(c=>w.sizeFromShape(c.shape)>0),i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let c=i?new ua(e[0].shape,ps):new ds(e[0].shape,ps);return n.runWebGLProgram(c,e,r)}let o=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let c=[];for(let m=0;m<s.length;m+=o){let g=s.slice(m,m+o);c.push(Dd(g,t,n))}let f=Dd(c,t,n);for(let m of c)n.disposeIntermediateTensorInfo(m);return f}if(i){let c=new See(s.map(f=>f.shape),t);return n.runWebGLProgram(c,s,r)}let{tensors2D:l,outShape:u}=function _ee(e,t,n){let r=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>de({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}(s,t,n),p=new Iee(l.map(c=>c.shape)),h=n.runWebGLProgram(p,l,r);l.forEach(c=>n.disposeIntermediateTensorInfo(c));let d=de({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function LE(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(u=>u.shape);N.assertParamsConsistent(i,s);let o=N.computeOutShape(t.map(u=>u.shape),s);if(0===w.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(u=>w.sizeFromShape(u.shape)>0);return 1===l.length?Qn({inputs:{x:l[0]},backend:n}):Dd(l,s,n)}var Tee={kernelName:rl,backendName:"webgl",kernelFunc:LE},zE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${I}\n        ${v}\n        setOutput(result);\n      }\n    `}},PE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cn(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,p=u,h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(p+1)/2;m++){let g=2*m;if(h+=`\n           xC = xCCorner + ${g*o};\n           `,1===i){if(g<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {\n                   xTexelC${g} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${g}.zw = vec2(0.0);\n                   }\n                   xTexelC${g}Ready = 1;\n                 }\n               `,h+=1===o&&g>0?`\n                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);\n                   } else {\n                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {\n                   xTexelC${g} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${g}.zw = vec2(0.0);\n                   }\n                   xTexelC${g}Ready = 1;\n                 }\n\n                 xC${g} = xTexelC${g};\n                 `,g+1<u)){let y=s%2==0?w.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${y};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {\n                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${g+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${g+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);\n                     } else {\n                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);\n                     }\n                     `:`\n                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);\n                     `):h+=1===y?`\n                     xC${g+1} = xTexelC${g};\n                     `:`\n                     xCOffset = xC + ${y};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {\n                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${g+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${g+1}Ready = 1;\n                     }\n\n                     xC${g+1} = xTexelC${g+1};\n                     `}}else g<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {\n                   xTexelC${g} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${g}.zw = vec2(0.0);\n                   }\n                   xTexelC${g}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {\n                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${g+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${g+1}Ready = 1;\n                 }\n\n                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);\n               `,g+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {\n                   xTexelC${g} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${g}.zw = vec2(0.0);\n                   }\n                   xTexelC${g}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {\n                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${g+1}.zw = vec2(0.);\n                   }\n                   xTexelC${g+1}Ready = 1;\n                 }\n\n                 xC${g} = vec4(\n                   xTexelC${g}.xy, xTexelC${g+1}.xy);\n               `,g+1<u&&(h+=`\n                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);\n                 `)));g<u&&(h+=`\n             wTexel = getW(r, ${g}, d1, d2);\n             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,g+1<u&&(h+=`\n               wTexel = getW(r, ${g+1}, d1, d2);\n               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",c="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}};function If(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function BE({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let g,l=e.shape,u=r.texData.get(e.dataId),p=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,c="channelsLast"===n.dataFormat,y=[];if(null!=s){let b=If(s.shape,c);null!=b&&(s=de({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(null!=a){let b=If(a.shape,c);null!=b&&(a=de({inputs:{x:a},backend:r,attrs:{shape:b}}),y.push(a))}if((1!==h&&1!==d||!(p>CE))&&u.isPacked&&c&&null!=u.texture&&l[2]%2!=0&&w.arraysEqual(u.shape.slice(-3),l.slice(-3))){let x={dataId:e.dataId,shape:[1,l[0]*l[1]*(l[2]+1),n.inChannels],dtype:e.dtype},v=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,w.assert(Ed(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);let I=de({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let _=xf({a:x,b:I,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),T=r.texData.get(_.dataId);w.assert(T.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=v,T.shape=n.outShape,g=Qn({inputs:{x:_},backend:r}),g.shape=n.outShape,y.push(_)}else{let b=n.outHeight*n.outWidth,x=de({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),v=de({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=xf({a:c?x:v,b:c?v:x,transposeA:!c,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=de({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(x),y.push(v),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function WE({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:h,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*p,g=d*h,y=[n.batchSize,m,g],v=[];if(null!=s){let Z=If(s.shape,f);null!=Z&&(s=de({inputs:{x:s},backend:r,attrs:{shape:Z}}),v.push(s))}if(null!=a){let Z=If(a.shape,f);null!=Z&&(a=de({inputs:{x:a},backend:r,attrs:{shape:Z}}),v.push(a))}let I=de({inputs:{x:t},backend:r,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});v.push(I);let _=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=cn(this.outputShape.length);let{dataFormat:n}=t,r=Nn(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let p=0;p<=1;p++)l+=`\n          blockIndex = rc.z + ${p};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+p}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+p}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}(y,n),E=r.runWebGLProgram(_,[e],"float32",[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]]),A=de({inputs:{x:E},backend:r,attrs:{shape:y}});v.push(E),v.push(A);let D=null!=a,F=null!=s,S="leakyrelu"===o,O=o?Ad(o,!0):null,U=new IE(f?A.shape:I.shape,f?I.shape:A.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,D,O,F,S),G=f?[A,I]:[I,A];if(a&&G.push(a),F&&G.push(s),S){let Z=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));G.push(Z),v.push(Z)}let j=r.runWebGLProgram(U,G,"float32"),K=de({inputs:{x:j},backend:r,attrs:{shape:n.outShape}});v.push(j);for(let Z of v)r.disposeIntermediateTensorInfo(Z);return K}var Md,Aee={kernelName:Vs,backendName:"webgl",kernelFunc:function $ee(e){let c,{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r,h=N.convertConv2DDataFormat(l),d=N.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h);if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&H().getBool("WEBGL_EXP_CONV")){let m=new PE(d);c=n.runWebGLProgram(m,[a,s],"float32",[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]])}else if(H().getBool("WEBGL_CONV_IM2COL"))c=WE({x:a,filter:s,convInfo:d,backend:n});else{let m=new zE(d);c=n.runWebGLProgram(m,[a,s],"float32")}else c=BE({x:a,filter:s,convInfo:d,backend:n});let f=de({inputs:{x:c},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(c),f}},Lee={kernelName:ph,backendName:"webgl",kernelFunc:function Oee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r,h=N.convertConv2DDataFormat(l),d=N.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===e.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}},Bee={kernelName:Us,backendName:"webgl",kernelFunc:function Pee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r,h=N.convertConv2DDataFormat(u),d=N.computeConv2DInfo(i,s.shape,o,1,l,p,!1,h);if(H().getBool("WEBGL_PACK")&&"channelsLast"===h){let c=[[d.strideHeight,d.strideWidth]],f=new class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=cn(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}(d);return n.runWebGLProgram(f,[a,s],"float32",c)}{let c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${s?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}}},Vee={kernelName:Gs,backendName:"webgl",kernelFunc:function Wee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=N.computeConv3DInfo(a.shape,s.shape,i,l,o),p=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${p}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(p,[a,s],"float32")}},Gee={kernelName:al,backendName:"webgl",kernelFunc:function Uee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=N.computeConv3DInfo(a.shape,l,i,1,o),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(p,[a,s],"float32")}},jee={kernelName:sl,backendName:"webgl",kernelFunc:function Hee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=N.computeConv3DInfo(l,s.shape,o,1,i),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(p,[a,s],"float32")}},Zee=qe({opSnippet:Pu+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Oo}\n  return result;\n`}),Xee={kernelName:Hs,backendName:"webgl",kernelFunc:Zee},Yee=qe({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Qee={kernelName:js,backendName:"webgl",kernelFunc:Yee},nte={kernelName:ol,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,p=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,h]=n;this.outputShape=[u,p,h,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=p>1?[""+(i-1)/(p-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,l,u);return n.runWebGLProgram(p,[a,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(Md||(Md={}));var VE=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,i=n?this.op===Md.Prod?"1.0":"0.0":`getX(${UE(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ot(a)} coords = getOutputCoords();\n        int end = ${GE(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${GE(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${UE(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function UE(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function GE(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function HE(e,t,n,r,a,s){let i=t.shape.length,o=N.getAxesPermutation([r],i),l=t;null!=o&&(l=Tn({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=N.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let p=l.shape[u],h=Qn({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){let c=new VE(e,l.shape,!1,s),m=h;h=n.runWebGLProgram(c,[h],h.dtype,[[d]]),n.disposeIntermediateTensorInfo(m)}if(a){let d=new VE(e,l.shape,a,s),c=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(c)}if(null!=o){let c=Tn({inputs:{x:h},backend:n,attrs:{perm:N.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),c}return h}var ate={kernelName:il,backendName:"webgl",kernelFunc:function rte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return HE(Md.Prod,a,n,s,i,o)}},ite={kernelName:qs,backendName:"webgl",kernelFunc:function ste(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return HE(Md.Sum,a,n,s,i,o)}},lte={kernelName:lp,backendName:"webgl",kernelFunc:function ote(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=uE(l,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}if(2===a.shape.length){let l=n.bufferSync(a),u=n.bufferSync(s),p=uJ(l,u,i,o);return n.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},dte={kernelName:ll,backendName:"webgl",kernelFunc:function pte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],h=("NHWC"===i?a.shape[1]:a.shape[2])*s,d=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),f="NHWC"===i?[o,h,d,c]:[o,c,h,d],m=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}},jE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cn(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${p}\n        ${u}\n        setOutput(result);\n      }\n    `}},qE=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cn(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,h=p,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<p;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<p;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){let y=2*g;if(d+=`\n          xC = xCCorner + ${y*l};\n          `,1===o){if(y<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                  xTexelC${y} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${y}.zw = vec2(0.0);\n                  }\n                  xTexelC${y}Ready = 1;\n                }\n              `,d+=1===l&&y>0?`\n                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);\n                  } else {\n                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                  xTexelC${y} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${y}.zw = vec2(0.0);\n                  }\n                  xTexelC${y}Ready = 1;\n                }\n\n                xC${y} = xTexelC${y};\n                `,y+1<p)){let b=i%2==0?w.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${b};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${y+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${y+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);\n                    } else {\n                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);\n                    }\n                    `:`\n                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);\n                    `):d+=1===b?`\n                    xC${y+1} = xTexelC${y};\n                    `:`\n                    xCOffset = xC + ${b};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${y+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${y+1}Ready = 1;\n                    }\n\n                    xC${y+1} = xTexelC${y+1};\n                    `}}else y<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                  xTexelC${y} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${y}.zw = vec2(0.0);\n                  }\n                  xTexelC${y}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {\n                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${y+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${y+1}Ready = 1;\n                }\n\n                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n              `,y+1<p&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                  xTexelC${y} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${y}.zw = vec2(0.0);\n                  }\n                  xTexelC${y}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${y+1}.zw = vec2(0.);\n                  }\n                  xTexelC${y+1}Ready = 1;\n                }\n\n                xC${y} = vec4(\n                  xTexelC${y}.xy, xTexelC${y+1}.xy);\n              `,y+1<p&&(d+=`\n                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n                `)));y<p&&(d+=`\n            wTexel = getW(r, ${y}, d1, q);\n            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);\n          `,y+1<p&&(d+=`\n              wTexel = getW(r, ${y+1}, d1, q);\n              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},cte={kernelName:Ks,backendName:"webgl",kernelFunc:function hte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,p=l;null==p&&(p=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let d,h=N.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0);return d=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new qE(h):new jE(h),n.runWebGLProgram(d,[a,s],"float32",[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]])}},yte={kernelName:dh,backendName:"webgl",kernelFunc:function gte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r,h=N.computeConv2DInfo(a.shape,p,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},xte={kernelName:hh,backendName:"webgl",kernelFunc:function bte(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r,h=N.computeConv2DInfo(p,s.shape,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},kte={kernelName:up,backendName:"webgl",kernelFunc:function wte(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=w.sizeFromShape(r.shape),i=de({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=de({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},Nte={kernelName:Zs,backendName:"webgl",kernelFunc:function Ste(e){let p,{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=N.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(u);p=n.runWebGLProgram(h,[a,s],"float32");let d=de({inputs:{x:p},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(p),d}},Tte={kernelName:ch,backendName:"webgl",kernelFunc:function _te(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=N.decodeEinsumEquation(a,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=N.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of p[m]){let x,{permutationIndices:y,expandDims:b}=N.getEinsumPermutation(c,l[g]);N.isIdentityPermutation(y)?x=s[g]:(x=Tn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),f.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=de({inputs:{x},backend:n,attrs:{shape:v}}),f.push(x)),null===d?d=x:(d=Mv({inputs:{a:x,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=bf({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},$te=qe({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ate={kernelName:Js,backendName:"webgl",kernelFunc:$te},Mte={kernelName:dl,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zu("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new Mo("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},zte=un({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:fJ}),Pte={kernelName:hl,backendName:"webgl",kernelFunc:zte},Wte=qe({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${N.ERF_P};\n  float a1 = ${N.ERF_A1};\n  float a2 = ${N.ERF_A2};\n  float a3 = ${N.ERF_A3};\n  float a4 = ${N.ERF_A4};\n  float a5 = ${N.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Vte={kernelName:Ys,backendName:"webgl",kernelFunc:Wte},KE=qe({opSnippet:Pu+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:mJ,dtype:"float32"}),Hte={kernelName:Qs,backendName:"webgl",kernelFunc:KE};function Pv(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),de({inputs:{x:s},backend:r,attrs:{shape:o}})}var jte={kernelName:cl,backendName:"webgl",kernelFunc:Pv},ZE="return exp(x) - 1.0;",qte=qe({opSnippet:ZE,packedOpSnippet:ZE,cpuKernelImpl:gJ}),Kte={kernelName:ei,backendName:"webgl",kernelFunc:qte},XE=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let i,a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function JE(e,t,n){let r=n.texData.get(e.dataId),a=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],o=de({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),l=o.shape,u=new XE("real",l,t),p=new XE("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),c=n.runWebGLProgram(p,h,"float32"),f=hs({inputs:{real:d,imag:c},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c);let m=de({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}var Xte={kernelName:fh,backendName:"webgl",kernelFunc:function Zte(e){let{inputs:t,backend:n}=e,{input:r}=t;return JE(r,!1,n)}},Jte=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function Od(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||w.inferDtype(a),"string"===s){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(a),t.makeTensorInfo(r,s,i)}{let i=new Jte(r,a);return t.runWebGLProgram(i,[],s,[[a]])}}var Wu,Yte={kernelName:pp,backendName:"webgl",kernelFunc:Od},ene={kernelName:fl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},YE="return floor(x);",tne=qe({opSnippet:YE,packedOpSnippet:YE,cpuKernelImpl:yJ}),nne={kernelName:ti,backendName:"webgl",kernelFunc:tne},sne=un({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),ine={kernelName:ni,backendName:"webgl",kernelFunc:sne},une={kernelName:wh,backendName:"webgl",kernelFunc:function pne(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[u,l],h=[u,l,s];if(o||i){let m=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Wu||m!==Bv)&&(Bv=m,Wu=document.createElement("canvas").getContext("2d",{willReadFrequently:Bv})),Wu.canvas.width=l,Wu.canvas.height=u,Wu.drawImage(a,0,0,l,u),a=Wu.canvas}let d=n.makeTensorInfo(p,"int32");n.texData.get(d.dataId).usage=pr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=H().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Nn(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];let t=Nn(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}},Bv=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),hne={kernelName:Zi,backendName:"webgl",kernelFunc:function dne(e){let y,{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=N.convertConv2DDataFormat(p),g=N.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!1,m),b=[],x=null!=i,v=null!=o,I="leakyrelu"===c,_=()=>{let E=[a,s],A=(D,F)=>{if("NCHW"===F&&1===D.shape.length&&1!==D.shape[0]){let S=de({inputs:{x:D},backend:n,attrs:{shape:[D.shape[0],1,1]}});return b.push(S),S}return D};if(x&&E.push(A(i,p)),v&&E.push(A(o,p)),I){let D=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));E.push(D),b.push(D)}return E};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&H().getBool("WEBGL_EXP_CONV")){let E=c?Ad(c,!0):null,A=new PE(g,x,E,v,I),D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=_();y=n.runWebGLProgram(A,F,"float32",D)}else if(H().getBool("WEBGL_CONV_IM2COL"))y=WE({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else{let E=c?Ad(c,!1):null,A=new zE(g,x,E,v,I),D=_();y=n.runWebGLProgram(A,D,"float32")}else y=BE({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});let T=de({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>n.disposeIntermediateTensorInfo(E)),T}},fne={kernelName:Xi,backendName:"webgl",kernelFunc:function cne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=r,f=[],m=p;null==m&&(m=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let T,g=N.computeConv2DInfo(a.shape,s.shape,l,m,u,h,!0),y=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?Ad(d,y):null,x=[a,s],v=null!=i,I=null!=o,_="leakyrelu"===d;if(v&&x.push(i),I&&x.push(o),_){let D=n.makeTensorInfo([],"float32",w.createScalarValue(c,"float32"));x.push(D),f.push(D)}T=y?new qE(g,v,b,I,_):new jE(g,v,b,I,_);let A=n.runWebGLProgram(T,x,"float32",[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]]);return f.forEach(D=>n.disposeIntermediateTensorInfo(D)),A}},yne={kernelName:gl,backendName:"webgl",kernelFunc:function gne(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,u,p,h]=N.prepareAndValidate(r,a),d=de({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=de({inputs:{x:r},backend:n,attrs:{shape:[w.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let y=n.readSync(a.dataId),b=n.bufferSync(r),x=bJ(y,b,r.dtype,u,i,p,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,x.values)}let f=new class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=ot(n.length),s="\n    int index;";for(let i=0;i<this.sliceDim;i++)s+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[u,p],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=de({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}};function QE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0];if(H().get("DEBUG")){let b=n.readSync(s.dataId),x=a.shape[l];for(let v=0;v<b.length;++v){let I=b[v];w.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let u=N.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=w.sizeFromShape(s.shape),h=[],d=de({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=de({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,p/u.batchSize]}});h.push(d),h.push(c);let f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let b=n.bufferSync(c),x=n.bufferSync(d),v=xJ(x,b,f);return h.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(u.outputShape,v.dtype,v.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ot(this.rank),r=function xne(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)r.push(2===a?"index":`${n[a]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);h.push(g);let y=de({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var vne={kernelName:ml,backendName:"webgl",kernelFunc:QE},Ine=un({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:vJ,dtype:"bool"}),Sne={kernelName:yl,backendName:"webgl",kernelFunc:Ine},Tne=un({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:wJ}),Cne={kernelName:ai,backendName:"webgl",kernelFunc:Tne},$ne={kernelName:mh,backendName:"webgl",kernelFunc:function Ene(e){let{inputs:t,backend:n}=e,{input:r}=t;return JE(r,!0,n)}},Fne=qe({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Rne={kernelName:ii,backendName:"webgl",kernelFunc:Fne},Mne=qe({opSnippet:"return float(isinf(x));",dtype:"bool"}),One={kernelName:oi,backendName:"webgl",kernelFunc:Mne},zne=qe({opSnippet:"return float(isnan(x));",dtype:"bool"}),Pne={kernelName:li,backendName:"webgl",kernelFunc:zne},Vne=un({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:kJ,dtype:"bool"}),Une={kernelName:bl,backendName:"webgl",kernelFunc:Vne},jne=un({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:IJ,dtype:"bool"}),qne={kernelName:xl,backendName:"webgl",kernelFunc:jne},Zne={kernelName:vl,backendName:"webgl",kernelFunc:function Kne(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=SJ(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Yne=qe({opSnippet:Pu+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:NJ}),Qne={kernelName:pi,backendName:"webgl",kernelFunc:Yne},tre=qe({opSnippet:Pu+"\n  return log(1.0 + x);\n"}),nre={kernelName:di,backendName:"webgl",kernelFunc:tre},sre=un({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ire={kernelName:wl,backendName:"webgl",kernelFunc:sre},lre=qe({opSnippet:"return float(!(x >= 1.0));"}),ure={kernelName:kl,backendName:"webgl",kernelFunc:lre},hre=un({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),cre={kernelName:Il,backendName:"webgl",kernelFunc:hre},yre={kernelName:hi,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=H().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,l):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},vre={kernelName:Sl,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,l,u,p);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function e$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,p=N.getAxesPermutation(u,o),h=null!=p,d=n.shouldExecuteOnCPU([a]),c=a;if(h){if(d){let b=n.texData.get(c.dataId).values,x=new Array(o);for(let _=0;_<x.length;_++)x[_]=a.shape[p[_]];let v=Fv(b,a.shape,a.dtype,p,x);c=n.makeTensorInfo(x,a.dtype),n.texData.get(c.dataId).values=v}else c=yf(a,p,n);u=N.getInnerMostAxes(u.length,o)}N.assertAxesAreInnerMostDims("max",u,o);let y,[f,m]=N.computeOutAndReduceShapes(c.shape,u),g=f;if(i&&(g=N.expandShapeToKeepDim(f,l)),d){let b=n.texData.get(c.dataId).values,x=_J(b,w.sizeFromShape(m),g,a.dtype);y=n.makeTensorInfo(g,a.dtype),n.texData.get(y.dataId).values=x}else y=function wre(e,t,n,r){let a=w.sizeFromShape(t),i=de({inputs:{x:e},attrs:{shape:[w.sizeFromShape(e.shape)/a,a]},backend:r}),o=Lo(i,e.dtype,"max",r),l=de({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(c,m,g,n);return h&&n.disposeIntermediateTensorInfo(c),y}var kre={kernelName:ci,backendName:"webgl",kernelFunc:e$},Nre=un({opSnippet:Dv+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Oo+"\n  return result;\n",cpuKernelImpl:TJ}),_re={kernelName:fi,backendName:"webgl",kernelFunc:Nre},Cre={kernelName:mi,backendName:"webgl",kernelFunc:function Tre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Ru(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;w.assert(N.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let p=N.computePool2DInfo(a.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&w.arraysEqual(p.inShape,p.outShape))return Qn({inputs:{x:a},backend:n});let h=new Fd(p,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},$re={kernelName:Nl,backendName:"webgl",kernelFunc:function Ere(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=N.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),d=new Ov(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},Dre={kernelName:hp,backendName:"webgl",kernelFunc:function Rre(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,d=N.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),c=new Ov(d,"max",!0),f=n.runWebGLProgram(c,[i],i.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${o-1-e.padInfo.front}, ${l-1-e.padInfo.top}, ${u-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${o*l*u-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},Ore={kernelName:dp,backendName:"webgl",kernelFunc:function Mre(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Ru([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=r,d=N.computePool2DInfo(o.shape,l,u,1,p,h),f=new Fd(d,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),g=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let a=e.effectiveFilterHeight,s=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${a-1-e.padInfo.top}, ${s-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${a*s-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),y=n.runWebGLProgram(g,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}},zre={kernelName:cp,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;w.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];w.assert(N.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let p=N.computePool2DInfo(r.shape,a,s,u,i),[h,d]=function Lre(e,t,n,r){let a=new Fd(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Fd(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,p,l);return[h,d]}},Bre={kernelName:gi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=w.parseAxisParam(s,r.shape),u=l,p=N.getAxesPermutation(u,o),h=null!=p,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(h){if(d){let x=i.texData.get(f.dataId).values,v=new Array(o);for(let T=0;T<v.length;T++)v[T]=r.shape[p[T]];let I=Fv(x,r.shape,r.dtype,p,v);f=i.makeTensorInfo(v,r.dtype),i.texData.get(f.dataId).values=I}else f=yf(r,p,i);c.push(f),u=N.getInnerMostAxes(u.length,o)}N.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=N.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=N.expandShapeToKeepDim(m,l));let b=function Pre(e,t,n,r){let a=w.sizeFromShape(t),i=de({inputs:{x:e},attrs:{shape:[w.sizeFromShape(e.shape)/a,a]},backend:r}),o=Lo(i,"float32","mean",r),l=de({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}},Vre={kernelName:yi,backendName:"webgl",kernelFunc:function Wre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=w.parseAxisParam(s,a.shape),u=l,p=N.getAxesPermutation(u,o),h=a;null!=p&&(h=Tn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,a.shape.length)),N.assertAxesAreInnerMostDims("min",u,o);let y,[d,c]=N.computeOutAndReduceShapes(h.shape,u),m=de({inputs:{x:h},backend:n,attrs:{shape:[-1,w.sizeFromShape(c)]}}),g=Lo(m,m.dtype,"min",n);return y=de(i?{inputs:{x:g},backend:n,attrs:{shape:N.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}},Hre=un({opSnippet:Dv+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Oo+"\n  return result;\n",cpuKernelImpl:CJ}),jre={kernelName:bi,backendName:"webgl",kernelFunc:Hre},Xre={kernelName:xi,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,f)=>c[0]+e[f]+c[1]);let r=e.length,a=ot(r),s=t.map(c=>c[0]).join(","),i=t.map((c,f)=>c[0]+e[f]).join(","),o=_n("rc",r),l=_n("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1,d="";if(1===r){let c=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${c}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${c}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n      `}else{let c=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${c}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${c}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${c}\n          result[2] = getChannel(getX(${l.join()}), ${p});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${c}\n            result[3] = getChannel(getX(${l.join()}), ${p});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,p)=>u[0]+e[p]+u[1]);let r=e.length,a=ot(r),s=t.map(u=>u[0]).join(","),i=t.map((u,p)=>u[0]+e[p]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},Qre=un({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Oo+"\n  return result;\n"}),eae={kernelName:vi,backendName:"webgl",kernelFunc:Qre},t$=un({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),aae={kernelName:Xs,backendName:"webgl",kernelFunc:t$},n$="return a - b;",r$=un({opSnippet:n$,packedOpSnippet:n$,supportsComplex:!0,cpuKernelImpl:ZJ}),sae={kernelName:Hi,backendName:"webgl",kernelFunc:r$};function a$(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=w.parseAxisParam([s],a.shape),o=e$({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=N.expandShapeToKeepDim(o.shape,i),u=de({inputs:{x:o},backend:n,attrs:{shape:l}}),p=r$({inputs:{a,b:u},backend:n}),h=KE({inputs:{x:p},backend:n}),d=bf({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=de({inputs:{x:d},backend:n,attrs:{shape:l}}),f=t$({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var iae={kernelName:Ui,backendName:"webgl",kernelFunc:a$},lae={kernelName:_l,backendName:"webgl",kernelFunc:function oae(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:a$({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],p=l.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(u,p,s),c=n.runWebGLProgram(h,[l],"int32",[[i]]);return o||n.disposeIntermediateTensorInfo(l),c}},uae=$r+"\n  return -x;\n",hae={kernelName:Tl,backendName:"webgl",kernelFunc:function dae(e){let a,{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let s=n.texData.get(r.dataId),[i,o]=$J(s.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}return a=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ds(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new ua(r.shape,uae),n.runWebGLProgram(a,[r],r.dtype)}},cae=ta.nonMaxSuppressionV3Impl,mae={kernelName:El,backendName:"webgl",kernelFunc:function fae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:h}=cae(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},gae=ta.nonMaxSuppressionV4Impl,bae={kernelName:$l,backendName:"webgl",kernelFunc:function yae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=gae(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},xae=ta.nonMaxSuppressionV5Impl,wae={kernelName:Al,backendName:"webgl",kernelFunc:function vae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=xae(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Sae={kernelName:ki,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=w.sizeFromShape(a.shape),p=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,i,o,l),h=de({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(p,[h],s);n.disposeIntermediateTensorInfo(h);let f=de({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(d),f}};function Sf(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let a=Rd({inputs:{input:r},backend:n}),s=Sf({inputs:{x:a},backend:n}),i=kf({inputs:{input:r},backend:n}),o=Sf({inputs:{x:i},backend:n}),l=hs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}return Od({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var Nae={kernelName:Xl,backendName:"webgl",kernelFunc:Sf},_ae={kernelName:Fl,backendName:"webgl",kernelFunc:function s$(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let a=Rd({inputs:{input:r},backend:n}),s=s$({inputs:{x:a},backend:n}),i=kf({inputs:{input:r},backend:n}),o=Sf({inputs:{x:i},backend:n}),l=hs({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}return Od({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}},Cae={kernelName:Rl,backendName:"webgl",kernelFunc:function Tae(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Pv({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{w.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=LE({inputs:t.map(p=>{let h=Pv({inputs:{input:p},backend:n,attrs:{dim:a}});return o.push(h),h}),backend:n,attrs:{axis:a}});return o.forEach(p=>n.disposeIntermediateTensorInfo(p)),u}},i$=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===w.sizeFromShape(a.shape))return Od({backend:n,attrs:{shape:s.map((p,h)=>p[0]+a.shape[h]+p[1]),value:i,dtype:a.dtype}});let o=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let r=e.length,a=ot(r),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=_n("rc",r),l=_n("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=1===r?2:4;f<m;f++)c+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${p});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let r=e.length,a=ot(r),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype,[[i]])},Aae={kernelName:Ii,backendName:"webgl",kernelFunc:i$},Dae=un({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Oo+"\n  return result;\n"}),Mae={kernelName:Si,backendName:"webgl",kernelFunc:Dae},Lae={kernelName:_i,backendName:"webgl",kernelFunc:function Oae(e){let c,{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],u=w.parseAxisParam(s,a.shape),p=u,h=N.getAxesPermutation(p,o),d=a;if(null!=h&&(d=Tn({inputs:{x:a},backend:n,attrs:{perm:h}}),p=N.getInnerMostAxes(p.length,o),l.push(d)),N.assertAxesAreInnerMostDims("prod",p,o),n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=FJ(d.shape,d.dtype,f,p);c=n.makeTensorInfo(g,y,m)}else{let[f,m]=N.computeOutAndReduceShapes(d.shape,p),g=w.sizeFromShape(m),y=de({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),x=Lo(y,Ch(a.dtype),"prod",n);c=de({inputs:{x},backend:n,attrs:{shape:f}}),l.push(y),l.push(x)}if(i){l.push(c);let f=N.expandShapeToKeepDim(c.shape,u);c=de({inputs:{x:c},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),c}},Pae={kernelName:yh,backendName:"webgl",kernelFunc:function zae(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.readSync(y.dataId)),u=a.map(y=>y.shape),p=n.readSync(s.dataId),h=n.readSync(i.dataId),[d,c,f]=RJ(l,u,p,s.shape,s.dtype,h,i.shape,o),m=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}},Wae={kernelName:bh,backendName:"webgl",kernelFunc:function Bae(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=DJ(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],r.dtype,p)]}},Uae={kernelName:xh,backendName:"webgl",kernelFunc:function Vae(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),h=n.readSync(i.dataId),d=o.map(g=>n.readSync(g.dataId)),c=o.map(g=>g.shape),[f,m]=MJ(u,a.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}},o$=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=OJ(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Gae={kernelName:fp,backendName:"webgl",kernelFunc:o$},jae=qe({opSnippet:"return 1.0 / x;"}),qae={kernelName:Ti,backendName:"webgl",kernelFunc:jae},Xae=qe({opSnippet:$r+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Jae={kernelName:Ci,backendName:"webgl",kernelFunc:Xae},ese=qe({opSnippet:$r+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),tse={kernelName:Ai,backendName:"webgl",kernelFunc:ese},sse={kernelName:$i,backendName:"webgl",kernelFunc:function ase(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let h,u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/p[0]},\n          ${u[1]/p[1]},\n          ${u[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let h,u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/p[0]},\n          ${u[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],"float32")}},lse={kernelName:Ol,backendName:"webgl",kernelFunc:function ose(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},hse={kernelName:Ei,backendName:"webgl",kernelFunc:function dse(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let d,u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/p[0]},\n          ${u[1]/p[1]},\n          ${u[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let d,u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/p[0]},\n          ${u[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],a.dtype)}},mse={kernelName:Ml,backendName:"webgl",kernelFunc:function fse(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},xse={kernelName:Fi,backendName:"webgl",kernelFunc:function bse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(0===i)return Qn({inputs:{x:a},backend:n});let l=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=_n("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ot(n);function h(c){let f=e.map((y,b)=>function d(c,f){return-1!==t.indexOf(c)&&1!==e[c]?`${e[c]} - ${f[c]} - 1`:`${f[c]}`}(b,c));return`getChannel(getX(${f.join(",")}), vec2(${f.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function o(c){return h(c)}(r.slice())};\n          if(${a}){\n            result.g = ${function l(c){return c[n-1]="("+c[n-1]+" + 1)",h(c)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function u(c){return c[n-2]="("+c[n-2]+" + 1)",h(c)}(r.slice())};\n            if(${a}) {\n              result.a = ${function p(c){return c[n-1]="("+c[n-1]+" + 1)",c[n-2]="("+c[n-2]+" + 1)",h(c)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let a=e.map((i,o)=>(i=>-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`)(o)).join(","),s=ot(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},wse={kernelName:Jl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape,s),[u,p]=N.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,p,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},Ise=qe({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Sse={kernelName:Ri,backendName:"webgl",kernelFunc:Ise},_se=qe({opSnippet:"return inversesqrt(x);",cpuKernelImpl:LJ}),Tse={kernelName:Di,backendName:"webgl",kernelFunc:_se},Wv=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=ot(a.length),u=ot(s.length),p="";1===n?p="i":2===n&&(p="i, j");let d="";1===r?d="i":2===r&&(d="i, coords[1]");let f="";o&&(f="coords[0], coords[1]"),this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${p}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${d});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(${f}), sum, float(found)));\n        }\n      `}},$se={kernelName:Ll,backendName:"webgl",kernelFunc:function Ese(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=N.calculateShapes(s,a,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let g,c=de({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=de({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));g=H().getBool("WEBGL_PACK")?new class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=ot(a.length),u=ot(s.length),p="";1===n?p="i":2===n&&(p="i, j");let d="";1===r?d="i":2===r&&(d="i, coords[1]");let f="";o&&(f="coords[0], coords[1]"),this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(getIndices(${p}));\n              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = getUpdates(${d});\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(getDefaultValue(${f}), sum, found));\n        }\n      `}}(l,o,c.shape.length,f.shape.length,p,d):new Wv(l,o,c.shape.length,f.shape.length,p,d);let y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=de({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}},Rse={kernelName:Pl,backendName:"webgl",kernelFunc:function Fse(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===H().getNumber("WEBGL_VERSION")?"while (left < right) {":s;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===r?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}(a.shape[0],a.shape[1],s.shape[1],i);return n.runWebGLProgram(o,[a,s],"int32",[[a.shape[1]]])}},Ose={kernelName:Bl,backendName:"webgl",kernelFunc:function Mse(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);r=o.join(),a=l.join()}let s=ot(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],sr(a.dtype,s.dtype))}},zse=qe({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${N.SELU_SCALEALPHA};\n  float scale = ${N.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Pse={kernelName:Mi,backendName:"webgl",kernelFunc:zse},Vse=qe({opSnippet:Pu+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:PJ}),Use={kernelName:Pi,backendName:"webgl",kernelFunc:Vse},Hse=qe({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),jse={kernelName:zi,backendName:"webgl",kernelFunc:Hse},Zse=qe({opSnippet:Pu+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Oo}\n  return result;\n`}),Xse={kernelName:Oi,backendName:"webgl",kernelFunc:Zse},Yse=qe({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Qse={kernelName:Li,backendName:"webgl",kernelFunc:Yse},tie=qe({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),nie={kernelName:Bi,backendName:"webgl",kernelFunc:tie},aie={kernelName:Vl,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;w.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],p=i$({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=N.getReshaped(p.shape,s,o,!1),d=N.getPermuted(h.length,s.length,!1),c=N.getReshapedPermuted(p.shape,s,o,!1),f=de({inputs:{x:p},backend:n,attrs:{shape:h}}),m=Tn({inputs:{x:f},backend:n,attrs:{perm:d}}),g=de({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(p),u.push(f),u.push(m),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}},iie={kernelName:mp,backendName:"webgl",kernelFunc:function sie(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=n.readSync(i.dataId)[0],[h,d,c,f,m]=WJ(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},lie={kernelName:Gl,backendName:"webgl",kernelFunc:function oie(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,p,h]=VJ(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},pie={kernelName:gp,backendName:"webgl",kernelFunc:function uie(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=dE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}},hie={kernelName:yp,backendName:"webgl",kernelFunc:function die(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=dE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}},fie={kernelName:Hl,backendName:"webgl",kernelFunc:function cie(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=N.calculateShapes(s,a,o);if("string"===s.dtype){let y=n.bufferSync(a),b=n.bufferSync(s),x=w.decodeString(n.readSync(i.dataId)[0]),v=zJ(y,b,o,d,p,u,l,h,x,!1);return n.makeTensorInfo(o,v.dtype,v.values)}let f=new Wv(u,l,a.shape.length,s.shape.length,h,[d,1],!1),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=de({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},gie={kernelName:Ul,backendName:"webgl",kernelFunc:function mie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],l=N.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map(d=>{let c=[...h];c[o]=d;let f=Bu({inputs:{x:a},backend:n,attrs:{begin:p,size:c}});return p[o]+=d,f})}},l$="return sqrt(x);",yie=qe({opSnippet:l$,packedOpSnippet:l$,cpuKernelImpl:UJ}),bie={kernelName:Wi,backendName:"webgl",kernelFunc:yie},vie=qe({opSnippet:"return x * x;"}),wie={kernelName:bp,backendName:"webgl",kernelFunc:vie},u$="return (a - b) * (a - b);",kie=un({opSnippet:u$,packedOpSnippet:u$}),Iie={kernelName:Gi,backendName:"webgl",kernelFunc:kie},Nie={kernelName:xp,backendName:"webgl",kernelFunc:function Sie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=N.fromUint8ToStringArray(s),o=GJ(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}},Tie={kernelName:Wa,backendName:"webgl",kernelFunc:function _ie({inputs:e,attrs:t,backend:n}){let{x:r}=e,s=new ua(r.shape,$r+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(s,[r],r.dtype)}},$ie={kernelName:jl,backendName:"webgl",kernelFunc:function Eie(e){let I,{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Vt.sliceInfo(a.shape,s,i,o,l,u,p,h,d);if(m)I=de({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let T=Vt.computeOutShape(b,x,v),E=Bu({inputs:{x:a},backend:n,attrs:{begin:b,size:T}});I=de({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([a])){let T=n.readSync(a.dataId),E=Me(a.shape,a.dtype,T),A=HJ(c,E,v,b);I=n.makeTensorInfo(f,a.dtype,A.values)}else{let T=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=ot(n.length),s=ot(n.length),i="";if(1===r)i="coords * strides + begin";else{let o=0;i=n.map((l,u)=>(o++,1===n.length?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(b,v,c);I=n.runWebGLProgram(T,[a],a.dtype)}let _=de({inputs:{x:I},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(I),_}},Fie={kernelName:vp,backendName:"webgl",kernelFunc:function Aie(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:h}=t,d=n.readSync(p.dataId),c=n.readSync(h.dataId),[f,m]=jJ(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},Die={kernelName:wp,backendName:"webgl",kernelFunc:function Rie(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,p,h]=qJ(o,l,a),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},Oie={kernelName:kp,backendName:"webgl",kernelFunc:function Mie(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=KJ(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},zie=qe({opSnippet:"return tan(x);"}),Pie={kernelName:ji,backendName:"webgl",kernelFunc:zie},Wie=qe({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Vie={kernelName:qi,backendName:"webgl",kernelFunc:Wie},Gie={kernelName:zl,backendName:"webgl",kernelFunc:function Uie(e){let{inputs:t,backend:n}=e,{tensor:a,indices:s,updates:i}=t,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=N.calculateShapes(i,s,a.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(a.shape,s.dtype);let c=de({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=de({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=de({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new Wv(l,o,c.shape.length,f.shape.length,p,d,!1,!0),y=n.runWebGLProgram(g,[f,c,m],m.dtype),b=de({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};function p$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let o=n.readSync(a.dataId),l="string"===a.dtype?o.map(h=>w.decodeString(h)):o,u=Me(a.shape,a.dtype,l),p=XJ(u,s);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=ot(this.rank),a=function jie(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var qie={kernelName:Ba,backendName:"webgl",kernelFunc:p$},Zie=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function zo(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function d$(e){let t=1;for(;t<e;)t*=2;return t}var Xe,Ld,h$,Jie={kernelName:ql,backendName:"webgl",kernelFunc:function Xie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,p=u[u.length-1];if(n.shouldExecuteOnCPU([a])||p<o||s>l){let A=n.readSync(a.dataId),[D,F]=JJ(A,u,a.dtype,s,i);return[n.makeTensorInfo(D.shape,D.dtype,D.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===p)return[a,Od({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,c=d?n.unpackTensor(a):a,f=w.sizeFromShape(u)/p,m=de({inputs:{x:c},attrs:{shape:[f,p]},backend:n});d&&zo(n,c);let g=d$(s),y=d$(p),b=null,x=()=>null===b?[m,m]:[m,b],v=(A,D,F)=>{let S=x(),O=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(F),G=b;b=n.runWebGLProgram(O,S,"int32",[[p],[null===b?1:0],[Number.NEGATIVE_INFINITY],[A],[D]]),zo(n,G)};for(let A=1;A<g;A*=2){let D=2*A;for(let F=A;F>=1;F/=2)v(D,F,[f,y])}for(let A=y;A>g;A/=2){let D=x(),F=new Zie([f,A/2]),O=b;b=n.runWebGLProgram(F,D,"int32",[[p],[null===b?1:0],[g]]),zo(n,O);let U=g/2,G=2*U;for(let j=U;j>=1;j/=2)v(G,j,b.shape)}let I=b;b=Bu({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),zo(n,I);let _=QE({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});zo(n,m);let T=u.slice(0,-1);T.push(s),I=b,b=de({inputs:{x:b},attrs:{shape:T},backend:n}),zo(n,I);let E=_;return _=de({inputs:{x:_},attrs:{shape:T},backend:n}),zo(n,E),[_,b]}},eoe={kernelName:Kl,backendName:"webgl",kernelFunc:function Qie(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,h,d,c]=a.shape,[f,m]=u??[h,d],g=[p,f,m,c],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let o,i="nearest"===n?1:2;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}},noe={kernelName:Ip,backendName:"webgl",kernelFunc:function toe(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Ru(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=YJ(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},aoe={kernelName:Zl,backendName:"webgl",kernelFunc:function roe(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),p=0;for(let m=0;m<o;m++)m!==s&&(u[p++]=i.shape[m]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;let g=Bu({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),y=de({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}},ooe={kernelName:Sp,backendName:"webgl",kernelFunc:function ioe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,p=N.getAxesPermutation([u],o),h=a;null!=p&&(h=Tn({inputs:{x:a},backend:n,attrs:{perm:p}}),l.push(h),u=N.getInnerMostAxes(1,o)[0]);let d=N.segment_util.computeOutShape(h.shape,u,i),c=w.sizeFromShape([h.shape[u]]),f=de({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Ch(a.dtype),g=(v,I,_,T,E)=>{let A=v.shape[0],D=v.shape[1],F=N.segment_util.segOpComputeOptimalWindowSize(D,E),S={windowSize:F,inSize:D,batchSize:A,numSegments:E},O=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let u=4*Math.floor(n/4),p=n%4,h="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(sumValue);\n      }\n    `}}(S,I),U=n.compileAndRun(O,[v,_],T);if(l.push(U),U.shape[1]===E)return U;let G=o$({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=p$({inputs:{x:G},backend:n,attrs:{reps:[D/F]}});return l.push(G),l.push(j),g(U,I,j,T,E)},b=de({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),x=b;if(null!=p){l.push(b);let v=N.getUndoAxesPermutation(p);x=Tn({inputs:{x},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}},loe=[HY,qY,XY,QY,tQ,aQ,iQ,lQ,hQ,fQ,yQ,vQ,IQ,TQ,$Q,FQ,DQ,zQ,BQ,VQ,jQ,QQ,tee,see,oee,cee,mee,xee,CY,kee,Tee,Aee,Lee,Bee,Vee,Gee,jee,Xee,Qee,nte,ate,ite,lte,dte,cte,yte,xte,kte,Nte,Tte,Ate,Mte,Pte,Vte,Hte,jte,Kte,Xte,Yte,ene,nne,ine,une,hne,fne,yne,vne,Sne,Cne,TY,$ne,Nee,Rne,One,Pne,$Y,Une,qne,Zne,Qne,nre,ire,ure,cre,yre,vre,kre,_re,Cre,$re,Dre,Ore,zre,Bre,Vre,jre,Xre,eae,lae,RY,hae,mae,bae,wae,uee,Sae,_ae,Cae,Aae,Mae,FY,Lae,Pae,Wae,Uae,Gae,pee,aae,qae,Jae,tse,MY,sse,lse,hse,mse,xse,wse,Sse,Tse,$se,Rse,Ose,Pse,Use,jse,Xse,Qse,JQ,iae,nie,aie,iie,lie,pie,hie,fie,gie,bie,wie,Iie,Nie,Tie,$ie,Fie,Die,Oie,sae,VY,Pie,Vie,Gie,qie,Jie,eoe,UY,noe,aoe,ooe,Nae];for(let e of loe)_p(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(Xe||(Xe={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(Ld||(Ld={}));var doe={kernelName:Ki,backendName:"wasm",setupFunc:function uoe(e){h$=e.wasm.cwrap(Ki,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function poe(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let E=n.dataIdMap.get(i.dataId);if(1!==E.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=Ld[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=ru.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),I=n.dataIdMap.get(v.dataId).id,_=new Uint8Array(new Int32Array(a.shape).buffer),T=new Uint8Array(new Int32Array(s.shape).buffer);return h$(d,_,a.shape.length,c,T,s.shape.length,l,u,g,f,m,h||0,I),v}};function je(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function r(s){n=s.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function a(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,u=i.makeOutput(o.shape,t||o.dtype),p=i.dataIdMap.get(u.dataId).id;return 0===w.sizeFromShape(u.shape)||n(l,Xe[o.dtype],p),u}}}var hoe=je(Ko),coe=je($s),foe=je(As);function Lt(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function a(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function s(i){let{backend:o,inputs:l}=i,{a:u,b:p}=l,h=o.dataIdMap.get(u.dataId).id,d=o.dataIdMap.get(p.dataId).id,c=n??u.dtype,f=N.assertAndGetBroadcastShape(u.shape,p.shape),m=o.makeOutput(f,c);if(0===w.sizeFromShape(f))return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(p.shape).buffer),b=o.dataIdMap.get(m.dataId).id;return r(h,g,u.shape.length,d,y,p.shape.length,Xe[u.dtype],b),m}}}var c$,goe=Lt(za),xoe={kernelName:Fs,backendName:"wasm",setupFunc:function yoe(e){c$=e.wasm.cwrap(Fs,null,["array","number","number","number"])},kernelFunc:function boe(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===w.sizeFromShape(r.shape))return r;let a=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return c$(s,a.length,Xe[r.dtype],i),r}};function Nf(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return xn(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var f$,voe={kernelName:si,backendName:"wasm",kernelFunc:Nf};function cs(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function Ioe(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let a=0;a<r.length;++a){let s=-1;for(let i=0;i<r.length;++i)r[i]>=a&&(-1===s||r[s]>r[i])&&(s=i);r[s]=a}return[n,r]}(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=function koe(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let f=Nf({inputs:t,backend:n});return f.shape=o,f}let u=n.makeOutput(o,l.dtype),p=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return f$(p,c,l.shape.length,Xe[l.dtype],h,d,s.length),u}var m$,Soe={kernelName:fa,backendName:"wasm",kernelFunc:cs,setupFunc:function woe(e){f$=e.wasm.cwrap(fa,null,["number","array","number","number","number","array","number"])}};function fs(e,t,n){let r=e.shape,a=e.shape.length,s=w.parseAxisParam(t,r),i=s,o=N.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let p=new Array(a);for(let d=0;d<p.length;d++)p[d]=r[o[d]];i=N.getInnerMostAxes(i.length,a),l=cs({inputs:{x:e},attrs:{perm:o},backend:n});let h=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==h&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var g$,Toe={kernelName:Zo,backendName:"wasm",setupFunc:function Noe(e){m$=e.wasm.cwrap(Zo,null,["number, number, number"])},kernelFunc:function _oe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=fs(i,a,t);d&&(l=u,o=t.dataIdMap.get(u.dataId).id),N.assertAxesAreInnerMostDims("all",p,l.shape.length);let[f,m]=N.computeOutAndReduceShapes(l.shape,p),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==w.sizeFromShape(l.shape)){let b=t.dataIdMap.get(y.dataId).id;m$(o,g,b)}if(d&&t.disposeData(u.dataId),s){let b=N.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}},$oe={kernelName:Xo,backendName:"wasm",setupFunc:function Coe(e){g$=e.wasm.cwrap(Xo,null,["number, number, number"])},kernelFunc:function Eoe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=fs(i,a,t);d&&(l=u,o=t.dataIdMap.get(u.dataId).id),N.assertAxesAreInnerMostDims("any",p,l.shape.length);let[f,m]=N.computeOutAndReduceShapes(l.shape,p),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==w.sizeFromShape(l.shape)){let b=t.dataIdMap.get(y.dataId).id;g$(o,g,b)}if(d&&t.disposeData(u.dataId),s){let b=N.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}};function y$(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function n(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function r(a){let{backend:s,inputs:i,attrs:o}=a,{axis:l}=o,{x:u}=i,p=s.dataIdMap.get(u.dataId).id,h=p,d=u,{transposed:c,axes:f,inputWasTransposed:m}=fs(u,l,s);if(m){let I=s.dataIdMap.get(c.dataId).id;I!==p&&(d=c,h=I)}let g=d.shape.slice(0,-1),y=s.makeOutput(g,"int32"),b=s.dataIdMap.get(y.dataId).id,x=w.sizeFromShape(y.shape);return t(h,Xe[d.dtype],x,d.shape[f[0]],b),m&&s.disposeData(c.dataId),y}}}var b$,x$,v$,w$,Aoe=y$(Jo),Foe=y$(Yo),Roe=je(Rs),Doe=je(Ds),Moe=je(Ms),Ooe=Lt(Ls),Loe=je(Os),Boe={kernelName:zs,backendName:"wasm",setupFunc:function zoe(e){b$=e.wasm.cwrap(zs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Poe(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=N.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,b=p.strideWidth,x=p.inChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(1!==p.dilationWidth||1!==p.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let v=r.makeOutput(p.outShape,"float32"),I=r.dataIdMap.get(v.dataId).id;return b$(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,I),v}},Uoe={kernelName:Qo,backendName:"wasm",setupFunc:function Woe(e){x$=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Voe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=N.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(p.outShape,a.dtype);return x$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}},joe={kernelName:sp,backendName:"wasm",setupFunc:function Goe(e){v$=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Hoe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=N.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return v$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left,p.filterDepth,p.filterHeight,p.filterWidth),h}},Zoe={kernelName:ap,backendName:"wasm",setupFunc:function qoe(e){w$=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Koe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=N.computePool2DInfo(s.shape,i,o,1,l),p=n.makeOutput(s.shape,s.dtype);return w$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),p}};function Ln(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(a,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var k$,Xoe={kernelName:Dl,backendName:"wasm",kernelFunc:Ln},Qoe={kernelName:Ps,backendName:"wasm",setupFunc:function Joe(e){k$=e.wasm.cwrap(Ps,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function Yoe(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),b=ru.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);w.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let v=o?[y,c,h]:[y,h,c],I=Ln({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,d]:[g,d,p]}}),_=Ln({inputs:{x:s},backend:n,attrs:{shape:v}}),T=n.dataIdMap.get(I.dataId).id,E=n.dataIdMap.get(_.dataId).id,A=i?I.shape[2]:I.shape[1],D=o?_.shape[1]:_.shape[2],F=Math.max(g,y),S=n.makeOutput([F,A,D],I.dtype),O=n.dataIdMap.get(S.dataId).id,U=new Uint8Array(new Int32Array(I.shape).buffer),G=new Uint8Array(new Int32Array(_.shape).buffer);return k$(T,U,I.shape.length,E,G,_.shape.length,i,o,O),n.disposeData(I.dataId),n.disposeData(_.dataId),S.shape=b,S}};function Po(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Vt.parseSliceParams(t,n,r),o=Vt.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),p=w.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let f=Vt.computeFlatOffset(s,p);return"string"===t.dtype?h.stringBytes=l.slice(f,f+w.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(f,f+w.sizeFromShape(i))),u}if("string"===t.dtype){let f=nf(l,s,i,t.shape,t.dtype);return h.stringBytes=f,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function ele(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let p=u*t+o;n.set(e.subarray(p,p+a[1]),s),s+=a[1]}}(l,p[0],d,s,i);else if(3===c)!function tle(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],p=o+s[0],h=l+s[1];for(let d=o;d<p;d++)for(let c=l;c<h;c++){let f=d*t+c*n+u;r.set(e.subarray(f,f+s[2]),i),i+=s[2]}}(l,p[0],p[1],d,s,i);else if(4===c)!function nle(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],p=s[2],h=l+i[0],d=u+i[1],c=p+i[2],f=s[3];for(let m=l;m<h;m++)for(let g=u;g<d;g++)for(let y=p;y<c;y++){let b=m*t+g*n+y*r+f;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}(l,p[0],p[1],p[2],d,s,i);else{let f=nf(l,s,i,t.shape,t.dtype);d.set(f)}return u}var I$,rle={kernelName:Wl,backendName:"wasm",kernelFunc:Po},sle={kernelName:el,backendName:"wasm",kernelFunc:function ale(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,b)=>y*b),l=N.getReshaped(a.shape,s,o),u=N.getPermuted(l.length,s.length),p=N.getReshapedPermuted(a.shape,s,o),h=N.getSliceBeginCoords(i,s.length),d=N.getSliceSize(p,i,s.length),c=Ln({inputs:{x:a},backend:n,attrs:{shape:l}}),f=cs({inputs:{x:c},backend:n,attrs:{perm:u}}),g=Po({inputs:{x:Ln({inputs:{x:f},backend:n,attrs:{shape:p}})},backend:n,attrs:{begin:h,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),g}},lle={kernelName:tl,backendName:"wasm",setupFunc:function ile(e){I$=e.wasm.cwrap(tl,null,["number","number","boolean","number","number","number"])},kernelFunc:function ole(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=0!==s.shape.reduce((h,d)=>h*d,1),u=t.makeOutput(1===a.shape.length?[i]:[a.shape[0],i],s.dtype);function p(h){return t.dataIdMap.get(h.dataId).id}return I$(p(a),i,o,p(s),Xe[s.dtype],p(u)),u}},ple=Lt(nl),hle={kernelName:ip,backendName:"wasm",kernelFunc:function dle(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}};function ms(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var S$,cle={kernelName:Bs,backendName:"wasm",kernelFunc:ms},fle=je(Ws),yle={kernelName:Pa,backendName:"wasm",setupFunc:function mle(e){S$=e.wasm.cwrap(Pa,null,["number","number","number","number"])},kernelFunc:function gle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return S$(o,s,i,u),l}};function N$(e){let{inputs:t,backend:n}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);N.assertParamsConsistent(a,r);let s=N.computeOutShape(t.map(c=>c.shape),r),i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(1===i.length)return Nf({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===w.sizeFromShape(s))return o;if("string"===i[0].dtype){let c=i.map(x=>{let v=[-1,w.sizeFromShape(x.shape.slice(r))];return Ln({inputs:{x},backend:n,attrs:{shape:v}})}),f=c.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));s=N.computeOutShape(c.map(x=>x.shape),1);let g=nv(f,s,t[0].dtype,1===c[0].shape[0]),y=N.computeOutShape(i.map(x=>x.shape),r);return o.shape=y,n.dataIdMap.get(o.dataId).stringBytes=N.fromStringArrayToUint8(g),c.forEach(x=>n.disposeData(x.dataId)),o}let l=w.sizeFromShape(i[0].shape.slice(0,r)),u=0,p=i.map(c=>{let f=w.sizeFromShape(c.shape.slice(r));return u+=f,f}),h=i.map(c=>n.typedArrayFromHeap(c)),d=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let f=c*u;for(let m=0;m<h.length;m++){let g=p[m],y=c*g,b=h[m].subarray(y,y+g);d.set(b,f),f+=g}}return o}var _$,T$,C$,E$,$$,Vv,A$,ble={kernelName:rl,backendName:"wasm",kernelFunc:N$},wle={kernelName:Vs,backendName:"wasm",setupFunc:function xle(e){_$=e.wasm.cwrap(Vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function vle(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h,dataFormat:d}=n,c=N.convertConv2DDataFormat(d),f=N.computeConv2DInfo(a.shape,s.shape,l,u,p,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,I=f.dilationHeight,_=f.dilationWidth,T=f.strideHeight,E=f.strideWidth,A=f.inChannels,D=f.outChannels,F="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let S=r.makeOutput(f.outShape,"float32"),O=r.dataIdMap.get(S.dataId).id;return _$(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,F,I,_,T,E,A,D,O),S}},Sle={kernelName:Us,backendName:"wasm",setupFunc:function kle(e){T$=e.wasm.cwrap(Us,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Ile(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=r,d=N.convertConv2DDataFormat(l),c=N.computeConv2DInfo(p,s.shape,i,1,o,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:I,outWidth:_,strideHeight:T,strideWidth:E}=c,A=m-1-c.padInfo.top,D=g-1-c.padInfo.left,F="channelsLast"===c.dataFormat,S=w.computeStrides(c.inShape),O=w.computeStrides(a.shape),[U,G,j]=w.computeStrides(s.shape),K=S[0],Z=F?S[1]:S[2],J=F?S[2]:1,Y=F?1:S[1],te=O[0],ae=F?O[1]:O[2],ne=F?O[2]:1,se=F?1:O[1],ie=t.makeOutput(c.inShape,"float32"),ve=t.dataIdMap.get(ie.dataId).id,pe=t.dataIdMap.get(a.dataId).id,be=t.dataIdMap.get(s.dataId).id;return T$(pe,be,f,m,g,b,x,y,I,_,v,T,E,A,D,U,G,j,K,Z,J,Y,te,ae,ne,se,ve),ie}},Tle={kernelName:Gs,backendName:"wasm",setupFunc:function Nle(e){C$=e.wasm.cwrap(Gs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function _le(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=N.computeConv3DInfo(a.shape,s.shape,i,l,o),p=n.makeOutput(u.outShape,a.dtype);return C$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}},$le={kernelName:al,backendName:"wasm",setupFunc:function Cle(e){E$=e.wasm.cwrap(al,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Ele(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=N.computeConv3DInfo(a.shape,l,i,1,o),p=n.makeOutput(u.filterShape,s.dtype);return E$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}},Rle={kernelName:sl,backendName:"wasm",setupFunc:function Ale(e){$$=e.wasm.cwrap(sl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Fle(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=N.computeConv3DInfo(l,s.shape,o,1,i),p=n.makeOutput(u.inShape,a.dtype);return $$(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}},Dle=je(Hs),Mle=je(js);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Vv||(Vv={}));var F$,R$,D$,M$,O$,L$,z$,P$,B$,W$,zle={kernelName:ol,backendName:"wasm",setupFunc:function Ole(e){A$=e.wasm.cwrap(ol,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function Lle(e){let m,{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,p=l.shape[0],[h,d]=i,c=[p,h,d,o.shape[3]],f=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(m=ms({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(c,"float32"),v=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return A$(g,y,b,p,I,h,d,Vv[a],s,v),null!=m&&t.disposeData(m.dataId),x}},Wle={kernelName:il,backendName:"wasm",setupFunc:function Ple(e){F$=e.wasm.cwrap(il,null,["number","number","number","number","number","number"])},kernelFunc:function Ble(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=N.getAxesPermutation([s],l),p=a;null!==u&&(p=cs({inputs:{x:a},attrs:{perm:u},backend:n}));let h=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumprod",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;F$(f,i?1:0,o?1:0,c,m,Xe[a.dtype]);let g=d;return null!==u&&(g=cs({inputs:{x:d},attrs:{perm:N.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)),g}},Gle={kernelName:qs,backendName:"wasm",setupFunc:function Vle(e){R$=e.wasm.cwrap(qs,null,["number","number","number","number","number","number"])},kernelFunc:function Ule(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;w.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=N.getAxesPermutation([s],l),p=a;null!==u&&(p=cs({inputs:{x:a},attrs:{perm:u},backend:n}));let h=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;R$(f,i?1:0,o?1:0,c,m,Xe[a.dtype]);let g=d;return null!==u&&(g=cs({inputs:{x:d},attrs:{perm:N.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)),g}},qle={kernelName:lp,backendName:"wasm",setupFunc:function Hle(e){D$=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function jle(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=0!==s.shape.reduce((d,c)=>d*c,1),p=t.makeOutput(1===a.shape.length?[i]:[a.shape[0],i],s.dtype);function h(d){return t.dataIdMap.get(d.dataId).id}return D$(h(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,h(s),Xe[s.dtype],o,h(p)),p}},Xle={kernelName:ll,backendName:"wasm",setupFunc:function Kle(e){M$=e.wasm.cwrap(ll,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function Zle(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],h=("NHWC"===i?a.shape[1]:a.shape[2])*s,d=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),f="NHWC"===i?[o,h,d,c]:[o,c,h,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return M$(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,v),m}},Qle={kernelName:Ks,backendName:"wasm",setupFunc:function Jle(e){O$=e.wasm.cwrap(Ks,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Yle(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h}=n,c=N.computeConv2DInfo(a.shape,s.shape,l,u??[1,1],p,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,I=c.dilationWidth,_=c.strideHeight,T=c.strideWidth,E=c.inChannels,A=c.outChannels,D="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(F.dataId).id;return O$(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,D,v,I,_,T,E,A,S),F}},nue={kernelName:up,backendName:"wasm",setupFunc:function eue(e){L$=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function tue(e){let{inputs:t,backend:n}=e,{x:r}=t,a=w.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return L$(n.dataIdMap.get(r.dataId).id,Xe[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}},sue={kernelName:Zs,backendName:"wasm",setupFunc:function rue(e){z$=e.wasm.cwrap(Zs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function aue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=N.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p=n.makeOutput(u.outShape,a.dtype);return z$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,Xe[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),p}},lue={kernelName:pl,backendName:"wasm",setupFunc:function iue(e){P$=e.wasm.cwrap(pl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function oue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=N.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(s.shape,s.dtype);return P$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Xe[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),h}},due={kernelName:ul,backendName:"wasm",setupFunc:function uue(e){B$=e.wasm.cwrap(ul,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function pue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=N.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(a.shape,a.dtype);return B$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,Xe[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),h}},hue=je(Js),mue={kernelName:dl,backendName:"wasm",setupFunc:function cue(e){W$=e.wasm.cwrap(dl,null,["number","number","number"])},kernelFunc:function fue(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=o=>n.dataIdMap.get(o.dataId).id;return W$(i(a),i(r),i(s)),s}},yue=Lt(hl,0,"bool"),bue=je(Ys),xue=je(Qs,"float32");function Uv(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Ln({inputs:{x:a},backend:r,attrs:{shape:o}})}var vue={kernelName:cl,backendName:"wasm",kernelFunc:Uv},wue=je(ei,"float32");function V$(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var U$,G$,H$,j$,q$,K$,Z$,X$,J$,Y$,Q$,eA,tA,nA,rA,aA,sA,iA,Gv,oA,kue={kernelName:pp,backendName:"wasm",kernelFunc:V$},Nue={kernelName:fl,backendName:"wasm",kernelFunc:function Sue(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,p]=r.shape;return U$(s,o,l,u,p,i),a},setupFunc:function Iue(e){U$=e.wasm.cwrap(fl,null,["number","number","number","number","number","number"])}},_ue=je(ti),Cue=Lt(ni),Aue={kernelName:ri,backendName:"wasm",setupFunc:function Eue(e){G$=e.wasm.cwrap(ri,null,["number","number","number","number","number","number","number"])},kernelFunc:function $ue(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===w.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return G$(p,h,d,c,f,a,g),m}},Due={kernelName:Zi,backendName:"wasm",setupFunc:function Fue(e){H$=e.wasm.cwrap(Zi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Rue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(a.shape,s.shape,l,p,u,d),g=Ld[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let ne=r.dataIdMap.get(i.dataId);if(1!==ne.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ne.shape}) does not match the number of output channels (${x})`);v=ne.id}let I=m.filterHeight,_=m.filterWidth,T=m.padInfo.top,E=m.padInfo.right,A=m.padInfo.bottom,D=m.padInfo.left,F=m.dilationHeight,S=m.dilationWidth,O=m.strideHeight,U=m.strideWidth,G=m.inChannels,j="SAME"===m.padInfo.type?1:0,K=m.batchSize,Z=m.inHeight,J=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let Y=r.makeOutput(m.outShape,"float32"),te=r.dataIdMap.get(Y.dataId).id,ae=null==o?0:r.dataIdMap.get(o.dataId).id;return H$(y,K,Z,J,b,I,_,v,T,E,A,D,j,F,S,O,U,G,x,g,ae,f||0,te),Y}},Lue={kernelName:Xi,backendName:"wasm",setupFunc:function Mue(e){j$=e.wasm.cwrap(Xi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Oue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(a.shape,s.shape,l,p,u,d,!0),g=Ld[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let ne=r.dataIdMap.get(i.dataId);if(1!==ne.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ne.shape}) does not match the number of output channels (${x})`);v=ne.id}let I=m.filterHeight,_=m.filterWidth,T=m.padInfo.top,E=m.padInfo.right,A=m.padInfo.bottom,D=m.padInfo.left,F=m.dilationHeight,S=m.dilationWidth,O=m.strideHeight,U=m.strideWidth,G=m.inChannels,j="SAME"===m.padInfo.type?1:0,K=m.batchSize,Z=m.inHeight,J=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let Y=r.makeOutput(m.outShape,"float32"),te=r.dataIdMap.get(Y.dataId).id,ae=null==o?0:r.dataIdMap.get(o.dataId).id;return j$(y,K,Z,J,b,I,_,v,T,E,A,D,j,F,S,O,U,G,x,g,ae,f||0,te),Y}},Bue={kernelName:gl,backendName:"wasm",setupFunc:function zue(e){q$=e.wasm.cwrap(gl,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function Pue(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=_y.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let p=a.shape,h=p[p.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return q$(d,Xe[r.dtype],c,i,h,o,f,m),u}},Uue={kernelName:ml,backendName:"wasm",setupFunc:function Wue(e){K$=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function Vue(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),p=a.shape[l];for(let T=0;T<u.length;++T){let E=u[T];w.assert(E<=p-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${p-1}]`)}let h=N.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=Ln({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),f=Ln({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===w.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(d.shape)).buffer),_=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return K$(b,Xe[a.dtype],I,y,x,h.batchSize,_,v),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},Hue=Lt(yl,0,"bool"),que=Lt(ai,0,"bool"),Kue=je(ii,"bool"),Zue=je(oi,"bool"),Xue=je(li,"bool"),Que={kernelName:ui,backendName:"wasm",setupFunc:function Jue(e){Z$=e.wasm.cwrap(ui,null,["number","number","number","number"])},kernelFunc:function Yue(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==w.sizeFromShape(t.shape)){let i=r.dataIdMap.get(s.dataId).id;Z$(a,Xe[t.dtype],n,i)}return s}},tpe=Lt(bl,0,"bool"),rpe=Lt(xl,0,"bool"),ipe={kernelName:vl,backendName:"wasm",setupFunc:function ape(e){X$=e.wasm.cwrap(vl,null,["number","number","number","number"])},kernelFunc:function spe(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return X$(n.dataIdMap.get(o.dataId).id,r,a,i),o}},ope=je(pi),lpe=je(di),ppe=Lt(wl,0,"bool"),dpe=je(kl),cpe=Lt(Il,0,"bool"),mpe=Lt(Bk,0,"bool"),bpe={kernelName:hi,backendName:"wasm",setupFunc:function gpe(e){J$=e.wasm.cwrap(hi,null,["number","number","number","number","number","number","number"])},kernelFunc:function ype(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if("float32"!==a.dtype)throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return J$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}},wpe={kernelName:Sl,backendName:"wasm",setupFunc:function xpe(e){Y$=e.wasm.cwrap(Sl,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function vpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;if("float32"!==a.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let h=n.makeOutput(a.shape,a.dtype);return Y$(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,i.shape[3],o,l,u,p),h}},Spe={kernelName:ci,backendName:"wasm",setupFunc:function kpe(e){Q$=e.wasm.cwrap(ci,null,["number","number","number","number"])},kernelFunc:function Ipe(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=fs(i,a,t);d&&(l=u,o=t.dataIdMap.get(u.dataId).id),N.assertAxesAreInnerMostDims("max",p,l.shape.length);let[f,m]=N.computeOutAndReduceShapes(l.shape,p),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==w.sizeFromShape(l.shape)){let b=t.dataIdMap.get(y.dataId).id;Q$(o,Xe[i.dtype],g,b)}if(d&&t.disposeData(u.dataId),s){let b=N.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}},_pe=Lt(fi),Epe={kernelName:mi,backendName:"wasm",setupFunc:function Tpe(e){eA=e.wasm.cwrap(mi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Cpe(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;w.assert("float32"===a.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=N.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,b=p.dilationWidth,x=p.strideHeight,v=p.strideWidth,I=p.inChannels,_=p.outChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let T=r.makeOutput(p.outShape,"float32"),E=r.dataIdMap.get(T.dataId).id;return eA(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,v,I,_,E),T}},Fpe={kernelName:Nl,backendName:"wasm",setupFunc:function $pe(e){tA=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Ape(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=N.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(p.outShape,a.dtype);return tA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}},Mpe={kernelName:hp,backendName:"wasm",setupFunc:function Rpe(e){nA=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Dpe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=N.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return nA(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),h}},zpe={kernelName:dp,backendName:"wasm",setupFunc:function Ope(e){rA=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Lpe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=N.computePool2DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return rA(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),h}},Wpe={kernelName:cp,backendName:"wasm",setupFunc:function Ppe(e){aA=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Bpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;w.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let u=[1,1];w.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=N.computePool2DInfo(a.shape,s,i,[1,1],o),h=n.makeOutput(p.outShape,a.dtype),d=n.makeOutput(p.outShape,"int32");return aA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,n.dataIdMap.get(d.dataId).id,Xe[a.dtype],l,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),[h,d]}},Gpe={kernelName:gi,backendName:"wasm",setupFunc:function Vpe(e){sA=e.wasm.cwrap(gi,null,["number, number, number"])},kernelFunc:function Upe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=fs(i,a,t),f=h;if(c){let v=t.dataIdMap.get(p.dataId).id;v!==o&&(u=p,l=v,f=N.getInnerMostAxes(f.length,u.shape.length))}N.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=N.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=ms({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==w.sizeFromShape(u.shape)){let v=t.dataIdMap.get(x.dataId).id;sA(l,y,v)}if(c&&t.disposeData(p.dataId),s){let v=N.expandShapeToKeepDim(x.shape,d);x.shape=v}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}},qpe={kernelName:yi,backendName:"wasm",setupFunc:function Hpe(e){iA=e.wasm.cwrap(yi,null,["number","number","number","number"])},kernelFunc:function jpe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=fs(i,a,t);if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x)}N.assertAxesAreInnerMostDims("min",h,u.shape.length);let[m,g]=N.computeOutAndReduceShapes(u.shape,h),y=w.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==w.sizeFromShape(u.shape)){let x=t.dataIdMap.get(b.dataId).id;iA(l,Xe[i.dtype],y,x)}if(c&&t.disposeData(p.dataId),s){let x=N.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}},Zpe=Lt(bi);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(Gv||(Gv={}));var lA,Ype={kernelName:xi,backendName:"wasm",kernelFunc:function Jpe(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(f=>f[0]),h=r.map(f=>f[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return oA(i,u,t.shape.length,Xe[t.dtype],d,c,Gv[a],l),o},setupFunc:function Xpe(e){oA=e.wasm.cwrap(xi,null,["number","array","number","number","array","array","number","number"])}};function uA(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=w.sizeFromShape(n.shape)/o;return 0===w.sizeFromShape(s.shape)||lA(a,i,o,l),s}var pA,dA,ede={kernelName:Ui,backendName:"wasm",setupFunc:function Qpe(e){lA=e.wasm.cwrap(Ui,null,["number","number","number","number"])},kernelFunc:uA},rde={kernelName:_l,backendName:"wasm",setupFunc:function tde(e){pA=e.wasm.cwrap(_l,null,["number","number","number","number","number","number"])},kernelFunc:function nde(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if("float32"!==a.dtype)throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:uA({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,p]=l.shape,h=n.makeOutput([u,s],"int32");return pA(n.dataIdMap.get(l.dataId).id,u,p,s,i,n.dataIdMap.get(h.dataId).id),o||n.disposeData(l.dataId),h}},ade=Lt(vi),ide=Lt(wi),ode=je(Tl);function Hv(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var hA,cA,fA,mA,yA,bA,xA,vA,wA,kA,IA,SA,NA,_A,TA,CA,EA,$A,AA,pde={kernelName:El,backendName:"wasm",setupFunc:function lde(e){dA=e.wasm.cwrap(El,"number",["number","number","number","number","number"])},kernelFunc:function ude(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=dA(u,p,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=Hv(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}},cde={kernelName:$l,backendName:"wasm",setupFunc:function dde(e){hA=e.wasm.cwrap($l,"number",["number","number","number","number","number","bool"])},kernelFunc:function hde(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=hA(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Hv(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}},gde={kernelName:Al,backendName:"wasm",setupFunc:function fde(e){cA=e.wasm.cwrap(Al,"number",["number","number","number","number","number","number"])},kernelFunc:function mde(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=cA(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Hv(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},bde=Lt(Cl,0,"bool"),wde={kernelName:ki,backendName:"wasm",setupFunc:function xde(e){fA=e.wasm.cwrap(ki,null,["number","number","number","number","number"])},kernelFunc:function vde(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),p=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(a.dataId).id;return fA(h,i,o,l,p),u}},Ide={kernelName:Fl,backendName:"wasm",kernelFunc:function kde(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},Nde={kernelName:Rl,backendName:"wasm",kernelFunc:function Sde(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Uv({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{w.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=N$({inputs:t.map(p=>{let h=Uv({inputs:{input:p},backend:n,attrs:{dim:a}});return o.push(h),h}),backend:n,attrs:{axis:a}});return o.forEach(p=>n.disposeData(p.dataId)),u}},gA={kernelName:Ii,backendName:"wasm",kernelFunc:function Tde(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]);if(0===w.sizeFromShape(t.shape))return V$({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(f=>f[0]),h=r.map(f=>f[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return mA(i,u,t.shape.length,Xe[t.dtype],d,c,a,l),o},setupFunc:function _de(e){mA=e.wasm.cwrap(Ii,null,["number","array","number","number","array","array","number","number"])}},Ede=Lt(Si),Fde={kernelName:Ni,backendName:"wasm",setupFunc:function $de(e){yA=e.wasm.cwrap(Ni,null,["number","number","number"])},kernelFunc:function Ade(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=ms({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let p=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(p.dataId).id;return yA(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),p}},Mde={kernelName:_i,backendName:"wasm",setupFunc:function Rde(e){bA=e.wasm.cwrap(_i,null,["number","number","number","number"])},kernelFunc:function Dde(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=fs(i,a,t),f=h;if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x,f=N.getInnerMostAxes(f.length,u.shape.length))}N.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=N.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==w.sizeFromShape(u.shape)){let x=t.dataIdMap.get(b.dataId).id;bA(l,y,Xe[b.dtype],x)}if(c&&t.disposeData(p.dataId),s){let x=N.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}},Lde={kernelName:fp,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=iv(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},Pde=Lt(Xs),Bde=je(Ti),Wde=je(Ci),Vde=je(Ai),Hde={kernelName:$i,backendName:"wasm",setupFunc:function Ude(e){xA=e.wasm.cwrap($i,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Gde(e){let g,{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[p,h,d,c]=a.shape,f=[p,l,u,c],m=t.dataIdMap.get(a.dataId);"float32"!==m.dtype&&(g=ms({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,b=t.makeOutput(f,"float32");if(0===w.sizeFromShape(a.shape))return b;let x=t.dataIdMap.get(b.dataId).id;return xA(y,p,h,d,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),b}},Kde={kernelName:Ol,backendName:"wasm",setupFunc:function jde(e){vA=e.wasm.cwrap(Ol,null,["number","number","number","array","array","boolean"])},kernelFunc:function qde(e){let u,{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId);return"float32"!==l.dtype&&(u=ms({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),vA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),null!=u&&n.disposeData(u.dataId),o}},Jde={kernelName:Ei,backendName:"wasm",setupFunc:function Zde(e){wA=e.wasm.cwrap(Ei,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Xde(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[p,h,d,c]=a.shape,m=t.makeOutput([p,l,u,c],"float32");if(0===w.sizeFromShape(a.shape))return m;let y,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(y=ms({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(m.dataId).id;return wA(b,p,h,d,c,l,u,s?1:0,i?1:0,x),null!=y&&t.disposeData(y.dataId),m}},ehe={kernelName:Ml,backendName:"wasm",setupFunc:function Yde(e){kA=e.wasm.cwrap(Ml,null,["number","number","number","array","array","boolean"])},kernelFunc:function Qde(e){let u,{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),l=n.dataIdMap.get(a.dataId);return"float32"!==l.dtype&&(u=ms({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),l=n.dataIdMap.get(u.dataId)),kA(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),null!=u&&n.disposeData(u.dataId),o}},rhe={kernelName:Fi,backendName:"wasm",kernelFunc:function nhe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=w.parseAxisParam(s,a.shape);if(0===a.shape.length)return Nf({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);IA(l,p,i.length,h,a.shape.length,u);let d=Ln({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function the(e){IA=e.wasm.cwrap(Fi,null,["number","array","number","array","number","number"])}},ihe={kernelName:Jl,backendName:"wasm",kernelFunc:function she(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(l.dataId).id,[h,d,c,f]=a.shape,[m,g]=N.getImageCenter(o,d,c),x="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],v=new Uint8Array(new Int32Array(x).buffer);return SA(u,h,d,c,f,s,m,g,v,x.length,p),l},setupFunc:function ahe(e){SA=e.wasm.cwrap(Jl,null,["number","number","number","number","number","number","number","number","array","number","number"])}},ohe=je(Ri),lhe=je(Di),dhe={kernelName:Ll,backendName:"wasm",setupFunc:function uhe(e){NA=e.wasm.cwrap(Ll,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function phe(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===w.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=ac.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return NA(c,f,Xe[s.dtype],l,u,p,m,d,g),o}},fhe={kernelName:Pl,backendName:"wasm",setupFunc:function hhe(e){_A=e.wasm.cwrap(Pl,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function che(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(u){return n.dataIdMap.get(u.dataId).id}return _A(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],Xe[a.dtype],"left"===i,l(o)),o}},yhe={kernelName:Bl,backendName:"wasm",kernelFunc:function ghe(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(u.dataId).id,h=r.shape.length,c=0===h||h>1||1===a.shape.length?1:w.sizeFromShape(a.shape.slice(1));return TA(i,o,l,c,p),u},setupFunc:function mhe(e){TA=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},bhe=je(Mi),whe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function xhe(e){CA=e.wasm.cwrap(Pi,null,["number","number"])},kernelFunc:function vhe(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===w.sizeFromShape(a.shape)||CA(r,s),a}},khe=je(zi),Ihe=je(Oi),She=je(Li),Nhe=je(Bi),The={kernelName:Vl,backendName:"wasm",kernelFunc:function _he(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=gA.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=N.getReshaped(u.shape,s,o,!1),h=N.getPermuted(p.length,s.length,!1),d=N.getReshapedPermuted(u.shape,s,o,!1),c=Ln({inputs:{x:u},backend:n,attrs:{shape:p}}),f=cs({inputs:{x:c},backend:n,attrs:{perm:h}}),m=Ln({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}},$he={kernelName:mp,backendName:"wasm",setupFunc:function Che(e){EA=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function Ehe(e){let D,{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],p=[o+u,l],h=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(p,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(p.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([u],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([o],r.dtype),I=t.dataIdMap.get(v.dataId).id,_=t.makeOutput([4],"int32"),T=t.dataIdMap.get(_.dataId).id,E=EA(h,d,Xe[a.dtype],o,u,l,c,m,y,x,I,T),A=t.readSync(_.dataId);switch(A[0]){case 1:D=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break;case 2:D=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break;case 3:D=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:D=""}if(t.disposeData(_.dataId),D)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(D);let F=f,S=g;return E!==p[0]&&(F=Po({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),S=Po({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[F,S,b,v]}},Rhe={kernelName:Gl,backendName:"wasm",setupFunc:function Ahe(e){$A=e.wasm.cwrap(Gl,null,["number","number","number","number","number","number","number"])},kernelFunc:function Fhe(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],p=w.sizeFromShape(s.shape),h=t.makeOutput([u,p],r.dtype),d=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;$A(i,o,l,u,d,f,g);let b,y=t.readSync(m.dataId);switch(y[0]){case 0:b=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break;case 1:b=N.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break;case 2:b=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=N.getSparseReshapeInputOutputMultipleErrorMessage(x,v);break}case 4:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=N.getSparseReshapeInputOutputMismatchErrorMessage(x,v);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(b);return[h,c]}};function FA(e){AA=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function RA(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=a.shape.slice();p[0]=u;let h=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(p,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;AA(h,Xe[a.dtype],a.shape[0],d,c,m,y,t,0);let x,b=n.readSync(g.dataId);switch(b[0]){case 0:x=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:x=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:x=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}var DA,MA,OA,LA,zA,PA,BA,WA,Mhe={kernelName:gp,backendName:"wasm",setupFunc:FA,kernelFunc:function Dhe(e){return RA(e,!0)}},Lhe={kernelName:yp,backendName:"wasm",setupFunc:FA,kernelFunc:function Ohe(e){return RA(e,!1)}},Bhe={kernelName:Hl,backendName:"wasm",setupFunc:function zhe(e){DA=e.wasm.cwrap(Hl,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function Phe(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(0===w.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:p,sliceSize:h,strides:d,outputSize:c}=N.calculateShapes(s,a,o),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),b=t.dataIdMap.get(l.dataId).id;return DA(f,m,s.shape.length,g,Xe[i.dtype],u,p,h,y,c,b),l}},Vhe={kernelName:Ul,backendName:"wasm",kernelFunc:function Whe(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=w.parseAxisParam(i,a.shape)[0],l=N.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(h=>{let d=[...p];d[o]=h;let c=Po({inputs:{x:a},attrs:{begin:u,size:d},backend:r});return u[o]+=h,c})}},Uhe=je(Wi),Ghe=je(bp),jhe=Lt(Gi),Zhe={kernelName:Wa,backendName:"wasm",setupFunc:function qhe(e){MA=e.wasm.cwrap(Wa,null,["number","number","number","number"])},kernelFunc:function Khe(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return MA(i,a,Xe[s.dtype],l),o}},Yhe={kernelName:jl,backendName:"wasm",setupFunc:function Xhe(e){OA=e.wasm.cwrap(jl,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function Jhe(e){let I,{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Vt.sliceInfo(a.shape,s,i,o,l,u,p,h,d);if(m)I=Ln({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let _=Vt.computeOutShape(b,x,v),T=Po({inputs:{x:a},backend:t,attrs:{begin:b,size:_}});I=Ln({inputs:{x:T},backend:t,attrs:{shape:f}}),t.disposeData(T.dataId)}else{let _=t.makeOutput(c,"float32"),T=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(b).buffer),D=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(v).buffer),S=new Uint8Array(new Int32Array(c).buffer),O=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),U=t.dataIdMap.get(_.dataId).id;OA(T,E,a.shape.length,A,D,F,S,O,c.length,U),I=Ln({inputs:{x:_},backend:t,attrs:{shape:f}}),t.disposeData(_.dataId)}return I}},ece={kernelName:vp,backendName:"wasm",kernelFunc:function Qhe(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:h}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=lv(d,c,i,o,l,u,p,h),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}},nce={kernelName:wp,backendName:"wasm",kernelFunc:function tce(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,p,h]=uv(o,l[0],i),d=p.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string");t.dataIdMap.get(f.dataId).stringBytes=p;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(h),[c,f,g]}},ace={kernelName:kp,backendName:"wasm",kernelFunc:function rce(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,o=pv(t.readSync(a.dataId),s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}},ice=Lt(Hi),uce={kernelName:Vi,backendName:"wasm",setupFunc:function oce(e){LA=e.wasm.cwrap(Vi,null,["number","number","number","number"])},kernelFunc:function lce(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=fs(i,a,t),f=h;if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x,f=N.getInnerMostAxes(f.length,u.shape.length))}N.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=N.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==w.sizeFromShape(u.shape)){let x=t.dataIdMap.get(b.dataId).id;LA(l,y,Xe[b.dtype],x)}if(c&&t.disposeData(p.dataId),s){let x=N.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}},pce=je(ji),dce=je(qi),fce={kernelName:zl,backendName:"wasm",setupFunc:function hce(e){zA=e.wasm.cwrap(zl,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function cce(e){let{backend:t,inputs:n}=e,{tensor:a,indices:s,updates:i}=n,o=t.makeOutput(a.shape,a.dtype);if(0===w.sizeFromShape(a.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=ac.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return zA(c,f,Xe[i.dtype],l,u,p,g,d,y,m),o}},yce={kernelName:Ba,backendName:"wasm",setupFunc:function mce(e){PA=e.wasm.cwrap(Ba,null,["number","array","number","array","number","number"])},kernelFunc:function gce(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(p.dataId).id;return PA(s,l,a.shape.length,u,o.length,Xe[p.dtype],h),p}},vce={kernelName:ql,backendName:"wasm",setupFunc:function bce(e){BA=e.wasm.cwrap(ql,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),p=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return BA(i,o,r.shape.length,Xe[r.dtype],a,s,p,d),[u,h]}},Ice={kernelName:Kl,backendName:"wasm",setupFunc:function wce(e){WA=e.wasm.cwrap(Kl,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function kce(e){let E,{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,h,d,c]=a.shape,[f,m]=u??[h,d],g=[p,f,m,c],y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),v=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,_=t.dataIdMap.get(s.dataId).id,T="nearest"===i?1:2;switch(o){case"constant":default:E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4}return WA(I,_,s.shape[0]>1,p,f,m,c,d,h,y,a.shape.length-1,b,g.length-1,T,E,l,v),x}},Nce={kernelName:Ip,backendName:"wasm",kernelFunc:function Sce(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=hv(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}},Tce={kernelName:Zl,backendName:"wasm",kernelFunc:function _ce(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let c=0;c<p.length;c++)h[s]=c,p[c]=Po({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return p.map(({dataId:c,dtype:f})=>({dataId:c,dtype:f,shape:l}))}},Ece={kernelName:Xl,backendName:"wasm",kernelFunc:function Cce(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},$ce=[doe,hoe,coe,foe,goe,xoe,Toe,$oe,Aoe,Foe,Roe,Doe,Moe,Ooe,Loe,Boe,Zoe,Uoe,joe,Qoe,sle,lle,ple,hle,cle,fle,yle,ble,wle,Sle,Tle,$le,Rle,Dle,Mle,zle,Wle,Gle,qle,Xle,Qle,nue,sue,lue,due,hue,mue,yue,bue,xue,vue,wue,kue,Nue,_ue,Cue,Aue,Due,Lue,Bue,Uue,Hue,que,voe,Kue,Zue,Xue,Que,tpe,rpe,ipe,lpe,ope,ppe,dpe,cpe,mpe,bpe,wpe,Spe,_pe,Epe,Fpe,Mpe,zpe,Wpe,Gpe,qpe,Zpe,Ype,rde,ade,ide,ode,pde,cde,gde,bde,wde,Ide,Nde,gA,Ede,Fde,Mde,Lde,Pde,Bde,Wde,Vde,Xoe,Hde,Kde,Jde,ehe,rhe,ihe,ohe,lhe,dhe,fhe,yhe,bhe,whe,khe,Ihe,She,rle,ede,Nhe,The,$he,Rhe,Mhe,Lhe,Bhe,Vhe,Uhe,Ghe,jhe,Zhe,Yhe,ece,nce,ace,ice,uce,pce,dce,fce,yce,vce,Ice,Soe,Nce,Tce,Ece];for(let e of $ce)_p(e);var jv=H();jv.registerFlag("WASM_HAS_SIMD_SUPPORT",(0,R.Z)(function*(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}})),jv.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(0,R.Z)(function*(){if(jv.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}}));var VA=Ma(mR()),Ace=Ma(gR()),UA=Ma(yR()),GA=VA.default||VA,Fce=UA.default||UA,HA=class extends ep{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(qA),Zv=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new rh(this,wr())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}time(e){return(0,R.Z)(function*(){let t=w.now();return e(),{kernelMs:w.now()-t}})()}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r)return void this.dataIdMap.set(e,{id:s,stringBytes:t,shape:n,dtype:r,memoryOffset:null,refCount:a});let i=w.sizeFromShape(n),o=i*w.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}read(e){var t=this;return(0,R.Z)(function*(){return t.readSync(e)})()}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||w.sizeFromShape(s);let o=w.bytesPerElement(a);return function Mce(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(null==n)a=this.write(r??null,e,t);else{let s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function jA(e,t,n){if(null!=_f)return _f;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Pd&&null!=Pd[r]?Pd[r]:n+r}function qv(){return qv=(0,R.Z)(function*(){let[e,t]=yield Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={locateFile:(o,l)=>{if(o.endsWith(".worker.js")){let u=Ace.wasmWorkerContents.replace(/\n/g,"\\n"),p=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(p)}return o.endsWith(".wasm")?jA(e,t,zd??l):l+o}};Kv&&(a.instantiateWasm=function Rce(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{n(s.instance,s.module)})})}),{})}(jA(e,t,zd??"")));let i,s=!1;a.onAbort=()=>{s||Bd||(Bd=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==_f?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+GA.toString()],{type:"text/javascript"}),i=GA(a)):i=Fce(a),i.then(o=>{s=!0,Bd=!1,o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",null,["number"]),dispose:o.cwrap("dispose",null,[])},n({wasm:o})}).catch(r)})}),qv.apply(this,arguments)}var Oce=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],_f=null,zd=null,Pd={},Bd=!1,Kv=!1;function Lce(e,t=!1){if(Zm("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Bd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");_f=e,Kv=t}function zce(e,t=!1){if(Bd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)zd=e;else{Pd=e;let n=Oce.filter(r=>null==Pd[r]);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Kv=t}var qA=-1,Zv=-1;function Pce(e){qA=e}function Bce(){if(-1===Zv)throw new Error("WASM backend not initialized.");return Zv}var Wce="4.7.0";Fh("wasm",(0,R.Z)(function*(){let{wasm:e}=yield function Dce(){return qv.apply(this,arguments)}();return new HA(e)}),2);var qce={tfjs:"4.7.0","tfjs-core":"4.7.0","tfjs-converter":"4.7.0","tfjs-backend-cpu":"4.7.0","tfjs-backend-webgl":"4.7.0","tfjs-backend-wasm":"4.7.0"},ZA={};function gs(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(r,a)}),n){let r=t[t.length-1],a=t[0];if(!r||!a)return;e.moveTo(r.x,r.y),e.lineTo(a.x,a.y)}e.stroke()}Fr(ZA,{AnchorPosition:()=>oF,DrawBox:()=>uF,DrawBoxOptions:()=>lF,DrawFaceLandmarks:()=>SF,DrawFaceLandmarksOptions:()=>IF,DrawTextField:()=>Af,DrawTextFieldOptions:()=>a0,drawContour:()=>gs,drawDetections:()=>ife,drawFaceExpressions:()=>wfe,drawFaceLandmarks:()=>Ife}),Fr({},{computeReshapedDimensions:()=>YA,getCenterPoint:()=>Cf,isDimensions:()=>Jv,isEven:()=>Xv,isFloat:()=>JA,isTensor:()=>Vu,isTensor1D:()=>Zce,isTensor2D:()=>XA,isTensor3D:()=>Wd,isTensor4D:()=>Ea,isValidNumber:()=>bs,isValidProbablitiy:()=>Ef,range:()=>Uu,round:()=>Tf});var ys=class{constructor(e,t){if(!bs(e)||!bs(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new ys(1/this.width,1/this.height)}};function Vu(e,t){return e instanceof $e&&e.shape.length===t}function Zce(e){return Vu(e,1)}function XA(e){return Vu(e,2)}function Wd(e){return Vu(e,3)}function Ea(e){return Vu(e,4)}function JA(e){return e%1!=0}function Xv(e){return e%2==0}function Tf(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Jv(e){return e&&e.width&&e.height}function YA({width:e,height:t},n){let r=n/Math.max(t,e);return new ys(Math.round(e*r),Math.round(t*r))}function Cf(e){return e.reduce((t,n)=>t.add(n),new Je(0,0)).div(new Je(e.length,e.length))}function Uu(e,t,n){return Array(e).fill(0).map((r,a)=>t+a*n)}function bs(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function Ef(e){return bs(e)&&e>=0&&e<=1}var Je=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new Je(this.x+e.x,this.y+e.y)}sub(e){return new Je(this.x-e.x,this.y-e.y)}mul(e){return new Je(this.x*e.x,this.y*e.y)}div(e){return new Je(this.x/e.x,this.y/e.y)}abs(){return new Je(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Je(Math.floor(this.x),Math.floor(this.y))}},pn=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(bs)}static assertIsValidBox(e,t,n=!1){if(!pn.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(bs),a=[n.x,n.y,n.width,n.height].every(bs);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];pn.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Je(this.left,this.top)}get topRight(){return new Je(this.right,this.top)}get bottomLeft(){return new Je(this.left,this.bottom)}get bottomRight(){return new Je(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(a=>Math.round(a));return new pn({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(a=>Math.floor(a));return new pn({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new pn({x:e,y:t,width:n,height:r})}rescale(e){let t=Jv(e)?e.width:e,n=Jv(e)?e.height:e;return new pn({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new pn({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=s-o,p=Math.min(a-i,e-i),h=Math.min(u,t-o);return new pn({x:i,y:o,width:p,height:h}).floor()}shift(e,t){let{width:n,height:r}=this;return new pn({x:this.x+e,y:this.y+t,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,i=n,o=r,l=this.left,u=this.top,p=this.right,h=this.bottom;return p>t&&(i=-p+t+n,p=t),h>e&&(o=-h+e+r,h=e),l<1&&(o=2-l,l=1),u<1&&(o=2-u,u=1),{dy:1,edy:o,dx:1,edx:i,y:u,ey:h,x:l,ex:p,w:n,h:r}}calibrate(e){return new pn({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},QA=class extends pn{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},Yv=class{constructor(e,t,n,r,a){this._imageDims=new ys(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new pn(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new pn(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new Yv(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},hr=class extends Yv{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new hr(n,r,a)}};function Xce(e,t,n=!0){let s=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function Vd(e,t){return W(()=>{let[n,r,a]=t,s=Gn([...e.shape.slice(0,3),1],n,"float32"),i=Gn([...e.shape.slice(0,3),1],r,"float32"),o=Gn([...e.shape.slice(0,3),1],a,"float32"),l=at([s,i,o],3);return ce(e,l)})}function Qv(e){return 1/(1+Math.exp(-e))}var tn,eF=class extends pn{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},Ud=class{constructor(e,t,n=new Je(0,0)){let{width:r,height:a}=t;this._imgDims=new ys(r,a),this._shift=n,this._positions=e.map(s=>s.mul(new Je(r,a)).add(n))}get shift(){return new Je(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new Je(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new Je(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof hr?e.box.floor():new pn(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=p=>r.sub(p).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=Cf(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new eF(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=function Jce(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),r=t.reduce((o,l)=>l<o?l:o,1/0),a=n.reduce((o,l)=>l<o?l:o,1/0),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new QA(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},tF=class extends Ud{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Cf)}};function Hd(e){return e.detection instanceof hr}function $f(e,t){return{...e,detection:t}}function rF(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function e0(){return"object"==typeof global&&typeof process<"u"&&null!=process.versions&&null!=process.versions.node}function aF(e){let t="";if(!e&&e0())try{e=jr("fs")}catch(n){t=n.toString()}return{readFile:e?n=>new Promise((r,a)=>{e.readFile(n,(s,i)=>s?a(s):r(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function sF(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,i=global.fetch,o=aF();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:i,...o}}function iF(){return"object"==typeof window&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}function t0(e){tn=e}function n0(){return iF()?t0(rF()):e0()?t0(sF()):null}var fn={getEnv:function afe(){if(!tn)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return tn},setEnv:t0,initialize:n0,createBrowserEnv:rF,createFileSystem:aF,createNodejsEnv:sF,monkeyPatch:function sfe(e){if(tn||n0(),!tn)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=tn.Canvas,Image:n=tn.Image}=e;tn.Canvas=t,tn.Image=n,tn.createCanvasElement=e.createCanvasElement||(()=>new t),tn.createImageElement=e.createImageElement||(()=>new n),tn.ImageData=e.ImageData||tn.ImageData,tn.Video=e.Video||tn.Video,tn.fetch=e.fetch||tn.fetch,tn.readFile=e.readFile||tn.readFile},isBrowser:iF,isNodejs:e0};function r0(e){return fn.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function xs(e){let{Canvas:t,CanvasRenderingContext2D:n}=fn.getEnv();if(e instanceof n)return e;let r=r0(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}n0();var oF=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(oF||{}),a0=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},Af=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof Af?e.text:e,this.anchor=t,this.options=new a0(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map(n=>e.measureText(n).width).reduce((n,r)=>n<r?r:n,0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:u,height:p}=t;return{x:Math.max(Math.min(o,u-s),0),y:Math.max(Math.min(l,p-i),0)}}return{x:o,y:l}}draw(e){let t=r0(e),n=xs(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let p=this.getUpperLeft(n,t);n.fillRect(p.x,p.y,l,u),n.fillStyle=a,this.text.forEach((h,d)=>{n.fillText(h,o+p.x,o+p.y+(d+1)*s)})}},lF=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r,this.drawLabelOptions=new a0({anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor,...a})}},uF=class{constructor(e,t={}){this.box=new pn(e),this.options=new lF(t)}draw(e){let t=xs(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new Af([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function ife(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof hr?n.score:Hd(n)?n.detection.score:void 0,a=n instanceof hr?n.box:Hd(n)?n.detection.box:new pn(n),s=r?`${Tf(r)}`:void 0;new uF(a,{label:s}).draw(e)})}function pF(e){let{Image:t,Video:n}=fn.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function s0(e){let{Image:t,Video:n}=fn.getEnv();return e instanceof t?new ys(e.naturalWidth,e.naturalHeight):e instanceof n?new ys(e.videoWidth,e.videoHeight):new ys(e.width,e.height)}function Ff({width:e,height:t}){let{createCanvasElement:n}=fn.getEnv(),r=n();return r.width=e,r.height=t,r}function i0(e,t){let{ImageData:n}=fn.getEnv();if(!(e instanceof n||pF(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||s0(e),s=Ff({width:r,height:a});return e instanceof n?xs(s).putImageData(e,0,0):xs(s).drawImage(e,0,0,r,a),s}function o0(){return o0=(0,R.Z)(function*(e,t){let n=t||fn.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(Ea(e)?1:0),i=W(()=>e.as3D(r,a,s).toInt());return yield ed.toPixels(i,n),i.dispose(),n}),o0.apply(this,arguments)}function dF(e){let{Image:t,Canvas:n,Video:r}=fn.getEnv();return e instanceof t||e instanceof n||e instanceof r}var Rf=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((n,r)=>{if(Wd(n))return this._imageTensors[r]=n,void(this._inputDimensions[r]=n.shape);if(Ea(n)){let s=n.shape[0];if(1!==s)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);return this._imageTensors[r]=n,void(this._inputDimensions[r]=n.shape.slice(1))}let a=n instanceof fn.getEnv().Canvas?n:i0(n);this._canvases[r]=a,this._inputDimensions[r]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Uu(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return YA({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,W(()=>{let n=Uu(this.batchSize,0,1).map(r=>{let a=this.getInput(r);if(a instanceof $e){let s=Ea(a)?a:an(a);return s=function Qce(e,t=!1){return W(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=h=>{let d=e.shape.slice();return d[i]=h,Gn(d,0,"float32")},l=o(s),u=a-l.shape[i],p=[t&&u?o(u):null,e,l].filter(h=>!!h).map(h=>le(h,"float32"));return at(p,i)})}(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=lr.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof fn.getEnv().Canvas)return ed.fromPixels(function pfe(e,t,n=!1){let{Image:r,Canvas:a}=fn.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Ff({width:1,height:1});let s=s0(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=Ff({width:t,height:t}),p=e instanceof a?e:i0(e),h=Math.abs(o-l)/2,d=n&&o<l?h:0,c=n&&l<o?h:0;return p.width>0&&p.height>0&&xs(u).drawImage(p,d,c,o,l),u}(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${r}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Wt(n.map(r=>le(r,"float32"))).as4D(this.batchSize,e,e,3)})}};function Cn(e){return l0.apply(this,arguments)}function l0(){return l0=(0,R.Z)(function*(e){if(e instanceof Rf)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=a=>Array.isArray(e)?` at input index ${a}:`:"",r=t.map(r0);return r.forEach((a,s)=>{if(!dF(a)&&!Wd(a)&&!Ea(a))throw"string"==typeof t[s]?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(Ea(a)){let i=a.shape[0];if(1!==i)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),yield Promise.all(r.map(a=>dF(a)&&function ofe(e){return new Promise((t,n)=>{function r(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),n(s))}function a(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),t(s))}(e instanceof fn.getEnv().Canvas||pF(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)})}(a))),new Rf(r,Array.isArray(e))}),l0.apply(this,arguments)}function u0(e,t){return p0.apply(this,arguments)}function p0(){return p0=(0,R.Z)(function*(e,t){let{Canvas:n}=fn.getEnv(),r=e;if(!(e instanceof n)){let s=yield Cn(e);if(s.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=s.getInput(0);r=i instanceof n?i:yield function ufe(e,t){return o0.apply(this,arguments)}(i)}let a=xs(r);return t.map(s=>s instanceof hr?s.forSize(r.width,r.height).box.floor():s).map(s=>s.clipAtImageBorders(r.width,r.height)).map(({x:s,y:i,width:o,height:l})=>{let u=Ff({width:o,height:l});return o>0&&l>0&&xs(u).putImageData(a.getImageData(s,i,o,l),0,0),u})}),p0.apply(this,arguments)}function d0(e,t){return h0.apply(this,arguments)}function h0(){return h0=(0,R.Z)(function*(e,t){if(!Wd(e)&&!Ea(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(Ea(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return W(()=>{let[n,r,a]=e.shape.slice(Ea(e)?1:0);return t.map(s=>s instanceof hr?s.forSize(r,n).box:s).map(s=>s.clipAtImageBorders(r,n)).filter(s=>s.width>0&&s.height>0).map(({x:s,y:i,width:o,height:l})=>cu(e.as3D(n,r,a),[i,s,0],[l,o,a]))})}),h0.apply(this,arguments)}function c0(){return c0=(0,R.Z)(function*(e,t){let{fetch:n}=fn.getEnv(),r=yield n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}),c0.apply(this,arguments)}function m0(){return m0=(0,R.Z)(function*(e){return(yield function Df(e,t){return c0.apply(this,arguments)}(e)).json()}),m0.apply(this,arguments)}function hF(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}function b0(){return b0=(0,R.Z)(function*(e,t){let{manifestUri:n,modelBaseUri:r}=hF(e,t),a=yield function dfe(e){return m0.apply(this,arguments)}(n);return sn.loadWeights(a,r)}),b0.apply(this,arguments)}function ffe(e,t,n=!1){let{width:r,height:a}=n?s0(t):t;return e.width=r,e.height=a,{width:r,height:a}}var vs=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Qi)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Qi))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=xn(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}load(e){var t=this;return(0,R.Z)(function*(){e instanceof Float32Array?t.extractWeights(e):yield t.loadFromUri(e)})()}loadFromUri(e){var t=this;return(0,R.Z)(function*(){if(e&&"string"!=typeof e)throw new Error(`${t._name}.loadFromUri - expected model uri`);let n=yield function cfe(e,t){return b0.apply(this,arguments)}(e,t.getDefaultModelName());t.loadFromWeightMap(n)})()}loadFromDisk(e){var t=this;return(0,R.Z)(function*(){if(e&&"string"!=typeof e)throw new Error(`${t._name}.loadFromDisk - expected model file path`);let{readFile:n}=fn.getEnv(),{manifestUri:r,modelBaseUri:a}=hF(e,t.getDefaultModelName()),i=sn.weightsLoaderFactory(u=>Promise.all(u.map(p=>n(p).then(h=>h.buffer)))),o=JSON.parse((yield n(r)).toString()),l=yield i(o,a);t.loadFromWeightMap(l)})()}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof $e))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function cr(e,t,n){return W(()=>{let r=hu(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=ee(r,t.bias),r})}function x0(e,t,n=!1){return W(()=>{let r=tt(n?ee(wn(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):cr(e,t.conv0,[2,2])),a=cr(r,t.conv1,[1,1]),i=cr(tt(ee(r,a)),t.conv2,[1,1]);return tt(ee(r,ee(a,i)))})}function Mf(e,t,n=!1,r=!0){return W(()=>{let a=tt(n?ee(wn(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):cr(e,t.conv0,r?[2,2]:[1,1])),s=cr(a,t.conv1,[1,1]),o=cr(tt(ee(a,s)),t.conv2,[1,1]),u=cr(tt(ee(a,ee(s,o))),t.conv3,[1,1]);return tt(ee(a,ee(s,ee(o,u))))})}function jd(e,t,n="same",r=!1){return W(()=>{let a=ee(wn(e,t.filters,[1,1],n),t.bias);return r?tt(a):a})}function ws(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function v0(e,t){return(n,r,a,s)=>{let i=Qa(e(n*r*a*a),[a,a,n,r]),o=nt(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function cF(e,t){return(n,r,a)=>{let s=Qr(e(n*r),[n,r]),i=nt(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var fF=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function w0(e,t){return(n,r,a)=>{let s=Qa(e(9*n),[3,3,n,1]),i=Qa(e(n*r),[1,1,n,r]),o=nt(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new fF(s,i,o)}}function k0(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new fF(n,r,a)}}function Bo(e,t){return(n,r,a)=>{let s=e[n];if(!Vu(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function ks(e){let t=e;return{extractWeights:function n(a){let s=t.slice(0,a);return t=t.slice(a),s},getRemainingWeights:function r(){return t}}}function mF(e,t){let n=v0(e,t),r=w0(e,t);function a(i,o,l,u=!1){return{conv0:u?n(i,o,3,`${l}/conv0`):r(i,o,`${l}/conv0`),conv1:r(o,o,`${l}/conv1`),conv2:r(o,o,`${l}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function s(i,o,l,u=!1){let{conv0:p,conv1:h,conv2:d}=a(i,o,l,u);return{conv0:p,conv1:h,conv2:d,conv3:r(o,o,`${l}/conv3`)}}}}function gF(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function yF(e,t){let n=Bo(e,t),r=gF(n),a=k0(n);return{extractDenseBlock3Params:function s(o,l=!1){return{conv0:l?r(`${o}/conv0`):a(`${o}/conv0`),conv1:a(`${o}/conv1`),conv2:a(`${o}/conv2`)}},extractDenseBlock4Params:function i(o,l=!1){return{conv0:l?r(`${o}/conv0`):a(`${o}/conv0`),conv1:a(`${o}/conv1`),conv2:a(`${o}/conv2`),conv3:a(`${o}/conv3`)}}}}var bF=class extends vs{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return W(()=>{let a=Mf(Vd(le(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return a=Mf(a,t.dense1),a=Mf(a,t.dense2),a=Mf(a,t.dense3),a=ya(a,[7,7],[2,2],"valid"),a})}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function gfe(e){let t=[],{extractDenseBlock4Params:n}=yF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return ws(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function mfe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),{extractDenseBlock4Params:a}=mF(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function I0(e,t){return W(()=>ee(Oe(e,t.weights),t.bias))}function xF(e){let t={},n={};return Object.keys(e).forEach(r=>{(r.startsWith("fc")?n:t)[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var vF=class extends vs{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Rf?this.faceFeatureExtractor.forwardInput(e):e;return I0(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function yfe(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=ks(e),i=cF(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=xF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function bfe(e){let t=[],n=Bo(e,t),a={fc:function r(s){return{weights:n(`${s}/weights`,2),bias:n(`${s}/bias`,1)}}("fc")};return ws(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},wF=["neutral","happy","sad","angry","fearful","disgusted","surprised"],S0=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);wF.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return wF.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}};function wfe(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof S0?a:function vfe(e){return e.expressions instanceof S0}(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(l=>l.probability>n),o=Hd(a)?a.detection.box.bottomLeft:r||new Je(0,0);new Af(i.map(l=>`${l.expression} (${Tf(l.probability)})`),o).draw(e)})}function N0(e){return Hd(e)&&e.landmarks instanceof Ud&&e.unshiftedLandmarks instanceof Ud&&e.alignedRect instanceof hr}function _0(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new hr(e.detection.score,a.rescale(s.reverse()),s),o=function kfe(e){let t=l=>180*l/Math.PI,n=(l,u)=>Math.sqrt((l._x-u._x)**2+(l._y-u._y)**2),r={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return r;let o=e._positions;return r.roll=((l,u)=>{let p=Math.hypot(u._x-l._x,u._y-l._y),d=Math.asin((u._y-l._y)/p),c=t(d);return Math.floor(90-c)*(u._x-l._x<0?-1:1)})(o[27],o[66]),r.pitch=((l,u,p)=>{let h=n(l,p),d={_x:(l._x+p._x)/2,_y:(l._y+p._y)/2},c=n(u,d),f=Math.atan(c/h);return Math.floor(t(f))*(d._y-u._y<0?-1:1)})(o[14],o[30],o[2]),r.yaw=(u=o[33],p=o[2],Math.floor(o[14]._x-u._x)-Math.floor(u._x-p._x)),r;var u,p}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var IF=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},SF=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new IF(t)}draw(e){let t=xs(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;n&&this.faceLandmarks instanceof tF&&(t.strokeStyle=s,t.lineWidth=a,gs(t,this.faceLandmarks.getJawOutline()),gs(t,this.faceLandmarks.getLeftEyeBrow()),gs(t,this.faceLandmarks.getRightEyeBrow()),gs(t,this.faceLandmarks.getNose()),gs(t,this.faceLandmarks.getLeftEye(),!0),gs(t,this.faceLandmarks.getRightEye(),!0),gs(t,this.faceLandmarks.getMouth(),!0)),r&&(t.strokeStyle=o,t.fillStyle=o,this.faceLandmarks.positions.forEach(u=>{t.beginPath(),t.arc(u.x,u.y,i,0,2*Math.PI),t.fill()}))}};function Ife(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof Ud?n:N0(n)?n.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new SF(r).draw(e)})}function NF(e,t,n){return ee(wn(e,t.filters,n,"same"),t.bias)}function T0(e,t,n=!0){let r=n?tt(e):e;return r=cr(r,t.separable_conv0,[1,1]),r=cr(tt(r),t.separable_conv1,[1,1]),r=Jt(r,[3,3],[2,2],"same"),r=ee(r,NF(e,t.expansion_conv,[2,2])),r}var Efe=class extends vs{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return W(()=>{let r=Vd(le(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),a=tt(NF(r,t.entry_flow.conv_in,[2,2]));return a=T0(a,t.entry_flow.reduction_block_0,!1),a=T0(a,t.entry_flow.reduction_block_1),Uu(this._numMainBlocks,0,1).forEach(s=>{a=function Cfe(e,t){let n=cr(tt(e),t.separable_conv0,[1,1]);return n=cr(tt(n),t.separable_conv1,[1,1]),n=cr(tt(n),t.separable_conv2,[1,1]),n=ee(n,e),n}(a,t.middle_flow[`main_block_${s}`])}),a=T0(a,t.exit_flow.reduction_block),a=tt(cr(a,t.exit_flow.separable_conv,[1,1])),a})}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return function Tfe(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function _fe(e,t){let n=Bo(e,t),r=gF(n),a=k0(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function s(o){return{separable_conv0:a(`${o}/separable_conv0`),separable_conv1:a(`${o}/separable_conv1`),expansion_conv:r(`${o}/expansion_conv`)}},extractMainBlockParams:function i(o){return{separable_conv0:a(`${o}/separable_conv0`),separable_conv1:a(`${o}/separable_conv1`),separable_conv2:a(`${o}/separable_conv2`)}}}}(e,n),p={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},h={};Uu(t,0,1).forEach(m=>{h[`main_block_${m}`]=i(`middle_flow/main_block_${m}`)});let f={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return ws(e,n),{params:{entry_flow:p,middle_flow:h,exit_flow:f},paramMappings:n}}(e,this._numMainBlocks)}extractParams(e){return function Nfe(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=ks(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function Sfe(e,t){let n=v0(e,t),r=w0(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function a(i,o,l){return{separable_conv0:r(i,o,`${l}/separable_conv0`),separable_conv1:r(o,o,`${l}/separable_conv1`),expansion_conv:n(i,o,1,`${l}/expansion_conv`)}},extractMainBlockParams:function s(i,o){return{separable_conv0:r(i,i,`${o}/separable_conv0`),separable_conv1:r(i,i,`${o}/separable_conv1`),separable_conv2:r(i,i,`${o}/separable_conv2`)}}}}(r,n),d={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};Uu(t,0,1).forEach(y=>{c[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let g={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:d,middle_flow:c,exit_flow:g}}}(e,this._numMainBlocks)}},Ffe=(e=>(e.FEMALE="female",e.MALE="male",e))(Ffe||{}),_F=class extends vF{postProcess(e,t,n){let r=n.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=r.length;return W(()=>{let s=(u,p)=>Wt([Gn([68],u,"float32"),Gn([68],p,"float32")],1).as2D(1,136).as1D(),i=(u,p)=>{let{width:h,height:d}=r[u];return p(h,d)?Math.abs(h-d)/2:0};return e.mul(Gn([a,136],t,"float32")).sub(Wt(Array.from(Array(a),(u,p)=>s((u=>i(u,(p,h)=>p<h))(p),(u=>i(u,(p,h)=>h<p))(p))))).div(Wt(Array.from(Array(a),(u,p)=>s(r[p].width,r[p].height))))})}forwardInput(e){return W(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([n,r])=>({height:n,width:r})))})}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}detectLandmarks(e){var t=this;return(0,R.Z)(function*(){let n=yield Cn(e),r=W(()=>$t(t.forwardInput(n))),a=yield Promise.all(r.map(function(){var s=(0,R.Z)(function*(i,o){let l=Array.from(i.dataSync()),u=l.filter((h,d)=>Xv(d)),p=l.filter((h,d)=>!Xv(d));return new tF(Array(68).fill(0).map((h,d)=>new Je(u[d],p[d])),{height:n.getInputHeight(o),width:n.getInputWidth(o)})});return function(i,o){return s.apply(this,arguments)}}()));return r.forEach(s=>s.dispose()),n.isBatchInput?a:a[0]})()}getClassifierChannelsOut(){return 136}},Lfe=class extends vs{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return W(()=>{let a=x0(Vd(le(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return a=x0(a,t.dense1),a=x0(a,t.dense2),a=ya(a,[14,14],[2,2],"valid"),a})}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function Mfe(e){let t=[],{extractDenseBlock3Params:n}=yF(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return ws(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function Ofe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),{extractDenseBlock3Params:a}=mF(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function C0(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=wn(e,s,n,a);return o=ee(o,i),o=function Pfe(e,t){return ee(P(e,t.weights),t.biases)}(o,t.scale),r?tt(o):o}function TF(e,t){return C0(e,t,[1,1],!1)}function CF(e,t){return C0(e,t,[2,2],!0,"valid")}function Wfe(e,t){function s(o,l,u,p){let h=function r(o,l,u,p){let h=function n(o,l,u){let p=e(o),h=p.length/(l*u*u);if(JA(h))throw new Error(`depth has to be an integer: ${h}, weights.length: ${p.length}, numFilters: ${l}, filterSize: ${u}`);return W(()=>Le(Qa(p,[l,h,u,u]),[2,3,1,0]))}(o,l,u),d=nt(e(l));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/bias`}),{filters:h,bias:d}}(o,l,u,`${p}/conv`),d=function a(o,l){let u=nt(e(o)),p=nt(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:u,biases:p}}(l,`${p}/scale`);return{conv:h,scale:d}}return{extractConvLayerParams:s,extractResidualLayerParams:function i(o,l,u,p,h=!1){return{conv1:s((h?.5:1)*o,l,u,`${p}/conv1`),conv2:s(o,l,u,`${p}/conv2`)}}}}function pa(e,t){let n=function Bfe(e,t){return C0(e,t,[1,1],!0)}(e,t.conv1);return n=TF(n,t.conv2),n=ee(n,e),n=tt(n),n}function Of(e,t){let n=CF(e,t.conv1);n=TF(n,t.conv2);let r=ya(e,2,2,"valid"),a=_t(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let o=_t(i);n=at([n,o],1);let l=[...n.shape];l[2]=1;let u=_t(l);n=at([n,u],2)}return r=s?at([r,a],3):r,n=ee(r,n),n=tt(n),n}function da(e,t,n){return W(()=>{let r=wn(e,t.filters,n,"same");return r=ee(r,t.batch_norm_offset),hn(r,0,6)})}function Qfe(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),p=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(p-l)*(h-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,p),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function Gu(e,t){return W(()=>{let n=e.shape[0];return{boxPredictionEncoding:B(jd(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:B(jd(e,t.class_predictor),[n,-1,3])}})}var Hu=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},ome=[new Je(.738768,.874946),new Je(2.42204,2.65704),new Je(4.30971,7.04493),new Je(10.246,4.59428),new Je(12.6868,11.8741)],lme=[new Je(1.603231,2.094468),new Je(6.041143,7.080126),new Je(2.882459,3.518061),new Je(4.266906,5.178857),new Je(9.041765,10.66308)],ume=[117.001,114.697,97.404],Lf=e=>"number"==typeof e;function E0(e){return W(()=>{let t=P(e,we(.10000000149011612));return ee(tt(ce(e,t)),t)})}function Is(e,t){return W(()=>{let n=Or(e,[[0,0],[1,1],[1,1],[0,0]]);return n=wn(n,t.conv.filters,[1,1],"valid"),n=ce(n,t.bn.sub),n=P(n,t.bn.truediv),n=ee(n,t.conv.bias),E0(n)})}function Ss(e,t){return W(()=>{let n=Or(e,[[0,0],[1,1],[1,1],[0,0]]);return n=hu(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=ee(n,t.bias),E0(n)})}var zf=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},DF=class extends vs{constructor(e){super("TinyYolov2"),function hme(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Lf(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>"string"==typeof t))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>Lf(t.x)&&Lf(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(Lf)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=Is(e,t.conv0);return n=Jt(n,[2,2],[2,2],"same"),n=Is(n,t.conv1),n=Jt(n,[2,2],[2,2],"same"),n=Is(n,t.conv2),n=Jt(n,[2,2],[2,2],"same"),n=Is(n,t.conv3),n=Jt(n,[2,2],[2,2],"same"),n=Is(n,t.conv4),n=Jt(n,[2,2],[2,2],"same"),n=Is(n,t.conv5),n=Jt(n,[2,2],[1,1],"same"),n=Is(n,t.conv6),n=Is(n,t.conv7),jd(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?E0(jd(e,t.conv0,"valid",!1)):Ss(e,t.conv0);return n=Jt(n,[2,2],[2,2],"same"),n=Ss(n,t.conv1),n=Jt(n,[2,2],[2,2],"same"),n=Ss(n,t.conv2),n=Jt(n,[2,2],[2,2],"same"),n=Ss(n,t.conv3),n=Jt(n,[2,2],[2,2],"same"),n=Ss(n,t.conv4),n=Jt(n,[2,2],[2,2],"same"),n=Ss(n,t.conv5),n=Jt(n,[2,2],[1,1],"same"),n=t.conv6?Ss(n,t.conv6):n,n=t.conv7?Ss(n,t.conv7):n,jd(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return W(()=>{let r=le(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?Vd(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}forward(e,t){var n=this;return(0,R.Z)(function*(){return n.forwardInput(yield Cn(e),t)})()}detect(e,t={}){var n=this;return(0,R.Z)(function*(){let{inputSize:r,scoreThreshold:a}=new zf(t),s=yield Cn(e),i=yield n.forwardInput(s,r),o=W(()=>$t(i)[0].expandDims()),l={width:s.getInputWidth(0),height:s.getInputHeight(0)},u=yield n.extractBoxes(o,s.getReshapedInputDimensions(0),a);i.dispose(),o.dispose();let p=u.map(f=>f.box),h=u.map(f=>f.score),d=u.map(f=>f.classScore),c=u.map(f=>n.config.classes[f.label]);return function Yce(e,t,n,r=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,l=[];for(let u=0;u<o.length;u++)l.push(Xce(e[i],e[o[u]],r));a=a.filter((u,p)=>l[p]<=n)}return s}(p.map(f=>f.rescale(r)),h,n.config.iouThreshold,!0).map(f=>new Yv(h[f],d[f],c[f],p[f],l))})()}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function gme(e,t){let i,n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=function mme(e,t){let n=Bo(e,t);function a(o){return{filters:n(`${o}/filters`,4),bias:n(`${o}/bias`,1)}}return{extractConvParams:a,extractConvWithBatchNormParams:function s(o){let l=a(`${o}/conv`),u=function r(o){return{sub:n(`${o}/sub`,1),truediv:n(`${o}/truediv`,1)}}(`${o}/bn`);return{conv:l,bn:u}},extractSeparableConvParams:k0(n)}}(e,n);if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return ws(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||DF.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function fme(e,t,n,r){let p,{extractWeights:a,getRemainingWeights:s}=ks(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:u}=function cme(e,t){let n=v0(e,t),s=w0(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function a(i,o,l){let u=n(i,o,3,`${l}/conv`),p=function r(i,o){let l=nt(e(i)),u=nt(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:u}}(o,`${l}/bn`);return{conv:u,bn:p}},extractSeparableConvParams:s}}(a,i);if(t.withSeparableConvs){let[h,d,c,f,m,g,y,b,x]=r;p={conv0:t.isFirstLayerConv2d?o(h,d,3,"conv0"):u(h,d,"conv0"),conv1:u(d,c,"conv1"),conv2:u(c,f,"conv2"),conv3:u(f,m,"conv3"),conv4:u(m,g,"conv4"),conv5:u(g,y,"conv5"),conv6:b?u(y,b,"conv6"):void 0,conv7:x?u(b,x,"conv7"):void 0,conv8:o(x||b||y,5*n,1,"conv8")}}else{let[h,d,c,f,m,g,y,b,x]=r;p={conv0:l(h,d,"conv0"),conv1:l(d,c,"conv1"),conv2:l(c,f,"conv2"),conv3:l(f,m,"conv3"),conv4:l(m,g,"conv4"),conv5:l(g,y,"conv5"),conv6:l(y,b,"conv6"),conv7:l(b,x,"conv7"),conv8:o(x,5*n,1,"conv8")}}if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{params:p,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}extractBoxes(e,t,n){var r=this;return(0,R.Z)(function*(){let{width:a,height:s}=t,i=Math.max(a,s),o=i/a,l=i/s,u=e.shape[1],p=r.config.anchors.length,[h,d,c]=W(()=>{let y=e.reshape([u,u,p,r.boxEncodingSize]);return[y.slice([0,0,0,0],[u,u,p,4]),y.slice([0,0,0,4],[u,u,p,1]),r.withClassScores?Ja(y.slice([0,0,0,5],[u,u,p,r.config.classes.length]),3):we(0)]}),f=[],m=yield d.array(),g=yield h.array();for(let y=0;y<u;y++)for(let b=0;b<u;b++)for(let x=0;x<p;x++){let v=Qv(m[y][b][x][0]);if(!n||v>n){let I=(b+Qv(g[y][b][x][0]))/u*o,_=(y+Qv(g[y][b][x][1]))/u*l,T=Math.exp(g[y][b][x][2])*r.config.anchors[x].x/u*o,E=Math.exp(g[y][b][x][3])*r.config.anchors[x].y/u*l,A=I-T/2,D=_-E/2,F={row:y,col:b,anchor:x},{classScore:S,label:O}=r.withClassScores?yield r.extractPredictedClass(c,F):{classScore:1,label:0};f.push({box:new QA(A,D,A+T,D+E),score:v,classScore:v*S,label:O,...F})}}return h.dispose(),d.dispose(),c.dispose(),f})()}extractPredictedClass(e,t){var n=this;return(0,R.Z)(function*(){let{row:r,col:a,anchor:s}=t,i=yield e.array();return Array(n.config.classes.length).fill(0).map((o,l)=>i[r][a][s][l]).map((o,l)=>({classScore:o,label:l})).reduce((o,l)=>o.classScore>l.classScore?o:l)})()}},$0=DF;$0.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var OF=class extends zf{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},qd=class{then(e){var t=this;return(0,R.Z)(function*(){return e(yield t.run())})()}run(){return(0,R.Z)(function*(){throw new Error("ComposableTask - run is not implemented")})()}};function Pf(e,t,n,r){return A0.apply(this,arguments)}function A0(){return A0=(0,R.Z)(function*(e,t,n,r,a=(({alignedRect:s})=>s)){let s=e.map(l=>N0(l)?a(l):l.detection),i=r||(t instanceof $e?yield d0(t,s):yield u0(t,s)),o=yield n(i);return i.forEach(l=>l instanceof $e&&l.dispose()),o}),A0.apply(this,arguments)}var bme=[new Je(1.603231,2.094468),new Je(6.041143,7.080126),new Je(2.882459,3.518061),new Je(4.266906,5.178857),new Je(9.041765,10.66308)],xme=[117.001,114.697,97.404],pt={ssdMobilenetv1:new class extends vs{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return W(()=>{let n=le(e.toBatchTensor(512,!1),"float32"),a=function Yfe(e,t){return W(()=>{let n,r=da(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=function Jfe(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}(i);r=function Xfe(e,t,n){return W(()=>{let r=lo(e,t.filters,n,"same");return r=io(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),hn(r,0,6)})}(r,a.depthwise_conv,o),r=da(r,a.pointwise_conv,[1,1]),11===i&&(n=r)}),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}(ce(fe(n,127.5),1),t.mobilenetv1),{boxPredictions:s,classPredictions:i}=function ame(e,t,n){return W(()=>{let r=da(e,n.conv_0,[1,1]),a=da(r,n.conv_1,[2,2]),s=da(a,n.conv_2,[1,1]),i=da(s,n.conv_3,[2,2]),o=da(i,n.conv_4,[1,1]),l=da(o,n.conv_5,[2,2]),u=da(l,n.conv_6,[1,1]),p=da(u,n.conv_7,[2,2]),h=Gu(t,n.box_predictor_0),d=Gu(e,n.box_predictor_1),c=Gu(a,n.box_predictor_2),f=Gu(i,n.box_predictor_3),m=Gu(l,n.box_predictor_4),g=Gu(p,n.box_predictor_5);return{boxPredictions:at([h.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:at([h.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}})}(a.out,a.conv11,t.prediction_layer);return function rme(e,t,n){return W(()=>{let r=e.shape[0],a=function nme(e,t){let{sizes:n,centers:r}=function tme(e){let t=$t(Le(e,[1,0])),n=[ce(t[2],t[0]),ce(t[3],t[1])];return{sizes:n,centers:[ee(t[0],fe(n[0],2)),ee(t[1],fe(n[1],2))]}}(e),a=$t(Le(t,[1,0])),s=fe(P(kn(fe(a[2],5)),n[0]),2),i=ee(P(fe(a[0],10),n[0]),r[0]),o=fe(P(kn(fe(a[3],5)),n[1]),2),l=ee(P(fe(a[1],10),n[1]),r[1]);return Le(Wt([ce(i,s),ce(l,o),ee(i,s),ee(l,o)]),[1,0])}(B(jn(n.extra_dim,[r,1,1]),[-1,4]),B(e,[-1,4]));a=B(a,[r,a.shape[0]/r,4]);let s=kr(Ve(t,[0,0,1],[-1,-1,-1])),i=Ve(s,[0,0,0],[-1,-1,1]);return i=B(i,[r,i.shape[1]]),{boxes:$t(a),scores:$t(i)}})}(s,i,t.output_layer)})}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}locateFaces(e,t={}){var n=this;return(0,R.Z)(function*(){let{maxResults:r,minConfidence:a}=new Hu(t),s=yield Cn(e),{boxes:i,scores:o}=n.forwardInput(s),l=i[0],u=o[0];for(let b=1;b<i.length;b++)i[b].dispose(),o[b].dispose();let p=Array.from(u.dataSync()),h=function eme(e,t,n,r,a){let i=Math.min(n,e.shape[0]),o=t.map((p,h)=>({score:p,boxIndex:h})).filter(p=>p.score>a).sort((p,h)=>h.score-p.score),l=p=>p<=r?1:0,u=[];return o.forEach(p=>{if(u.length>=i)return;let h=p.score;for(let d=u.length-1;d>=0;--d){let c=Qfe(e,p.boxIndex,u[d]);if(0!==c&&(p.score*=l(c),p.score<=a))break}h===p.score&&u.push(p.boxIndex)}),u}(l,p,r,.5,a),d=s.getReshapedInputDimensions(0),c=s.inputSize,f=c/d.width,m=c/d.height,g=l.arraySync(),y=h.map(b=>{let[x,v]=[Math.max(0,g[b][0]),Math.min(1,g[b][2])].map(T=>T*m),[I,_]=[Math.max(0,g[b][1]),Math.min(1,g[b][3])].map(T=>T*f);return new hr(p[b],new eF(I,x,_-I,v-x),{height:s.getInputHeight(0),width:s.getInputWidth(0)})});return l.dispose(),u.dispose(),y})()}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return function Kfe(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function qfe(e,t){let n=Bo(e,t);function r(u,p,h){return{filters:n(`${u}/Conv2d_${p}_pointwise/weights`,4,`${h}/filters`),batch_norm_offset:n(`${u}/Conv2d_${p}_pointwise/convolution_bn_offset`,1,`${h}/batch_norm_offset`)}}function a(u){let p=`mobilenetv1/conv_${u}`,h=`MobilenetV1/Conv2d_${u}_depthwise`,d=`${p}/depthwise_conv`,c=`${p}/pointwise_conv`;return{depthwise_conv:{filters:n(`${h}/depthwise_weights`,4,`${d}/filters`),batch_norm_scale:n(`${h}/BatchNorm/gamma`,1,`${d}/batch_norm_scale`),batch_norm_offset:n(`${h}/BatchNorm/beta`,1,`${d}/batch_norm_offset`),batch_norm_mean:n(`${h}/BatchNorm/moving_mean`,1,`${d}/batch_norm_mean`),batch_norm_variance:n(`${h}/BatchNorm/moving_variance`,1,`${d}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",u,c)}}function i(u,p){return{filters:n(`${u}/weights`,4,`${p}/filters`),bias:n(`${u}/biases`,1,`${p}/bias`)}}function o(u){return{box_encoding_predictor:i(`Prediction/BoxPredictor_${u}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${u}/box_encoding_predictor`),class_predictor:i(`Prediction/BoxPredictor_${u}/ClassPredictor`,`prediction_layer/box_predictor_${u}/class_predictor`)}}return{extractMobilenetV1Params:function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Wd(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return ws(e,t),{params:s,paramMappings:t}}(e)}extractParams(e){return function jfe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=function Hfe(e,t){function r(l,u,p,h,d){let c=Qa(e(l*u*p*p),[p,p,l,u]),f=nt(e(u));return t.push({paramPath:`${h}/filters`},{paramPath:`${h}/${d?"batch_norm_offset":"bias"}`}),{filters:c,bias:f}}function a(l,u,p,h){let{filters:d,bias:c}=r(l,u,p,h,!0);return{filters:d,batch_norm_offset:c}}function s(l,u,p){let h=function n(l,u){let p=Qa(e(9*l),[3,3,l,1]),h=nt(e(l)),d=nt(e(l)),c=nt(e(l)),f=nt(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/batch_norm_scale`},{paramPath:`${u}/batch_norm_offset`},{paramPath:`${u}/batch_norm_mean`},{paramPath:`${u}/batch_norm_variance`}),{filters:p,batch_norm_scale:h,batch_norm_offset:d,batch_norm_mean:c,batch_norm_variance:f}}(l,`${p}/depthwise_conv`);return{depthwise_conv:h,pointwise_conv:a(l,u,1,`${p}/pointwise_conv`)}}return{extractMobilenetV1Params:function i(){return{conv_0:a(3,32,3,"mobilenetv1/conv_0"),conv_1:s(32,64,"mobilenetv1/conv_1"),conv_2:s(64,128,"mobilenetv1/conv_2"),conv_3:s(128,128,"mobilenetv1/conv_3"),conv_4:s(128,256,"mobilenetv1/conv_4"),conv_5:s(256,256,"mobilenetv1/conv_5"),conv_6:s(256,512,"mobilenetv1/conv_6"),conv_7:s(512,512,"mobilenetv1/conv_7"),conv_8:s(512,512,"mobilenetv1/conv_8"),conv_9:s(512,512,"mobilenetv1/conv_9"),conv_10:s(512,512,"mobilenetv1/conv_10"),conv_11:s(512,512,"mobilenetv1/conv_11"),conv_12:s(512,1024,"mobilenetv1/conv_12"),conv_13:s(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function o(){return{conv_0:a(1024,256,1,"prediction_layer/conv_0"),conv_1:a(256,512,3,"prediction_layer/conv_1"),conv_2:a(512,128,1,"prediction_layer/conv_2"),conv_3:a(128,256,3,"prediction_layer/conv_3"),conv_4:a(256,128,1,"prediction_layer/conv_4"),conv_5:a(128,256,3,"prediction_layer/conv_5"),conv_6:a(256,64,1,"prediction_layer/conv_6"),conv_7:a(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:r(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:r(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:r(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:r(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:r(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}(n,t),i=a(),o=s(),l={extra_dim:rc(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}},tinyFaceDetector:new class extends $0{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:bme,meanRgb:xme,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}locateFaces(e,t){var n=this;return(0,R.Z)(function*(){return(yield n.detect(e,t)).map(r=>new hr(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))})()}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},tinyYolov2:new class extends $0{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:lme,meanRgb:ume}:{anchors:ome,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}locateFaces(e,t){var n=this;return(0,R.Z)(function*(){return(yield n.detect(e,t)).map(r=>new hr(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))})()}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},faceLandmark68Net:new class extends _F{constructor(e=new bF){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}},faceLandmark68TinyNet:new class extends _F{constructor(e=new Lfe){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new class extends vs{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return W(()=>{let a=CF(Vd(le(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);a=Jt(a,3,2,"valid"),a=pa(a,t.conv32_1),a=pa(a,t.conv32_2),a=pa(a,t.conv32_3),a=Of(a,t.conv64_down),a=pa(a,t.conv64_1),a=pa(a,t.conv64_2),a=pa(a,t.conv64_3),a=Of(a,t.conv128_down),a=pa(a,t.conv128_1),a=pa(a,t.conv128_2),a=Of(a,t.conv256_down),a=pa(a,t.conv256_1),a=pa(a,t.conv256_2),a=Of(a,t.conv256_down_out);let s=a.mean([1,2]);return Oe(s,t.fc)})}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}computeFaceDescriptor(e){var t=this;return(0,R.Z)(function*(){var n;if(null!=(n=e?.shape)&&n.some(i=>i<=0))return new Float32Array(128);let r=yield Cn(e),a=W(()=>$t(t.forwardInput(r))),s=yield Promise.all(a.map(i=>i.data()));return a.forEach(i=>i.dispose()),r.isBatchInput?s:s[0]})()}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function Gfe(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=function Ufe(e,t){let n=Bo(e,t);function a(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),u=function r(i){return{weights:n(`${i}/scale/weights`,1),biases:n(`${i}/scale/biases`,1)}}(i);return{conv:{filters:o,bias:l},scale:u}}return{extractConvLayerParams:a,extractResidualLayerParams:function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}}}(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),p=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!XA(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:p,conv64_3:h,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return ws(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function Vfe(e){let{extractWeights:t,getRemainingWeights:n}=ks(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=Wfe(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),p=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),I=W(()=>Le(Qr(t(32768),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:p,conv64_1:h,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:I},paramMappings:r}}(e)}},faceExpressionNet:new class extends vF{constructor(e=new bF){super("FaceExpressionNet",e)}forwardInput(e){return W(()=>Ja(this.runNet(e)))}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}predictExpressions(e){var t=this;return(0,R.Z)(function*(){let n=yield Cn(e),r=yield t.forwardInput(n),a=yield Promise.all($t(r).map(function(){var i=(0,R.Z)(function*(o){let l=o.dataSync();return o.dispose(),l});return function(o){return i.apply(this,arguments)}}()));r.dispose();let s=a.map(i=>new S0(i));return n.isBatchInput?s:s[0]})()}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends vs{constructor(e=new Efe(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Rf?this.faceFeatureExtractor.forwardInput(e):e,r=ya(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:I0(r,t.fc.age).as1D(),gender:I0(r,t.fc.gender)}})}forwardInput(e){return W(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:Ja(n)}})}forward(e){var t=this;return(0,R.Z)(function*(){return t.forwardInput(yield Cn(e))})()}predictAgeAndGender(e){var t=this;return(0,R.Z)(function*(){let n=yield Cn(e),r=yield t.forwardInput(n),a=$t(r.age),s=$t(r.gender),i=a.map((l,u)=>({ageTensor:l,genderTensor:s[u]})),o=yield Promise.all(i.map(function(){var l=(0,R.Z)(function*({ageTensor:u,genderTensor:p}){let h=u.dataSync()[0],d=p.dataSync()[0],c=d>.5,f=c?"male":"female",m=c?d:1-d;return u.dispose(),p.dispose(),{age:h,gender:f,genderProbability:m}});return function(u){return l.apply(this,arguments)}}()));return r.age.dispose(),r.gender.dispose(),n.isBatchInput?o:o[0]})()}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function $fe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ks(e),a=cF(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=xF(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function Afe(e){let t=[],n=Bo(e,t);function r(s){return{weights:n(`${s}/weights`,2),bias:n(`${s}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return ws(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},vme=class extends qd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},D0=class extends vme{run(){var e=this;return(0,R.Z)(function*(){let t=yield e.parentTask,n=yield Pf(t,e.input,function(){var r=(0,R.Z)(function*(a){return Promise.all(a.map(s=>pt.faceExpressionNet.predictExpressions(s)))});return function(a){return r.apply(this,arguments)}}(),e.extractedFaces);return t.map((r,a)=>function kF(e,t){return{...e,expressions:t}}(r,n[a]))})()}withAgeAndGender(){return new L0(this,this.input)}},M0=class extends D0{withAgeAndGender(){return new z0(this,this.input)}withFaceDescriptors(){return new B0(this,this.input)}},wme=class extends qd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},L0=class extends wme{run(){var e=this;return(0,R.Z)(function*(){let t=yield e.parentTask,n=yield Pf(t,e.input,function(){var r=(0,R.Z)(function*(a){return Promise.all(a.map(s=>pt.ageGenderNet.predictAgeAndGender(s)))});return function(a){return r.apply(this,arguments)}}(),e.extractedFaces);return t.map((r,a)=>{let{age:s,gender:i,genderProbability:o}=n[a];return function AF(e,t){return{...e,age:t}}(function FF(e,t,n){return{...e,gender:t,genderProbability:n}}(r,i,o),s)})})()}withFaceExpressions(){return new D0(this,this.input)}},z0=class extends L0{withFaceExpressions(){return new M0(this,this.input)}withFaceDescriptors(){return new B0(this,this.input)}},kme=class extends qd{constructor(e,t){super(),this.parentTask=e,this.input=t}},B0=class extends kme{run(){var e=this;return(0,R.Z)(function*(){let t=yield e.parentTask;return(yield Pf(t,e.input,n=>Promise.all(n.map(r=>pt.faceRecognitionNet.computeFaceDescriptor(r))),null,n=>n.landmarks.align(null,{useDlibAlignment:!0}))).map((n,r)=>function $F(e,t){return{...e,descriptor:t}}(t[r],n))})()}withFaceExpressions(){return new M0(this,this.input)}withAgeAndGender(){return new z0(this,this.input)}},Ime=class extends qd{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?pt.faceLandmark68TinyNet:pt.faceLandmark68Net}},Sme=class extends Ime{run(){var e=this;return(0,R.Z)(function*(){let t=yield e.parentTask,n=t.map(s=>s.detection),r=e.input instanceof $e?yield d0(e.input,n):yield u0(e.input,n),a=yield Promise.all(r.map(s=>e.landmarkNet.detectLandmarks(s)));return r.forEach(s=>s instanceof $e&&s.dispose()),t.filter((s,i)=>a[i]).map((s,i)=>_0(s,a[i]))})()}withFaceExpressions(){return new M0(this,this.input)}withAgeAndGender(){return new z0(this,this.input)}withFaceDescriptors(){return new B0(this,this.input)}},_me=class extends qd{constructor(e,t=new Hu){super(),this.input=e,this.options=t}},BF=class extends _me{run(){var e=this;return(0,R.Z)(function*(){let r,{input:t,options:n}=e;if(n instanceof OF)r=pt.tinyFaceDetector.locateFaces(t,n);else if(n instanceof Hu)r=pt.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof zf))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");r=pt.tinyYolov2.locateFaces(t,n)}return r})()}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(n=>e(n.map(r=>$f({},r)))).catch(n=>t(n))})}withFaceLandmarks(e=!1){return new Sme(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new D0(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new L0(this.runAndExtendWithFaceDetections(),this.input)}};function V0(e,t=new Hu){return new BF(e,t)}function WF(e,t){let{width:n,height:r}=new ys(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(a=>WF(a,{width:n,height:r}));if(N0(e)){let a=e.detection.forSize(n,r),s=e.unshiftedLandmarks.forSize(a.box.width,a.box.height);return _0($f(e,a),s)}return Hd(e)?$f(e,e.detection.forSize(n,r)):e instanceof Ud||e instanceof hr?e.forSize(n,r):e}},6741:Go=>{function En(It){var R=new Error("Cannot find module '"+It+"'");throw R.code="MODULE_NOT_FOUND",R}En.keys=()=>[],En.resolve=En,En.id=6741,Go.exports=En},5861:(Go,En,It)=>{"use strict";function R(jr,Fr,nr,xr,rr,qt,gn){try{var Rr=jr[qt](gn),ar=Rr.value}catch(yt){return void nr(yt)}Rr.done?Fr(ar):Promise.resolve(ar).then(xr,rr)}function Da(jr){return function(){var Fr=this,nr=arguments;return new Promise(function(xr,rr){var qt=jr.apply(Fr,nr);function gn(ar){R(qt,xr,rr,gn,Rr,"next",ar)}function Rr(ar){R(qt,xr,rr,gn,Rr,"throw",ar)}gn(void 0)})}}It.d(En,{Z:()=>Da})}}]);